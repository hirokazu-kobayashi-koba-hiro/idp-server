version: '3'

services:
  idp-server:
    build: ./
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
      - postgresql-reader
      - mysql
      - redis
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2g
        reservations:
          cpus: '0.5'
          memory: 1g
    environment:
      SERVER_URL: "http://localhost:8080"
      IDP_SERVER_API_KEY: $IDP_SERVER_API_KEY
      IDP_SERVER_API_SECRET: $IDP_SERVER_API_SECRET
      ENCRYPTION_KEY: $ENCRYPTION_KEY
      DB_WRITE_URL: jdbc:postgresql://postgresql:5432/idpserver
      DB_WRITE_USER_NAME: idpserver
      DB_WRITE_PASSWORD: idpserver
      DB_READ_URL: jdbc:postgresql://postgresql:5432/idpserver
      DB_READ_USER_NAME: idpserver
      DB_READ_PASSWORD: idpserver
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_ENABLE: "true"
      CACHE_TIME_TO_LIVE_SECOND: 300
      JAVA_TOOL_OPTIONS: >
        -Xms512m -Xmx2g
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=100

  nginx:
    build: ./nginx
    image: fapi-nginx
    ports:
      - "443:443"

  postgresql:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=idpserver
      - POSTGRES_PASSWORD=idpserver
      - POSTGRES_DB=idpserver
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]
  postgresql-reader:
    image: postgres:15
    container_name: postgres-reader
    environment:
      - POSTGRES_USER=idpserver
      - POSTGRES_PASSWORD=idpserver
      - POSTGRES_DB=idpserver_reader
    ports:
      - "54321:5432"
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: idpserver
      MYSQL_USER: idpserver
      MYSQL_PASSWORD: idpserver
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"

  mockoon:
    image: mockoon/cli:latest
    volumes:
      - ./mock/mockoon.json:/data/mock.json
    command: [
      "-d", "/data/mock.json",
      "-p", "4000"
    ]
    ports:
      - "4000:4000"
