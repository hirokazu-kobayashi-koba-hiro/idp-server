version: '3'

services:
  idp-server-1:
    build: ./
    container_name: idp-server-1
    ports:
      - "8081:8080"
    depends_on:
      - postgresql
      - postgresql-reader
      - mysql
      - redis
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2g
        reservations:
          cpus: '0.5'
          memory: 1g
    environment:
      SERVER_URL: "http://localhost:8081"
      IDP_SERVER_API_KEY: $IDP_SERVER_API_KEY
      IDP_SERVER_API_SECRET: $IDP_SERVER_API_SECRET
      ENCRYPTION_KEY: $ENCRYPTION_KEY
      DB_WRITER_URL: jdbc:postgresql://postgresql:5432/idpserver
      ADMIN_DB_WRITER_USER_NAME: idpserver
      ADMIN_DB_WRITER_PASSWORD: idpserver
      ADMIN_DB_READER_USER_NAME: idpserver
      ADMIN_DB_READER_PASSWORD: idpserver
      ADMIN_DB_WRITER_TIMEOUT: 2000
      ADMIN_DB_WRITER_MAX_POOL_SIZE: 10
      ADMIN_DB_WRITER_MIN_IDLE: 5
      ADMIN_DB_READER_TIMEOUT: 2000
      ADMIN_DB_READER_MAX_POOL_SIZE: 10
      ADMIN_DB_READER_MIN_IDLE: 5
      DB_WRITER_USER_NAME: idp_app_user
      DB_WRITER_PASSWORD: idp_app_user
      DB_WRITER_TIMEOUT: 2000
      DB_WRITER_MAX_POOL_SIZE: 30
      DB_WRITER_MIN_IDLE: 10
      DB_READER_URL: jdbc:postgresql://postgresql:5432/idpserver
      DB_READER_USER_NAME: idp_app_user
      DB_READER_PASSWORD: idp_app_user
      DB_READER_TIMEOUT: 2000
      DB_READER_MAX_POOL_SIZE: 30
      DB_READER_MIN_IDLE: 10
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_ENABLE: "true"
      CACHE_TIME_TO_LIVE_SECOND: 300
      JAVA_TOOL_OPTIONS: >
        -Xms512m -Xmx2g
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=100

  idp-server-2:
    build: ./
    container_name: idp-server-2
    ports:
      - "8082:8080"
    depends_on:
      - postgresql
      - postgresql-reader
      - mysql
      - redis
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2g
        reservations:
          cpus: '0.5'
          memory: 1g
    environment:
      SERVER_URL: "http://localhost:8082"
      IDP_SERVER_API_KEY: $IDP_SERVER_API_KEY
      IDP_SERVER_API_SECRET: $IDP_SERVER_API_SECRET
      ENCRYPTION_KEY: $ENCRYPTION_KEY
      DB_WRITER_URL: jdbc:postgresql://postgresql:5432/idpserver
      ADMIN_DB_WRITER_USER_NAME: idpserver
      ADMIN_DB_WRITER_PASSWORD: idpserver
      ADMIN_DB_READER_USER_NAME: idpserver
      ADMIN_DB_READER_PASSWORD: idpserver
      ADMIN_DB_WRITER_TIMEOUT: 2000
      ADMIN_DB_WRITER_MAX_POOL_SIZE: 10
      ADMIN_DB_WRITER_MIN_IDLE: 5
      ADMIN_DB_READER_TIMEOUT: 2000
      ADMIN_DB_READER_MAX_POOL_SIZE: 10
      ADMIN_DB_READER_MIN_IDLE: 5
      DB_WRITER_USER_NAME: idp_app_user
      DB_WRITER_PASSWORD: idp_app_user
      DB_WRITER_TIMEOUT: 2000
      DB_WRITER_MAX_POOL_SIZE: 30
      DB_WRITER_MIN_IDLE: 10
      DB_READER_URL: jdbc:postgresql://postgresql:5432/idpserver
      DB_READER_USER_NAME: idp_app_user
      DB_READER_PASSWORD: idp_app_user
      DB_READER_TIMEOUT: 2000
      DB_READER_MAX_POOL_SIZE: 30
      DB_READER_MIN_IDLE: 10
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_ENABLE: "true"
      CACHE_TIME_TO_LIVE_SECOND: 300
      JAVA_TOOL_OPTIONS: >
        -Xms512m -Xmx2g
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=100

  nginx:
    image: nginx:alpine
    container_name: load-balancer
    depends_on:
      - idp-server-1
      - idp-server-2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"

  postgresql:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=idpserver
      - POSTGRES_PASSWORD=idpserver
      - POSTGRES_DB=idpserver
    ports:
      - "5432:5432"
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]
    volumes:
      - ./libs/idp-server-database/postgresql/operation:/docker-entrypoint-initdb.d
  postgresql-reader:
    image: postgres:15
    container_name: postgres-reader
    environment:
      - POSTGRES_USER=idpserver
      - POSTGRES_PASSWORD=idpserver
      - POSTGRES_DB=idpserver_reader
    ports:
      - "54321:5432"
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]
    volumes:
      - ./libs/idp-server-database/postgresql/operation:/docker-entrypoint-initdb.d

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: idpserver
      MYSQL_USER: idpserver
      MYSQL_PASSWORD: idpserver
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"

  mockoon:
    image: mockoon/cli:latest
    volumes:
      - ./mock/mockoon.json:/data/mock.json
    command: [
      "-d", "/data/mock.json",
      "-p", "4000"
    ]
    ports:
      - "4000:4000"
