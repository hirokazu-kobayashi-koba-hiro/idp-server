window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":1,"numPendingTests":49,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":49,"startTime":1757145754252,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":49,"numTodoTests":0,"perfStats":{"end":1757145754787,"runtime":514,"slow":false,"start":1757145754273},"testFilePath":"/Users/hirokazu.kobayashi/work/idp-server/e2e/src/tests/spec/oidc_core_3_1_code.test.js","failureMessage":null,"testResults":[{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code success pattern","status":"pending","title":"success pattern"},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code success pattern prompt none","status":"pending","title":"success pattern prompt none"},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request scope REQUIRED. OpenID Connect requests MUST contain the openid scope value. If the openid scope value is not present, the behavior is entirely unspecified. Other scope values MAY be present. Scope values used that are not understood by an implementation SHOULD be ignored. See Sections 5.4 and 11 for additional scope values defined by this specification.","status":"pending","title":"scope REQUIRED. OpenID Connect requests MUST contain the openid scope value. If the openid scope value is not present, the behavior is entirely unspecified. Other scope values MAY be present. Scope values used that are not understood by an implementation SHOULD be ignored. See Sections 5.4 and 11 for additional scope values defined by this specification."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request response_type REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Authorization Code Flow, this value is code.","status":"pending","title":"response_type REQUIRED. OAuth 2.0 Response Type value that determines the authorization processing flow to be used, including what parameters are returned from the endpoints used. When using the Authorization Code Flow, this value is code."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request client_id REQUIRED. OAuth 2.0 Client Identifier valid at the Authorization Server.","status":"pending","title":"client_id REQUIRED. OAuth 2.0 Client Identifier valid at the Authorization Server."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request state RECOMMENDED. Opaque value used to maintain state between the request and the callback. Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation is done by cryptographically binding the value of this parameter with a browser cookie.","status":"pending","title":"state RECOMMENDED. Opaque value used to maintain state between the request and the callback. Typically, Cross-Site Request Forgery (CSRF, XSRF) mitigation is done by cryptographically binding the value of this parameter with a browser cookie."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request response_mode OPTIONAL. Informs the Authorization Server of the mechanism to be used for returning parameters from the Authorization Endpoint. This use of this parameter is NOT RECOMMENDED when the Response Mode that would be requested is the default mode specified for the Response Type.","status":"pending","title":"response_mode OPTIONAL. Informs the Authorization Server of the mechanism to be used for returning parameters from the Authorization Endpoint. This use of this parameter is NOT RECOMMENDED when the Response Mode that would be requested is the default mode specified for the Response Type."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request nonce OPTIONAL. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the nonce values used to prevent attackers from guessing values. For implementation notes, see Section 15.5.2.","status":"pending","title":"nonce OPTIONAL. String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. Sufficient entropy MUST be present in the nonce values used to prevent attackers from guessing values. For implementation notes, see Section 15.5.2."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request display OPTIONAL. ASCII string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User. ","status":"pending","title":"display OPTIONAL. ASCII string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User. "},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request prompt OPTIONAL. Space delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent. ","status":"pending","title":"prompt OPTIONAL. Space delimited, case sensitive list of ASCII string values that specifies whether the Authorization Server prompts the End-User for reauthentication and consent. "},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request prompt none The Authorization Server MUST NOT display any authentication or consent user interface pages. An error is returned if an End-User is not already authenticated or the Client does not have pre-configured consent for the requested Claims or does not fulfill other conditions for processing the request. The error code will typically be login_required, interaction_required, or another code defined in Section 3.1.2.6. This can be used as a method to check for existing authentication and/or consent. ","status":"pending","title":"prompt none The Authorization Server MUST NOT display any authentication or consent user interface pages. An error is returned if an End-User is not already authenticated or the Client does not have pre-configured consent for the requested Claims or does not fulfill other conditions for processing the request. The error code will typically be login_required, interaction_required, or another code defined in Section 3.1.2.6. This can be used as a method to check for existing authentication and/or consent. "},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request prompt login The Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot reauthenticate the End-User, it MUST return an error, typically login_required.","status":"pending","title":"prompt login The Authorization Server SHOULD prompt the End-User for reauthentication. If it cannot reauthenticate the End-User, it MUST return an error, typically login_required."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request prompt consent The Authorization Server SHOULD prompt the End-User for consent before returning information to the Client. If it cannot obtain consent, it MUST return an error, typically consent_required.","status":"pending","title":"prompt consent The Authorization Server SHOULD prompt the End-User for consent before returning information to the Client. If it cannot obtain consent, it MUST return an error, typically consent_required."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request prompt select_account The Authorization Server SHOULD prompt the End-User to select a user account. This enables an End-User who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current sessions for. If it cannot obtain an account selection choice made by the End-User, it MUST return an error, typically account_selection_required.","status":"pending","title":"prompt select_account The Authorization Server SHOULD prompt the End-User to select a user account. This enables an End-User who has multiple accounts at the Authorization Server to select amongst the multiple accounts that they might have current sessions for. If it cannot obtain an account selection choice made by the End-User, it MUST return an error, typically account_selection_required."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request If this parameter contains none with any other value, an error is returned.","status":"pending","title":"If this parameter contains none with any other value, an error is returned."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.1.  Authentication Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.1.  Authentication Request max_age OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time in seconds since the last time the End-User was actively authenticated by the OP. If the elapsed time is greater than this value, the OP MUST attempt to actively re-authenticate the End-User. (The max_age request parameter corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] max_auth_age request parameter.) When max_age is used, the ID Token returned MUST include an auth_time Claim Value.","status":"pending","title":"max_age OPTIONAL. Maximum Authentication Age. Specifies the allowable elapsed time in seconds since the last time the End-User was actively authenticated by the OP. If the elapsed time is greater than this value, the OP MUST attempt to actively re-authenticate the End-User. (The max_age request parameter corresponds to the OpenID 2.0 PAPE [OpenID.PAPE] max_auth_age request parameter.) When max_age is used, the ID Token returned MUST include an auth_time Claim Value."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.2.  Authentication Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.2.  Authentication Request Validation 1. The Authorization Server MUST validate all the OAuth 2.0 parameters according to the OAuth 2.0 specification.","status":"pending","title":"1. The Authorization Server MUST validate all the OAuth 2.0 parameters according to the OAuth 2.0 specification."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.2.  Authentication Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.2.  Authentication Request Validation 2. Verify that a scope parameter is present and contains the openid scope value. (If no openid scope value is present, the request may still be a valid OAuth 2.0 request, but is not an OpenID Connect request.)","status":"pending","title":"2. Verify that a scope parameter is present and contains the openid scope value. (If no openid scope value is present, the request may still be a valid OAuth 2.0 request, but is not an OpenID Connect request.)"},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.2.  Authentication Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.2.  Authentication Request Validation 3. The Authorization Server MUST verify that all the REQUIRED parameters are present and their usage conforms to this specification.","status":"pending","title":"3. The Authorization Server MUST verify that all the REQUIRED parameters are present and their usage conforms to this specification."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.2.  Authentication Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.2.  Authentication Request Validation 4. If the sub (subject) Claim is requested with a specific value for the ID Token, the Authorization Server MUST only send a positive response if the End-User identified by that sub value has an active session with the Authorization Server or has been Authenticated as a result of the request. The Authorization Server MUST NOT reply with an ID Token or Access Token for a different user, even if they have an active session with the Authorization Server. Such a request can be made either using an id_token_hint parameter or by requesting a specific Claim Value as described in Section 5.5.1, if the claims parameter is supported by the implementation.","status":"pending","title":"4. If the sub (subject) Claim is requested with a specific value for the ID Token, the Authorization Server MUST only send a positive response if the End-User identified by that sub value has an active session with the Authorization Server or has been Authenticated as a result of the request. The Authorization Server MUST NOT reply with an ID Token or Access Token for a different user, even if they have an active session with the Authorization Server. Such a request can be made either using an id_token_hint parameter or by requesting a specific Claim Value as described in Section 5.5.1, if the claims parameter is supported by the implementation."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.3.  Authorization Server Authenticates End-User","The Authorization Server MUST attempt to Authenticate the End-User in the following cases:"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.3.  Authorization Server Authenticates End-User The Authorization Server MUST attempt to Authenticate the End-User in the following cases: The End-User is not already Authenticated.","status":"pending","title":"The End-User is not already Authenticated."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.3.  Authorization Server Authenticates End-User","The Authorization Server MUST attempt to Authenticate the End-User in the following cases:"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.3.  Authorization Server Authenticates End-User The Authorization Server MUST attempt to Authenticate the End-User in the following cases: The Authentication Request contains the prompt parameter with the value login. In this case, the Authorization Server MUST reauthenticate the End-User even if the End-User is already authenticated.\n","status":"pending","title":"The Authentication Request contains the prompt parameter with the value login. In this case, the Authorization Server MUST reauthenticate the End-User even if the End-User is already authenticated.\n"},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.3.  Authorization Server Authenticates End-User","The Authorization Server MUST NOT interact with the End-User in the following case:"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.3.  Authorization Server Authenticates End-User The Authorization Server MUST NOT interact with the End-User in the following case: The Authentication Request contains the prompt parameter with the value none. In this case, the Authorization Server MUST return an error if an End-User is not already Authenticated or could not be silently Authenticated.","status":"pending","title":"The Authentication Request contains the prompt parameter with the value none. In this case, the Authorization Server MUST return an error if an End-User is not already Authenticated or could not be silently Authenticated."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.5.  Successful Authentication Response"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.5.  Successful Authentication Response When using the Authorization Code Flow, the Authorization Response MUST return the parameters defined in Section 4.1.2 of OAuth 2.0 [RFC6749] by adding them as query parameters to the redirect_uri specified in the Authorization Request using the application/x-www-form-urlencoded format, unless a different Response Mode was specified.","status":"pending","title":"When using the Authorization Code Flow, the Authorization Response MUST return the parameters defined in Section 4.1.2 of OAuth 2.0 [RFC6749] by adding them as query parameters to the redirect_uri specified in the Authorization Request using the application/x-www-form-urlencoded format, unless a different Response Mode was specified."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.6.  Authentication Error Response"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.6.  Authentication Error Response login_required The Authorization Server requires End-User authentication. This error MAY be returned when the prompt parameter value in the Authentication Request is none, but the Authentication Request cannot be completed without displaying a user interface for End-User authentication.","status":"pending","title":"login_required The Authorization Server requires End-User authentication. This error MAY be returned when the prompt parameter value in the Authentication Request is none, but the Authentication Request cannot be completed without displaying a user interface for End-User authentication."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.2.6.  Authentication Error Response"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.2.6.  Authentication Error Response invalid_request_object The request parameter contains an invalid Request Object.","status":"pending","title":"invalid_request_object The request parameter contains an invalid Request Object."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.1.  Token Request"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.1.  Token Request A Client makes a Token Request by presenting its Authorization Grant (in the form of an Authorization Code) to the Token Endpoint using the grant_type value authorization_code, as described in Section 4.1.3 of OAuth 2.0 [RFC6749]. If the Client is a Confidential Client, then it MUST authenticate to the Token Endpoint using the authentication method registered for its client_id, as described in Section 9.","status":"pending","title":"A Client makes a Token Request by presenting its Authorization Grant (in the form of an Authorization Code) to the Token Endpoint using the grant_type value authorization_code, as described in Section 4.1.3 of OAuth 2.0 [RFC6749]. If the Client is a Confidential Client, then it MUST authenticate to the Token Endpoint using the authentication method registered for its client_id, as described in Section 9."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.2.  Token Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.2.  Token Request Validation Authenticate the Client if it was issued Client Credentials or if it uses another Client Authentication method, per Section 9.","status":"pending","title":"Authenticate the Client if it was issued Client Credentials or if it uses another Client Authentication method, per Section 9."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.2.  Token Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.2.  Token Request Validation Ensure the Authorization Code was issued to the authenticated Client.","status":"pending","title":"Ensure the Authorization Code was issued to the authenticated Client."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.2.  Token Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.2.  Token Request Validation Verify that the Authorization Code is valid.","status":"pending","title":"Verify that the Authorization Code is valid."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.2.  Token Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.2.  Token Request Validation If possible, verify that the Authorization Code has not been previously used.","status":"pending","title":"If possible, verify that the Authorization Code has not been previously used."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.2.  Token Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.2.  Token Request Validation Ensure that the redirect_uri parameter value is identical to the redirect_uri parameter value that was included in the initial Authorization Request. If the redirect_uri parameter value is not present when there is only one registered redirect_uri value, the Authorization Server MAY return an error (since the Client should have included the parameter) or MAY proceed without an error (since OAuth 2.0 permits the parameter to be omitted in this case).","status":"pending","title":"Ensure that the redirect_uri parameter value is identical to the redirect_uri parameter value that was included in the initial Authorization Request. If the redirect_uri parameter value is not present when there is only one registered redirect_uri value, the Authorization Server MAY return an error (since the Client should have included the parameter) or MAY proceed without an error (since OAuth 2.0 permits the parameter to be omitted in this case)."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.2.  Token Request Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.2.  Token Request Validation Verify that the Authorization Code used was issued in response to an OpenID Connect Authentication Request (so that an ID Token will be returned from the Token Endpoint).","status":"pending","title":"Verify that the Authorization Code used was issued in response to an OpenID Connect Authentication Request (so that an ID Token will be returned from the Token Endpoint)."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.3.  Successful Token Response"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.3.  Successful Token Response In addition to the response parameters specified by OAuth 2.0, the following parameters MUST be included in the response: id_token ID Token value associated with the authenticated session.","status":"pending","title":"In addition to the response parameters specified by OAuth 2.0, the following parameters MUST be included in the response: id_token ID Token value associated with the authenticated session."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.6.  ID Token"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.6.  ID Token at_hash　OPTIONAL. Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the access_token value, where the hash algorithm used is the hash algorithm used in the alg Header Parameter of the ID Token's JOSE Header. For instance, if the alg is RS256, hash the access_token value with SHA-256, then take the left-most 128 bits and base64url encode them. The at_hash value is a case sensitive string.","status":"pending","title":"at_hash　OPTIONAL. Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the access_token value, where the hash algorithm used is the hash algorithm used in the alg Header Parameter of the ID Token's JOSE Header. For instance, if the alg is RS256, hash the access_token value with SHA-256, then take the left-most 128 bits and base64url encode them. The at_hash value is a case sensitive string."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 1. If the ID Token is encrypted, decrypt it using the keys and algorithms that the Client specified during Registration that the OP was to use to encrypt the ID Token. If encryption was negotiated with the OP at Registration time and the ID Token is not encrypted, the RP SHOULD reject it.","status":"pending","title":"1. If the ID Token is encrypted, decrypt it using the keys and algorithms that the Client specified during Registration that the OP was to use to encrypt the ID Token. If encryption was negotiated with the OP at Registration time and the ID Token is not encrypted, the RP SHOULD reject it."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 2. The Issuer Identifier for the OpenID Provider (which is typically obtained during Discovery) MUST exactly match the value of the iss (issuer) Claim.","status":"pending","title":"2. The Issuer Identifier for the OpenID Provider (which is typically obtained during Discovery) MUST exactly match the value of the iss (issuer) Claim."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 3. The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified by the iss (issuer) Claim as an audience. The aud (audience) Claim MAY contain an array with more than one element. The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience, or if it contains additional audiences not trusted by the Client.","status":"pending","title":"3. The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified by the iss (issuer) Claim as an audience. The aud (audience) Claim MAY contain an array with more than one element. The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience, or if it contains additional audiences not trusted by the Client."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 4. If the ID Token contains multiple audiences, the Client SHOULD verify that an azp Claim is present.","status":"pending","title":"4. If the ID Token contains multiple audiences, the Client SHOULD verify that an azp Claim is present."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 5. If an azp (authorized party) Claim is present, the Client SHOULD verify that its client_id is the Claim Value.","status":"pending","title":"5. If an azp (authorized party) Claim is present, the Client SHOULD verify that its client_id is the Claim Value."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 6. If the ID Token is received via direct communication between the Client and the Token Endpoint (which it is in this flow), the TLS server validation MAY be used to validate the issuer in place of checking the token signature. The Client MUST validate the signature of all other ID Tokens according to JWS [JWS] using the algorithm specified in the JWT alg Header Parameter. The Client MUST use the keys provided by the Issuer.","status":"pending","title":"6. If the ID Token is received via direct communication between the Client and the Token Endpoint (which it is in this flow), the TLS server validation MAY be used to validate the issuer in place of checking the token signature. The Client MUST validate the signature of all other ID Tokens according to JWS [JWS] using the algorithm specified in the JWT alg Header Parameter. The Client MUST use the keys provided by the Issuer."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 7. The alg value SHOULD be the default of RS256 or the algorithm sent by the Client in the id_token_signed_response_alg parameter during Registration.","status":"pending","title":"7. The alg value SHOULD be the default of RS256 or the algorithm sent by the Client in the id_token_signed_response_alg parameter during Registration."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 8. If the JWT alg Header Parameter uses a MAC based algorithm such as HS256, HS384, or HS512, the octets of the UTF-8 representation of the client_secret corresponding to the client_id contained in the aud (audience) Claim are used as the key to validate the signature. For MAC based algorithms, the behavior is unspecified if the aud is multi-valued or if an azp value is present that is different than the aud value.","status":"pending","title":"8. If the JWT alg Header Parameter uses a MAC based algorithm such as HS256, HS384, or HS512, the octets of the UTF-8 representation of the client_secret corresponding to the client_id contained in the aud (audience) Claim are used as the key to validate the signature. For MAC based algorithms, the behavior is unspecified if the aud is multi-valued or if an azp value is present that is different than the aud value."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 9. The current time MUST be before the time represented by the exp Claim.","status":"pending","title":"9. The current time MUST be before the time represented by the exp Claim."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 10. The iat Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific.","status":"pending","title":"10. The iat Claim can be used to reject tokens that were issued too far away from the current time, limiting the amount of time that nonces need to be stored to prevent attacks. The acceptable range is Client specific."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 11. If a nonce value was sent in the Authentication Request, a nonce Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the nonce value for replay attacks. The precise method for detecting replay attacks is Client specific.","status":"pending","title":"11. If a nonce value was sent in the Authentication Request, a nonce Claim MUST be present and its value checked to verify that it is the same value as the one that was sent in the Authentication Request. The Client SHOULD check the nonce value for replay attacks. The precise method for detecting replay attacks is Client specific."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 12. If the acr Claim was requested, the Client SHOULD check that the asserted Claim Value is appropriate. The meaning and processing of acr Claim Values is out of scope for this specification.","status":"pending","title":"12. If the acr Claim was requested, the Client SHOULD check that the asserted Claim Value is appropriate. The meaning and processing of acr Claim Values is out of scope for this specification."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 13. If the auth_time Claim was requested, either through a specific request for this Claim or by using the max_age parameter, the Client SHOULD check the auth_time Claim value and request re-authentication if it determines too much time has elapsed since the last End-User authentication.","status":"pending","title":"13. If the auth_time Claim was requested, either through a specific request for this Claim or by using the max_age parameter, the Client SHOULD check the auth_time Claim value and request re-authentication if it determines too much time has elapsed since the last End-User authentication."},{"ancestorTitles":["OpenID Connect Core 1.0 incorporating errata set 1 code","3.1.3.7.  ID Token Validation","3.1.3.8.  Access Token Validation"],"duration":null,"failureMessages":[],"fullName":"OpenID Connect Core 1.0 incorporating errata set 1 code 3.1.3.7.  ID Token Validation 3.1.3.8.  Access Token Validation When using the Authorization Code Flow, if the ID Token contains an at_hash Claim, the Client MAY use it to validate the Access Token in the same manner as for the Implicit Flow, as defined in Section 3.2.2.9, but using the ID Token and Access Token returned from the Token Endpoint.","status":"pending","title":"When using the Authorization Code Flow, if the ID Token contains an at_hash Claim, the Client MAY use it to validate the Access Token in the same manner as for the Implicit Flow, as defined in Section 3.2.2.9, but using the ID Token and Access Token returned from the Token Endpoint."}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"/Users/hirokazu.kobayashi/work/idp-server/e2e/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":5,"noStackTrace":false,"nonFlagArgs":["src/tests/spec/oidc_core_3_1_code.test.js"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/hirokazu.kobayashi/work/idp-server/e2e/node_modules/jest-html-reporters/index.js",{"hideIcon":true,"pageTitle":"E2E Test Report","publicPath":"./test-result","filename":"index.html","expand":true}]],"rootDir":"/Users/hirokazu.kobayashi/work/idp-server/e2e","runTestsByPath":false,"seed":1808669973,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testNamePattern":"should display authorization view data","testPathPattern":"src/tests/spec/oidc_core_3_1_code.test.js","testSequencer":"/Users/hirokazu.kobayashi/work/idp-server/e2e/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1757145754792,"_reporterOptions":{"publicPath":"./test-result","filename":"index.html","expand":true,"pageTitle":"E2E Test Report","hideIcon":true,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false},"logInfoMapping":{},"attachInfos":{}})