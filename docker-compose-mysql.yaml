version: '3'

services:
  idp-server-1:
    build: .
    image: idp-server:latest
    container_name: idp-server-1
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      flyway-migrator:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2g
        reservations:
          cpus: '0.5'
          memory: 1g
    environment:
      SERVER_URL: "http://localhost:8081"
      IDP_SERVER_API_KEY: ${IDP_SERVER_API_KEY?IDP server API key is required. Set IDP_SERVER_API_KEY environment variable.}
      IDP_SERVER_API_SECRET: ${IDP_SERVER_API_SECRET?IDP server API secret is required. Set IDP_SERVER_API_SECRET environment variable.}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY?Encryption key is required. Set ENCRYPTION_KEY environment variable.}
      ADMIN_TENANT_ID: ${ADMIN_TENANT_ID:-67e7eae6-62b0-4500-9eff-87459f63fc66}
      DATABASE_TYPE: MYSQL
      DB_WRITER_URL: jdbc:mysql://mysql:3306/idpserver
      CONTROL_PLANE_DB_WRITER_URL: jdbc:mysql://mysql:3306/idpserver
      CONTROL_PLANE_DB_WRITER_USER_NAME: idpserver
      CONTROL_PLANE_DB_WRITER_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
      CONTROL_PLANE_DB_WRITER_TIMEOUT: 2000
      CONTROL_PLANE_DB_WRITER_MAX_POOL_SIZE: 10
      CONTROL_PLANE_DB_WRITER_MIN_IDLE: 5
      CONTROL_PLANE_DB_READER_URL: jdbc:mysql://mysql:3306/idpserver
      CONTROL_PLANE_DB_READER_USER_NAME: idpserver
      CONTROL_PLANE_DB_READER_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
      CONTROL_PLANE_DB_READER_TIMEOUT: 2000
      CONTROL_PLANE_DB_READER_MAX_POOL_SIZE: 10
      CONTROL_PLANE_DB_READER_MIN_IDLE: 5
      DB_WRITER_USER_NAME: idpserver
      DB_WRITER_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
      DB_WRITER_TIMEOUT: 2000
      DB_WRITER_MAX_POOL_SIZE: 30
      DB_WRITER_MIN_IDLE: 10
      DB_READER_URL: jdbc:mysql://mysql:3306/idpserver
      DB_READER_USER_NAME: idpserver
      DB_READER_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
      DB_READER_TIMEOUT: 2000
      DB_READER_MAX_POOL_SIZE: 30
      DB_READER_MIN_IDLE: 10
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_ENABLE: "true"
      CACHE_TIME_TO_LIVE_SECOND: 300
      IDP_SESSION_MODE: redis
      SPRING_SESSION_REDIS_CONFIGURE_ACTION: none
      SERVER_TOMCAT_THREADS_MAX: 300
      SERVER_TOMCAT_THREADS_MIN_SPARE: 50
      LOGGING_LEVEL_ROOT: info
      LOGGING_LEVEL_WEB: info
      LOGGING_LEVEL_IDP_SERVER_AUTHENTICATION_INTERACTORS: debug
      LOGGING_LEVEL_IDP_SERVER_PLATFORM: info
      LOGGING_LEVEL_IDP_SERVER_HTTP_REQUEST_EXECUTOR: debug
      JAVA_TOOL_OPTIONS: >
        -Xms512m -Xmx2g
        -XX:MaxGCPauseMillis=100

  idp-server-2:
    build: .
    image: idp-server:latest
    container_name: idp-server-2
    ports:
      - "8082:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      flyway-migrator:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2g
        reservations:
          cpus: '0.5'
          memory: 1g
    environment:
      SERVER_URL: "http://localhost:8082"
      IDP_SERVER_API_KEY: ${IDP_SERVER_API_KEY:-30113151-4ee1-4f6a-a1ac-cc1be9eaf695}
      IDP_SERVER_API_SECRET: ${IDP_SERVER_API_SECRET:-MTY5YjM3NmYtOTY0ZC00Nzg0LWIyOTMtOWQyNDhjMTkyNmIwCg==}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-JjN9c6N4STeA+g9d+TtBGp5MC3sbqOWs+S9qzJG42iY=}
      ADMIN_TENANT_ID: ${ADMIN_TENANT_ID:-67e7eae6-62b0-4500-9eff-87459f63fc66}
      DATABASE_TYPE: MYSQL
      DB_WRITER_URL: jdbc:mysql://mysql:3306/idpserver
      CONTROL_PLANE_DB_WRITER_URL: jdbc:mysql://mysql:3306/idpserver
      CONTROL_PLANE_DB_WRITER_USER_NAME: idpserver
      CONTROL_PLANE_DB_WRITER_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
      CONTROL_PLANE_DB_WRITER_TIMEOUT: 2000
      CONTROL_PLANE_DB_WRITER_MAX_POOL_SIZE: 10
      CONTROL_PLANE_DB_WRITER_MIN_IDLE: 5
      CONTROL_PLANE_DB_READER_URL: jdbc:mysql://mysql:3306/idpserver
      CONTROL_PLANE_DB_READER_USER_NAME: idpserver
      CONTROL_PLANE_DB_READER_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
      CONTROL_PLANE_DB_READER_TIMEOUT: 2000
      CONTROL_PLANE_DB_READER_MAX_POOL_SIZE: 10
      CONTROL_PLANE_DB_READER_MIN_IDLE: 5
      DB_WRITER_USER_NAME: idpserver
      DB_WRITER_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
      DB_WRITER_TIMEOUT: 2000
      DB_WRITER_MAX_POOL_SIZE: 30
      DB_WRITER_MIN_IDLE: 10
      DB_READER_URL: jdbc:mysql://mysql:3306/idpserver
      DB_READER_USER_NAME: idpserver
      DB_READER_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
      DB_READER_TIMEOUT: 2000
      DB_READER_MAX_POOL_SIZE: 30
      DB_READER_MIN_IDLE: 10
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_ENABLE: "true"
      CACHE_TIME_TO_LIVE_SECOND: 300
      IDP_SESSION_MODE: redis
      SPRING_SESSION_REDIS_CONFIGURE_ACTION: none
      SERVER_TOMCAT_THREADS_MAX: 300
      SERVER_TOMCAT_THREADS_MIN_SPARE: 50
      LOGGING_LEVEL_ROOT: info
      LOGGING_LEVEL_WEB: info
      LOGGING_LEVEL_IDP_SERVER_AUTHENTICATION_INTERACTORS: debug
      LOGGING_LEVEL_IDP_SERVER_PLATFORM: info
      LOGGING_LEVEL_IDP_SERVER_HTTP_REQUEST_EXECUTOR: debug
      JAVA_TOOL_OPTIONS: >
        -Xms512m -Xmx2g
        -XX:MaxGCPauseMillis=100

  nginx:
    image: nginx:alpine
    container_name: load-balancer
    depends_on:
      - idp-server-1
      - idp-server-2
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD?MySQL root password is required. Set MYSQL_ROOT_PASSWORD environment variable.}
      MYSQL_DATABASE: idpserver
      MYSQL_USER: idpserver
      MYSQL_PASSWORD: ${MYSQL_PASSWORD?MySQL password is required. Set MYSQL_PASSWORD environment variable.}
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  flyway-migrator:
    build:
      context: ./libs/idp-server-database
      dockerfile: Dockerfile-flyway
    image: idp-flyway-migrator:latest
    restart: "no"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_TYPE: mysql
      DB_URL: jdbc:mysql://mysql:3306/idpserver
      DB_USER_NAME: root
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD?MySQL root password is required. Set MYSQL_ROOT_PASSWORD environment variable.}
    command: [ "migrate" ]    # info / repair / clean

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"

  mockoon:
    image: mockoon/cli:latest
    volumes:
      - ./docker/mockoon/config.json:/data/config.json
    command: [
      "-d", "/data/config.json",
      "-p", "4000"
    ]
    ports:
      - "4000:4000"

  app-view:
    build:
      context: .
      dockerfile: docker/app-view/Dockerfile
    container_name: app-view
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_IDP_SERVER_URL: "http://localhost:8080"
    depends_on:
      - idp-server-1

volumes:
  mysql_data:
