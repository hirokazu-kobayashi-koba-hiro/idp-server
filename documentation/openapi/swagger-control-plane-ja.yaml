openapi: 3.0.3
info:
  title: idp-server コントロールプレーン API
  description: idp-server コントロールプレーン API 仕様書
  version: 1.0.0
  contact:
    name: idp-server OSS

servers:
  - url: http://localhost:8080

tags:
  - name: organization-tenant
    description: 組織レベルテナント管理
  - name: organization-client
    description: 組織レベルクライアント管理
  - name: organization-user
    description: 組織レベルユーザー管理
  - name: organization-authorization-server
    description: 組織レベル認可サーバー管理
  - name: organization-role
    description: 組織レベルロール管理
  - name: organization-permission
    description: 組織レベル権限管理
  - name: organization-security-event
    description: 組織レベルセキュリティイベント管理
  - name: organization-audit-log
    description: 組織レベル監査ログ管理
  - name: organization-identity-verification
    description: 組織レベル身元確認設定管理
  - name: organization-security-event-hook
    description: 組織レベルセキュリティイベントフック設定管理
  - name: organization-authentication-interaction
    description: 組織レベル認証インタラクション管理
  - name: organization-authentication-transaction
    description: 組織レベル認証トランザクション管理

paths:
  # Organization-level Authentication Configuration Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authentication-configurations:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: Create authentication configuration within organization
      description: 組織内の特定のテナントに対して新しい認証設定を作成します
      tags:
        - organization-authentication-config
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationConfigurationRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: 認証設定が正常に作成されました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/AuthenticationConfig'
        '400':
          description: 無効なリクエストデータまたはバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List authentication configurations within organization
      description: 組織内の特定のテナントの認証設定一覧を取得します
      tags:
        - organization-authentication-config
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: 認証設定一覧の取得が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationConfig'
                  total_count:
                    type: integer
                    description: 認証設定の総数
                  limit:
                    type: integer
                    description: 返される結果の最大数
                  offset:
                    type: integer
                    description: スキップされた結果の数
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authentication-configurations/{config-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/AuthenticationConfigId'
    get:
      summary: Get authentication configuration by ID within organization
      description: 組織内の特定のテナントの認証設定詳細を取得します
      tags:
        - organization-authentication-config
      responses:
        '200':
          description: 認証設定の取得が成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationConfig'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、または認証設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update authentication configuration by ID within organization
      description: 組織内の特定のテナントの認証設定を更新します
      tags:
        - organization-authentication-config
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationConfigurationRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: 認証設定の更新が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/AuthenticationConfig'
        '400':
          description: 無効なリクエストデータまたはバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、または認証設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete authentication configuration by ID within organization
      description: 組織内の特定のテナントの認証設定を削除します
      tags:
        - organization-authentication-config
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: 認証設定の削除が成功しました
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、または認証設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Authentication Policy Configuration Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authentication-policies:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: Create authentication policy configuration within organization
      description: 組織内の特定のテナントに対して新しい認証ポリシー設定を作成します
      tags:
        - organization-authentication-policy-config
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationPolicyConfigurationRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '201':
          description: 認証ポリシー設定の作成が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    example: false
                  result:
                    $ref: '#/components/schemas/AuthenticationPolicyConfig'
        '400':
          description: 無効なリクエストパラメータまたはボディ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List authentication policy configurations within organization
      description: 組織内の特定のテナントの認証ポリシー設定一覧を取得します
      tags:
        - organization-authentication-policy-config
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: 認証ポリシー設定一覧の取得が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthenticationPolicyConfig'
                  total_count:
                    type: integer
                    description: 認証ポリシー設定の総数
                  limit:
                    type: integer
                    description: ページあたりの最大結果数
                  offset:
                    type: integer
                    description: スキップされた結果の数
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authentication-policies/{config-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/AuthenticationPolicyConfigId'
    get:
      summary: Get authentication policy configuration by ID within organization
      description: 組織内の特定のテナントの認証ポリシー設定詳細を取得します
      tags:
        - organization-authentication-policy-config
      responses:
        '200':
          description: 認証ポリシー設定の取得が成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationPolicyConfig'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、または認証ポリシー設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update authentication policy configuration by ID within organization
      description: 組織内の特定のテナントの認証ポリシー設定を更新します
      tags:
        - organization-authentication-policy-config
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationPolicyConfigurationRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: 認証ポリシー設定の更新が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                  result:
                    $ref: '#/components/schemas/AuthenticationPolicyConfig'
        '400':
          description: 無効なリクエストパラメータまたはボディ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、または認証ポリシー設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete authentication policy configuration by ID within organization
      description: 組織内の特定のテナントの認証ポリシー設定を削除します
      tags:
        - organization-authentication-policy-config
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: 認証ポリシー設定の削除が成功しました
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、または認証ポリシー設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Authentication Interaction Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authentication-interactions:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    get:
      summary: 組織内認証インタラクション一覧取得
      description: 指定した組織・テナント内の認証インタラクション一覧を取得します（読み取り専用）
      tags:
        - organization-authentication-interaction
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: transaction_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
          description: 認証トランザクションIDでフィルタリング
        - name: interaction_type
          in: query
          required: false
          schema:
            type: string
          description: インタラクションタイプでフィルタリング
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [pending, completed, failed, expired]
          description: ステータスでフィルタリング
        - name: created_at_from
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: 作成日時の範囲指定開始
        - name: created_at_to
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: 作成日時の範囲指定終了
      responses:
        '200':
          description: 認証インタラクション一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationAuthenticationInteraction'
                    description: 認証インタラクション一覧
                  total_count:
                    type: integer
                    description: 総件数
                    example: 25
                  limit:
                    type: integer
                    description: 取得件数制限
                    example: 10
                  offset:
                    type: integer
                    description: 取得開始位置
                    example: 0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: 組織アクセス権限不足またはテナントアクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authentication-interactions/{transaction-id}/types/{type}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - name: transaction-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: 認証トランザクションID
        example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
      - name: type
        in: path
        required: true
        schema:
          type: string
        description: インタラクションタイプ
        example: "password"
    get:
      summary: 組織内認証インタラクション詳細取得
      description: 指定した組織・テナント内の特定の認証インタラクションの詳細を取得します
      tags:
        - organization-authentication-interaction
      responses:
        '200':
          description: 認証インタラクション詳細取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAuthenticationInteractionDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: 組織アクセス権限不足またはテナントアクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、または認証インタラクションが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Authentication Transaction Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authentication-transactions:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    get:
      summary: 組織内認証トランザクション一覧取得
      description: 指定した組織・テナント内の認証トランザクション一覧を取得します（読み取り専用）
      tags:
        - organization-authentication-transaction
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [pending, completed, failed, expired]
          description: トランザクションステータスでフィルタリング
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: クライアントIDでフィルタリング
        - name: created_at_from
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: 作成日時の範囲指定開始
        - name: created_at_to
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: 作成日時の範囲指定終了
      responses:
        '200':
          description: 認証トランザクション一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationAuthenticationTransaction'
                    description: 認証トランザクション一覧
                  total_count:
                    type: integer
                    description: 総件数
                    example: 15
                  limit:
                    type: integer
                    description: 取得件数制限
                    example: 10
                  offset:
                    type: integer
                    description: 取得開始位置
                    example: 0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: 組織アクセス権限不足またはテナントアクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authentication-transactions/{transaction-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - name: transaction-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: 認証トランザクションID
        example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
    get:
      summary: 組織内認証トランザクション詳細取得
      description: 指定した組織・テナント内の特定の認証トランザクションの詳細を取得します
      tags:
        - organization-authentication-transaction
      responses:
        '200':
          description: 認証トランザクション詳細取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAuthenticationTransactionDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: 組織アクセス権限不足またはテナントアクセス拒否
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、または認証トランザクションが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Identity Verification Config Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/identity-verification-configurations:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: 組織内身元確認設定作成
      description: 指定した組織・テナント内に新しい身元確認設定を作成します
      tags:
        - organization-identity-verification
      parameters:
        - $ref: '#/components/parameters/DryRun'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIdentityVerificationConfigCreateRequest'
      responses:
        '201':
          description: 身元確認設定作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationIdentityVerificationConfigResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: 身元確認設定が既に存在します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: 組織内身元確認設定一覧取得
      description: 指定した組織・テナント内の身元確認設定一覧を取得します
      tags:
        - organization-identity-verification
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: 身元確認設定一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationIdentityVerificationConfig'
                  total_count:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/identity-verification-configurations/{config-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/IdentityVerificationConfigId'
    get:
      summary: 組織内身元確認設定詳細取得
      description: 指定した組織・テナント内の特定の身元確認設定の詳細を取得します
      tags:
        - organization-identity-verification
      responses:
        '200':
          description: 身元確認設定詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationIdentityVerificationConfig'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、または身元確認設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: 組織内身元確認設定更新
      description: 指定した組織・テナント内の特定の身元確認設定を更新します
      tags:
        - organization-identity-verification
      parameters:
        - $ref: '#/components/parameters/DryRun'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationIdentityVerificationConfigUpdateRequest'
      responses:
        '200':
          description: 身元確認設定更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationIdentityVerificationConfigResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、または身元確認設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: 組織内身元確認設定削除
      description: 指定した組織・テナント内の特定の身元確認設定を削除します
      tags:
        - organization-identity-verification
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: 身元確認設定削除成功
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、または身元確認設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Federation Config Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/federation-configurations:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: Create federation configuration within organization tenant
      description: 組織内の特定のテナントに対して新しいフェデレーション設定を作成します
      tags:
        - organization-federation-config
      parameters:
        - name: dry_run
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: ドライランモード（実際の作成は行わない）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationFederationConfigCreateRequest'
      responses:
        '201':
          description: フェデレーション設定作成成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/OrganizationFederationConfig'
                required: [dry_run, result]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 同じIDのフェデレーション設定が既に存在します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List federation configurations within organization tenant
      description: 組織内の特定のテナントのフェデレーション設定一覧を取得します
      tags:
        - organization-federation-config
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: enabled
          in: query
          required: false
          schema:
            type: boolean
          description: フィルター - 有効な設定のみ取得
      responses:
        '200':
          description: フェデレーション設定一覧取得成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationFederationConfig'
                  total_count:
                    type: integer
                    description: フェデレーション設定の総数
                  limit:
                    type: integer
                    description: 要求されたアイテム数
                  offset:
                    type: integer
                    description: スキップされたアイテム数
                required: [ list, total_count, limit, offset ]
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/federation-configurations/{config-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - name: config-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: フェデレーション設定ID
    get:
      summary: Get specific federation configuration
      description: IDで特定のフェデレーション設定を取得します
      tags:
        - organization-federation-config
      responses:
        '200':
          description: フェデレーション設定取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationFederationConfig'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、またはフェデレーション設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update federation configuration
      description: 既存のフェデレーション設定を更新します
      tags:
        - organization-federation-config
      parameters:
        - name: dry_run
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: ドライランモード（実際の更新は行わない）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationFederationConfigUpdateRequest'
      responses:
        '200':
          description: フェデレーション設定更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/OrganizationFederationConfig'
                required: [dry_run, result]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、またはフェデレーション設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete federation configuration
      description: 既存のフェデレーション設定を削除します
      tags:
        - organization-federation-config
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: フェデレーション設定削除成功
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、またはフェデレーション設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Security Event Hook Configuration Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/security-event-hook-configurations:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: Create security event hook configuration
      description: 組織内のテナントに対して新しいセキュリティイベントフック設定を作成します
      tags:
        - organization-security-event-hook
      parameters:
        - $ref: '#/components/parameters/DryRun'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEventHookConfigurationRequest'
      responses:
        '201':
          description: セキュリティイベントフック設定の作成が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/SecurityEventHookConfiguration'
                required: [ dry_run, result ]
        '400':
          description: 無効なリクエストパラメータまたは設定
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: 同じIDのセキュリティイベントフック設定が既に存在します
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List security event hook configurations
      description: 組織内のテナントの全セキュリティイベントフック設定を取得します
      tags:
        - organization-security-event-hook
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: enabled
          in: query
          required: false
          schema:
            type: boolean
          description: 有効ステータスでフィルタリング
        - name: type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StandardSecurityEventHookType'
          description: フックタイプでフィルタリング (WEBHOOK, SSF, Email)
      responses:
        '200':
          description: セキュリティイベントフック設定の一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityEventHookConfiguration'
                  total_count:
                    type: integer
                    description: セキュリティイベントフック設定の総数
                  limit:
                    type: integer
                    description: 返される結果の最大数
                  offset:
                    type: integer
                    description: スキップされた結果の数
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/security-event-hook-configurations/{config-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - name: config-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: セキュリティイベントフック設定ID
    get:
      summary: Get specific security event hook configuration
      description: IDで特定のセキュリティイベントフック設定を取得します
      tags:
        - organization-security-event-hook
      responses:
        '200':
          description: セキュリティイベントフック設定の詳細
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/SecurityEventHookConfiguration'
                required: [dry_run, result]
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、またはセキュリティイベントフック設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update security event hook configuration
      description: 既存のセキュリティイベントフック設定を更新します
      tags:
        - organization-security-event-hook
      parameters:
        - $ref: '#/components/parameters/DryRun'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEventHookConfigurationRequest'
      responses:
        '200':
          description: セキュリティイベントフック設定の更新が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/SecurityEventHookConfiguration'
                required: [dry_run, result]
        '400':
          description: 無効なリクエストパラメータまたは設定
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、またはセキュリティイベントフック設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete security event hook configuration
      description: 既存のセキュリティイベントフック設定を削除します
      tags:
        - organization-security-event-hook
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: セキュリティイベントフック設定削除成功
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、またはセキュリティイベントフック設定が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Security Event Hook Result Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/security-event-hooks:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    get:
      summary: List security event hook execution results
      description: 組織内のテナントのセキュリティイベントフック実行結果一覧を取得します
      tags:
        - organization-security-event-hook
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: 検索開始日時（ISO 8601形式）デフォルト：7日前
        - name: to
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: 検索終了日時（ISO 8601形式）デフォルト：明日
        - name: id
          in: query
          required: false
          schema:
            type: string
            format: uuid
          description: フック実行結果IDでフィルタリング
        - name: event_type
          in: query
          required: false
          schema:
            type: string
          description: イベントタイプでフィルタリング（例：user_signin, user_signin_failure）
        - name: hook_type
          in: query
          required: false
          schema:
            type: string
          description: フックタイプでフィルタリング（WEBHOOK, SSF, Email）
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [SUCCESS, FAILURE, RETRY_SUCCESS, RETRY_FAILURE]
          description: 実行ステータスでフィルタリング
      responses:
        '200':
          description: セキュリティイベントフック実行結果一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityEventHookResult'
                  total_count:
                    type: integer
                    description: フック実行結果の総数
                  limit:
                    type: integer
                    description: 返される結果の最大数
                  offset:
                    type: integer
                    description: スキップされた結果の数
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/security-event-hooks/{hook-result-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - name: hook-result-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: フック実行結果ID
    get:
      summary: Get security event hook execution result details
      description: 特定のセキュリティイベントフック実行結果の詳細を取得します
      tags:
        - organization-security-event-hook
      responses:
        '200':
          description: フック実行結果の詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEventHookResult'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、またはフック実行結果が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/security-event-hooks/{hook-result-id}/retry:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - name: hook-result-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: 再試行するフック実行結果ID
    post:
      summary: Retry failed security event hook execution
      description: 失敗したセキュリティイベントフック実行を再試行します。元のセキュリティイベントと最新のフック設定を使用して再実行します。
      tags:
        - organization-security-event-hook
      responses:
        '200':
          description: フック再実行成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEventHookResult'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: 組織、テナント、またはフック実行結果が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Tenant Management API
  /v1/management/organizations/{organization-id}/tenants:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
    post:
      summary: Create tenant within organization
      description: 特定の組織に新しいテナントを作成します
      tags:
        - organization-tenant
      parameters:
        - $ref: '#/components/parameters/DryRun'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantCreateRequest'
      responses:
        '201':
          description: テナントの作成が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/Tenant'
        '400':
          description: 無効なリクエストデータまたはバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List tenants within organization
      description: 特定の組織のテナント一覧を取得します
      tags:
        - organization-tenant
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: テナント一覧の取得が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tenant'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    get:
      summary: Get tenant within organization
      description: 組織の特定のテナントを取得します
      tags:
        - organization-tenant
      responses:
        '200':
          description: テナントの取得が成功しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update tenant within organization
      description: 組織の特定のテナントを更新します
      tags:
        - organization-tenant
      parameters:
        - $ref: '#/components/parameters/DryRun'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantUpdateRequest'
      responses:
        '200':
          description: テナントの更新が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/Tenant'
        '400':
          description: 無効なリクエストデータまたはバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete tenant within organization
      description: 組織の特定のテナントを削除します
      tags:
        - organization-tenant
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: テナントの削除が成功しました
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Client Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/clients:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: Create client within organization tenant
      description: 組織内の特定のテナントに新しいOAuth/OIDCクライアントを作成します
      tags:
        - organization-client
      parameters:
        - $ref: '#/components/parameters/DryRun'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreateRequest'
      responses:
        '201':
          description: クライアントの作成が成功しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/Client'
        '400':
          description: 無効なリクエストデータまたはバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List clients within organization tenant
      description: 組織内の特定のテナントのOAuth/OIDCクライアント一覧を取得します
      tags:
        - organization-client
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: 特定のクライアントIDでフィルタリング
        - name: client_name
          in: query
          required: false
          schema:
            type: string
          description: クライアント名でフィルタリング
      responses:
        '200':
          description: クライアント一覧を正常に取得しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Client'
                  total_count:
                    type: integer
                    description: クライアントの総数
                  limit:
                    type: integer
                    description: 返される結果の最大数
                  offset:
                    type: integer
                    description: スキップされた結果の数
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/clients/{client-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/ClientId'
    get:
      summary: Get client within organization tenant
      description: 組織内のテナントの特定のOAuth/OIDCクライアントを取得します
      tags:
        - organization-client
      responses:
        '200':
          description: クライアントを正常に取得しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、またはクライアントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update client within organization tenant
      description: 組織内のテナントの特定のOAuth/OIDCクライアントを更新します
      tags:
        - organization-client
      parameters:
        - $ref: '#/components/parameters/DryRun'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdateRequest'
      responses:
        '200':
          description: クライアントを正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: ドライランかどうか
                  result:
                    $ref: '#/components/schemas/Client'
        '400':
          description: 無効なリクエストデータまたはバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、またはクライアントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete client within organization tenant
      description: 組織内のテナントの特定のOAuth/OIDCクライアントを削除します
      tags:
        - organization-client
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: クライアントを正常に削除しました
        '200':
          description: ドライラン削除を正常に完了しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 確認メッセージ
                  client_id:
                    type: string
                    description: 削除予定のクライアントのID
        '403':
          description: 権限不足または無効な組織・テナントアクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織、テナント、またはクライアントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Authorization Server Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/authorization-server:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    get:
      summary: Get authorization server configuration for organization tenant
      description: 組織内の特定のテナントの認証サーバー設定を取得します
      tags:
        - organization-authorization-server
      responses:
        '200':
          description: 認証サーバー設定を正常に取得しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenIDConfiguration'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update authorization server configuration for organization tenant
      description: 組織内の特定のテナントの認証サーバー設定を更新します
      tags:
        - organization-authorization-server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenIDConfiguration'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: 認証サーバー設定を正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/OpenIDConfiguration'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Permission Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/permissions:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: Create permission within organization tenant
      description: 組織内の特定のテナントに新しい権限を作成します
      tags:
        - organization-permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionCreateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '201':
          description: 権限を正常に作成しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/Permission'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List permissions within organization tenant
      description: 組織内の特定のテナントの権限一覧を取得します
      tags:
        - organization-permission
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: 権限を正常に取得しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Permission'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/permissions/{permission-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/PermissionId'
    get:
      summary: Get permission within organization tenant
      description: 組織内のテナントの特定の権限を取得します
      tags:
        - organization-permission
      responses:
        '200':
          description: 権限を正常に取得しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 権限、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update permission within organization tenant
      description: 組織内のテナントの特定の権限を更新します
      tags:
        - organization-permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionUpdateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: 権限を正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/Permission'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 権限、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete permission within organization tenant
      description: 組織内のテナントの特定の権限を削除します
      tags:
        - organization-permission
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: 権限を正常に削除しました
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 権限、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level User Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/users:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: Create user within organization tenant
      description: 組織内の特定のテナントに新しいユーザーを作成します
      tags:
        - organization-user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserCreateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '201':
          description: ユーザーを正常に作成しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/OrganizationUser'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidationErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List users within organization tenant
      description: 組織内の特定のテナントのユーザー一覧を取得します
      tags:
        - organization-user
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: ユーザーを正常に取得しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationUser'
                  total_count:
                    type: integer
                    description: ユーザーの総数
                  limit:
                    type: integer
                    description: 1ページあたりのアイテム数
                  offset:
                    type: integer
                    description: 開始位置
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/users/{user-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get user within organization tenant
      description: 組織内のテナントの特定のユーザーを取得します
      tags:
        - organization-user
      responses:
        '200':
          description: ユーザーを正常に取得しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUser'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザー、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update user within organization tenant
      description: 組織内のテナントの特定のユーザーを更新します
      tags:
        - organization-user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserUpdateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: ユーザーを正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/OrganizationUser'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidationErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザー、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete user within organization tenant
      description: 組織内のテナントの特定のユーザーを削除します
      tags:
        - organization-user
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: ユーザーを正常に削除しました
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザー、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Partially update user within organization tenant
      description: 組織内のテナントの特定のユーザーを部分更新します
      tags:
        - organization-user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserUpdateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: ユーザーを正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/OrganizationUser'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidationErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザー、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/users/{user-id}/password:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/UserId'
    put:
      summary: Update user password within organization tenant
      description: Updates a specific user's password for a tenant within an organization
      tags:
        - organization-user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserPasswordUpdateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: ユーザーのパスワードを正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/OrganizationUser'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidationErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザー、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/users/{user-id}/roles:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/UserId'
    patch:
      summary: Update user roles within organization tenant
      description: Updates a specific user's roles for a tenant within an organization
      tags:
        - organization-user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserRolesUpdateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: ユーザーのロールを正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/OrganizationUser'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidationErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザー、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/users/{user-id}/tenant-assignments:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/UserId'
    patch:
      summary: Update user tenant assignments within organization
      description: Updates a specific user's tenant assignments within an organization
      tags:
        - organization-user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserTenantAssignmentsUpdateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: ユーザーのテナント割り当てを正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/OrganizationUser'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidationErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザー、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/users/{user-id}/organization-assignments:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/UserId'
    patch:
      summary: Update user organization assignments
      description: Updates a specific user's organization assignments
      tags:
        - organization-user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserOrganizationAssignmentsUpdateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: ユーザーの組織割り当てを正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/OrganizationUser'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidationErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ユーザー、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Role Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/roles:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    post:
      summary: Create role within organization tenant
      description: 組織内の特定のテナントに新しいロールを作成します
      tags:
        - organization-role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '201':
          description: ロールを正常に作成しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/Role'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List roles within organization tenant
      description: 組織内の特定のテナントのロール一覧を取得します
      tags:
        - organization-role
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: ロールを正常に取得しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/roles/{role-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - $ref: '#/components/parameters/RoleId'
    get:
      summary: Get role within organization tenant
      description: 組織内のテナントの特定のロールを取得します
      tags:
        - organization-role
      responses:
        '200':
          description: ロールを正常に取得しました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ロール、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update role within organization tenant
      description: 組織内のテナントの特定のロールを更新します
      tags:
        - organization-role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '200':
          description: ロールを正常に更新しました
          content:
            application/json:
              schema:
                type: object
                properties:
                  dry_run:
                    type: boolean
                    description: これがドライラン操作であったかを示します
                  result:
                    $ref: '#/components/schemas/Role'
        '400':
          description: 無効なリクエストボディまたは検証エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ロール、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete role within organization tenant
      description: 組織内のテナントの特定のロールを削除します
      tags:
        - organization-role
      parameters:
        - $ref: '#/components/parameters/DryRun'
      responses:
        '204':
          description: ロールを正常に削除しました
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: ロール、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/security-events:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    get:
      summary: List organization security events
      description: 組織テナント内のセキュリティイベント一覧を取得します
      tags:
        - organization-security-event
      parameters:
        - name: limit
          in: query
          description: 返すセキュリティイベントの最大数
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: ページネーションのためにスキップするセキュリティイベント数
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: event_type
          in: query
          description: セキュリティイベントタイプでフィルター
          schema:
            type: string
        - name: from
          in: query
          description: セキュリティイベントをフィルターするための開始タイムスタンプ（ISO 8601形式）
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: セキュリティイベントをフィルターするための終了タイムスタンプ（ISO 8601形式）
          schema:
            type: string
            format: date-time
        - name: client_id
          in: query
          description: クライアント識別子でフィルター
          schema:
            type: string
        - name: user_id
          in: query
          description: ユーザー識別子でフィルター
          schema:
            type: string
            format: uuid
        - name: external_user_id
          in: query
          description: 外部ユーザー識別子でフィルター
          schema:
            type: string
      responses:
        '200':
          description: 組織セキュリティイベントの一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityEvent'
                  total_count:
                    type: integer
                    description: セキュリティイベントの総数
                  limit:
                    type: integer
                    description: 1ページあたりのイベント数の最大値
                  offset:
                    type: integer
                    description: スキップしたイベント数
        '400':
          description: 無効なリクエストパラメータ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/security-events/{event-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - name: event-id
        in: path
        required: true
        description: セキュリティイベント識別子
        schema:
          type: string
          format: uuid
    get:
      summary: Get organization security event details
      description: 組織テナント内の特定のセキュリティイベントの詳細情報を取得します
      tags:
        - organization-security-event
      responses:
        '200':
          description: セキュリティイベントの詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEvent'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または無効な組織アクセス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: セキュリティイベント、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organization-level Audit Log Management API
  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/audit-logs:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
    get:
      summary: List organization audit logs
      description: |
        組織レベルでの監査ログ一覧を取得します。指定された組織とテナントに関連する監査ログを検索条件に基づいて取得できます。

        **動的属性フィルタ**: `attributes.*` パラメータを使用して監査ログの属性による絞り込みが可能です。
        例：`attributes.resource_type=user`, `attributes.operation=create`
      tags:
        - organization-audit-log
      parameters:
        - name: limit
          in: query
          description: 取得する監査ログの最大件数
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: ページネーション用のオフセット（スキップする監査ログ数）
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: from
          in: query
          description: 監査ログ検索の開始日時（ISO 8601形式）。デフォルトは7日前
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: 監査ログ検索の終了日時（ISO 8601形式）。デフォルトは明日
          schema:
            type: string
            format: date-time
        - name: type
          in: query
          description: 監査ログタイプによるフィルタ
          schema:
            type: string
        - name: description
          in: query
          description: 説明テキストによるフィルタ
          schema:
            type: string
        - name: target_resource
          in: query
          description: 対象リソースによるフィルタ
          schema:
            type: string
        - name: target_action
          in: query
          description: 対象アクションによるフィルタ
          schema:
            type: string
        - name: client_id
          in: query
          description: クライアント識別子によるフィルタ
          schema:
            type: string
        - name: user_id
          in: query
          description: 内部ユーザIDによるフィルタ
          schema:
            type: string
            format: uuid
        - name: external_user_id
          in: query
          description: 外部ユーザ識別子によるフィルタ
          schema:
            type: string
      responses:
        '200':
          description: 監査ログ一覧が正常に取得されました
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
                  total_count:
                    type: integer
                    description: 総監査ログ数
                  limit:
                    type: integer
                    description: 要求された最大件数
                  offset:
                    type: integer
                    description: 要求されたオフセット
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または組織アクセス無効
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 組織またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 内部サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/management/organizations/{organization-id}/tenants/{tenant-id}/audit-logs/{log-id}:
    parameters:
      - $ref: '#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/TenantId'
      - name: log-id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: 監査ログの識別子
    get:
      summary: Get organization audit log details
      description: 組織レベルでの特定の監査ログの詳細情報を取得します。
      tags:
        - organization-audit-log
      responses:
        '200':
          description: 監査ログ詳細が正常に取得されました
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLog'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 権限不足または組織アクセス無効
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 監査ログ、組織、またはテナントが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 内部サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  parameters:
    TenantId:
      name: tenant-id
      in: path
      required: true
      schema:
        type: string
      description: テナントの識別子
    OrganizationId:
      name: organization-id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: 組織の識別子
    PermissionId:
      name: permission-id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: 権限の識別子
    RoleId:
      name: role-id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: ロールの識別子
    ClientId:
      name: client-id
      in: path
      required: true
      schema:
        type: string
      description: OAuth/OIDCクライアントの識別子
    UserId:
      name: user-id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: ユーザーの識別子
    AuthenticationConfigId:
      name: config-id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: 認証設定の識別子
    AuthenticationPolicyConfigId:
      name: config-id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: 認証ポリシー設定の識別子
    IdentityVerificationConfigId:
      name: config-id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: 身元確認設定の識別子
    DryRun:
      name: dry_run
      in: query
      required: false
      schema:
        type: boolean
        default: false
      description: trueの場合、リクエストの検証のみで実行はされません
    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        default: 20
      description: 返すアイテムの最大数
    Offset:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        default: 0
      description: アイテムを返す開始インデックス

  schemas:
    SecurityEvent:
      type: object
      required:
        - id
        - type
        - description
        - tenant
        - client
        - detail
        - created_at
      properties:
        id:
          type: string
          format: uuid
          description: セキュリティイベントの一意識別子
        type:
          type: string
          description: セキュリティイベントのタイプ（例：authentication_failure、suspicious_login）
        description:
          type: string
          description: セキュリティイベントの人が読める説明
        tenant:
          type: object
          required:
            - id
            - issuer
          properties:
            id:
              type: string
              format: uuid
              description: テナント識別子
            issuer:
              type: string
              format: uri
              description: テナント発行者URL
        client:
          type: object
          required:
            - id
            - client_id
          properties:
            id:
              type: string
              format: uuid
              description: 内部クライアント識別子
            client_id:
              type: string
              description: OAuthクライアント識別子
        user:
          type: object
          description: 利用可能な場合のユーザー情報
          properties:
            id:
              type: string
              description: ユーザー識別子
            ex_sub:
              type: string
              description: 外部サブジェクト識別子
        detail:
          type: object
          description: イベント固有の追加詳細
          additionalProperties: true
        created_at:
          type: string
          format: date-time
          description: セキュリティイベントが発生したタイムスタンプ

    SecurityEventHookConfiguration:
      type: object
      required:
        - id
        - type
        - enabled
        - events
      properties:
        id:
          type: string
          format: uuid
          description: セキュリティイベントフック設定の一意識別子
        type:
          $ref: '#/components/schemas/StandardSecurityEventHookType'
        attributes:
          type: object
          description: フックタイプ固有の属性（WebフックURL、メールアドレス等）
          additionalProperties: true
        metadata:
          type: object
          description: フック設定に関連付けられたカスタムメタデータ
          additionalProperties: true
        triggers:
          type: array
          items:
            type: string
          description: フック実行のカスタムトリガー条件
        execution_order:
          type: integer
          description: 他のフックに対するこのフックの実行順序
          minimum: 0
        events:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SecurityEventConfig'
          description: イベントタイプをキーとするイベント毎の実行設定
        enabled:
          type: boolean
          description: このフック設定が有効かどうか
        store_execution_payload:
          type: boolean
          description: 監査目的で実行ペイロードを保存するかどうか
        created_at:
          type: string
          format: date-time
          description: 設定作成タイムスタンプ
        updated_at:
          type: string
          format: date-time
          description: 設定最終更新タイムスタンプ
      additionalProperties: false

    SecurityEventHookConfigurationRequest:
      type: object
      required:
        - type
        - enabled
        - events
      properties:
        id:
          type: string
          format: uuid
          description: セキュリティイベントフック設定の一意識別子（指定しない場合は自動生成）
        type:
          $ref: '#/components/schemas/StandardSecurityEventHookType'
        attributes:
          type: object
          description: フックタイプ固有の属性（WebフックURL、メールアドレス等）
          additionalProperties: true
        metadata:
          type: object
          description: フック設定に関連付けられたカスタムメタデータ
          additionalProperties: true
        triggers:
          type: array
          items:
            type: string
          description: フック実行のカスタムトリガー条件
        execution_order:
          type: integer
          description: 他のフックに対するこのフックの実行順序
          minimum: 0
          default: 0
        events:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SecurityEventConfigRequest'
          description: イベントタイプをキーとするイベント毎の実行設定
        enabled:
          type: boolean
          description: このフック設定が有効かどうか
          default: true
        store_execution_payload:
          type: boolean
          description: 監査目的で実行ペイロードを保存するかどうか
          default: false
      additionalProperties: false

    SecurityEventConfig:
      type: object
      properties:
        execution:
          $ref: '#/components/schemas/SecurityEventExecutionConfig'
      additionalProperties: false

    SecurityEventConfigRequest:
      type: object
      properties:
        execution:
          $ref: '#/components/schemas/SecurityEventExecutionConfigRequest'
      additionalProperties: false

    SecurityEventExecutionConfig:
      type: object
      properties:
        function:
          type: string
          description: このセキュリティイベントに対して実行する関数
        http_request:
          $ref: '#/components/schemas/SecurityEventHttpRequestConfig'
        http_requests:
          type: array
          items:
            $ref: '#/components/schemas/SecurityEventHttpRequestConfig'
          description: 複数のHTTPリクエスト設定
        mock:
          type: object
          description: テスト用のモック設定
          additionalProperties: true
        details:
          type: object
          description: 追加の実行詳細
          additionalProperties: true
      additionalProperties: false

    SecurityEventExecutionConfigRequest:
      type: object
      properties:
        function:
          type: string
          description: このセキュリティイベントに対して実行する関数
        http_request:
          $ref: '#/components/schemas/SecurityEventHttpRequestConfigRequest'
        http_requests:
          type: array
          items:
            $ref: '#/components/schemas/SecurityEventHttpRequestConfigRequest'
          description: 複数のHTTPリクエスト設定
        mock:
          type: object
          description: テスト用のモック設定
          additionalProperties: true
        details:
          type: object
          description: 追加の実行詳細
          additionalProperties: true
      additionalProperties: false

    SecurityEventHttpRequestConfig:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: 対象WebフックURL
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE]
          description: リクエストのHTTPメソッド
        auth_type:
          type: string
          description: 認証タイプ
        oauth_authorization:
          type: object
          description: OAuth認証設定
          additionalProperties: true
        hmac_authentication:
          type: object
          description: HMAC認証設定
          additionalProperties: true
        path_mapping_rules:
          type: array
          items:
            type: object
            additionalProperties: true
          description: パスマッピングルール
        header_mapping_rules:
          type: array
          items:
            type: object
            additionalProperties: true
          description: ヘッダーマッピングルール
        body_mapping_rules:
          type: array
          items:
            type: object
            additionalProperties: true
          description: ボディマッピングルール
        query_mapping_rules:
          type: array
          items:
            type: object
            additionalProperties: true
          description: クエリマッピングルール
      additionalProperties: false

    SecurityEventHttpRequestConfigRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: 対象WebフックURL
        method:
          type: string
          enum: [GET, POST, PUT, PATCH, DELETE]
          description: リクエストのHTTPメソッド
        auth_type:
          type: string
          description: 認証タイプ
        oauth_authorization:
          type: object
          description: OAuth認証設定
          additionalProperties: true
        hmac_authentication:
          type: object
          description: HMAC認証設定
          additionalProperties: true
        path_mapping_rules:
          type: array
          items:
            type: object
            additionalProperties: true
          description: パスマッピングルール
        header_mapping_rules:
          type: array
          items:
            type: object
            additionalProperties: true
          description: ヘッダーマッピングルール
        body_mapping_rules:
          type: array
          items:
            type: object
            additionalProperties: true
          description: ボディマッピングルール
        query_mapping_rules:
          type: array
          items:
            type: object
            additionalProperties: true
          description: クエリマッピングルール
      additionalProperties: false

    SecurityEventHookResult:
      type: object
      required:
        - id
        - status
        - type
        - security_event
        - contents
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: フック実行結果の一意識別子
        status:
          type: string
          enum: [SUCCESS, FAILURE, RETRY_SUCCESS, RETRY_FAILURE, UNKNOWN]
          description: フック実行ステータス
        type:
          type: string
          description: フックタイプ（WEBHOOK, SSF, Email等）
        security_event:
          $ref: '#/components/schemas/SecurityEvent'
        contents:
          type: object
          description: フック実行の詳細結果（execution_details, error_type, error_message等）
          additionalProperties: true
        created_at:
          type: string
          format: date-time
          description: フック実行結果作成タイムスタンプ
        updated_at:
          type: string
          format: date-time
          description: フック実行結果最終更新タイムスタンプ
      additionalProperties: false

    StandardSecurityEventHookType:
      type: string
      enum:
        - WEBHOOK
        - SSF
        - Email
      description: |
        標準セキュリティイベントフックタイプ:
        - WEBHOOK: HTTP Webフック通知
        - SSF: Security Event Token (SET) 形式通知
        - Email: メール通知

    DefaultSecurityEventType:
      type: string
      enum:
        - user_signup
        - user_signin
        - user_signin_failure
        - user_signout
        - user_profile_update
        - user_password_change
        - user_password_failure
        - user_email_verification
        - user_phone_verification
        - authentication_mfa_challenge
        - authentication_mfa_success
        - authentication_mfa_failure
        - authentication_factor_added
        - authentication_factor_removed
        - fido_uaf_registration
        - fido_uaf_authentication
        - fido_uaf_deregistration
        - webauthn_registration
        - webauthn_authentication
        - webauthn_credential_update
        - oauth_authorize
        - oauth_token_issued
        - oauth_token_refreshed
        - oauth_token_revoked
        - oauth_consent_granted
        - oauth_consent_revoked
        - management_user_created
        - management_user_updated
        - management_user_deleted
        - management_client_created
        - management_client_updated
        - management_client_deleted
        - management_permission_granted
        - management_permission_revoked
        - management_role_assigned
        - management_role_unassigned
        - security_suspicious_activity
        - security_account_locked
        - security_account_unlocked
        - security_brute_force_detected
      description: |
        包括的なセキュリティイベントタイプのカバー範囲:
        - ユーザライフサイクルイベント（サインアップ、サインイン、プロフィール更新）
        - 認証イベント（MFA、要素管理）
        - FIDO-UAF固有イベント（登録、認証、登録解除）
        - WebAuthnイベント（登録、認証、クレデンシャル更新）
        - OAuth/OIDCプロトコルイベント（認可、トークンライフサイクル、同意）
        - 管理APIイベント（ユーザ/クライアント/権限/ロール管理）
        - セキュリティ監視イベント（疑わしい活動、アカウントロックアウト、ブルートフォース）

    AuditLog:
      type: object
      required:
        - id
        - type
        - description
        - tenant_id
        - created_at
      properties:
        id:
          type: string
          format: uuid
          description: 監査ログの一意識別子
        type:
          type: string
          description: 監査ログの種別（例：user_create, permission_update, authentication_failure）
        description:
          type: string
          description: 監査ログの説明文
        tenant_id:
          type: string
          format: uuid
          description: テナント識別子
        client_id:
          type: string
          nullable: true
          description: クライアント識別子（該当する場合）
        user_id:
          type: string
          format: uuid
          nullable: true
          description: 内部ユーザ識別子（該当する場合）
        external_user_id:
          type: string
          nullable: true
          description: 外部ユーザ識別子（該当する場合）
        user_payload:
          type: object
          nullable: true
          description: ユーザに関する追加情報
          additionalProperties: true
        target_resource:
          type: string
          nullable: true
          description: 操作対象のリソース名
        target_resource_action:
          type: string
          nullable: true
          description: 操作対象のリソースに対するアクション
        ip_address:
          type: string
          nullable: true
          description: 操作元のIPアドレス
        user_agent:
          type: string
          nullable: true
          description: 操作元のユーザエージェント文字列
        before:
          type: object
          nullable: true
          description: 変更前の状態（該当する場合）
          additionalProperties: true
        after:
          type: object
          nullable: true
          description: 変更後の状態（該当する場合）
          additionalProperties: true
        attributes:
          type: object
          nullable: true
          description: 監査ログの追加属性
          additionalProperties: true
        dry_run:
          type: boolean
          description: ドライランかどうか
          default: false
        created_at:
          type: string
          format: date-time
          description: 監査ログが作成された日時

    OpenIDConfiguration:
      type: object
      required:
        - issuer
        - authorization_endpoint
        - token_endpoint
        - jwks_uri
        - scopes_supported
        - response_types_supported
        - response_modes_supported
        - subject_types_supported
      properties:
        issuer:
          type: string
          format: uri
          description: 必須。OPが発行者識別子として主張するhttpsスキームを使用し、クエリやフラグメントコンポーネントを含まないURL。発行者発見がサポートされている場合（セクション2参照）、この値はWebFingerによって返される発行者値と同一でなければならない。また、この発行者から発行されるIDトークンのissクレーム値と同一でなければならない。
        authorization_endpoint:
          type: string
          format: uri
          description: 必須。OPのOAuth 2.0認可エンドポイント[OpenID.Core]のURL。このURLはhttpsスキームを使用しなければならず、ポート、パス、クエリパラメータコンポーネントを含んでもよい。
        token_endpoint:
          type: string
          format: uri
          description: OPのOAuth 2.0トークンエンドポイント[OpenID.Core]のURL。Implicitフローのみが使用される場合を除き、これは必須である。このURLはhttpsスキームを使用しなければならず、ポート、パス、クエリパラメータコンポーネントを含んでもよい。
        userinfo_endpoint:
          type: string
          format: uri
          description: 推奨。OPのUserInfoエンドポイント[OpenID.Core]のURL。このURLはhttpsスキームを使用しなければならず、ポート、パス、クエリパラメータコンポーネントを含んでもよい。
        jwk:
          type: string
          format: jwks
          description: JWKセット
        jwks_uri:
          type: string
          format: uri
          description: 必須。OPのJWKセット[JWK]ドキュメントのURL。httpsスキームを使用しなければならない。これにはRPがOPからの署名を検証するために使用する署名鍵が含まれる。JWKセットには、RPがサーバーへのリクエストを暗号化するために使用するサーバーの暗号化鍵も含まれる場合がある。署名鍵と暗号化鍵の両方が利用可能な場合、参照されるJWKセット内のすべての鍵に対して、各鍵の意図された用途を示すuse（公開鍵用途）パラメータ値が必須である。一部のアルゴリズムでは同じ鍵を署名と暗号化の両方に使用できるが、セキュリティが低下するため推奨されない。JWK x5cパラメータは、提供される鍵のX.509表現を提供するために使用される場合がある。使用される場合、素の鍵値も存在しなければならず、証明書内の値と一致しなければならない。JWKセットには秘密鍵や対称鍵値を含んではならない。
        registration_endpoint:
          type: string
          format: uri
          description: 推奨。OPの動的クライアント登録エンドポイント[OpenID.Registration]のURL。httpsスキームを使用しなければならない。
        scopes_supported:
          type: array
          items:
            type: string
          description: 推奨。このサーバーがサポートするOAuth 2.0 [RFC6749]スコープ値のリストを含むJSON配列。サーバーはopenidスコープ値をサポートしなければならない。このパラメータが使用される場合でも、サーバーはサポートされているスコープ値の一部を広告しないことを選択してもよいが、[OpenID.Core]で定義されているものは、サポートされている場合はリストされるべきである。
        response_types_supported:
          type: array
          items:
            type: string
            enum:
              - code
              - token
              - id_token
              - code token
              - code token id_token
              - token id_token
              - code id_token
              - none
          description: 必須。このOPがサポートするOAuth 2.0 response_type値のリストを含むJSON配列。動的OpenIDプロバイダーは、code、id_token、およびid_token tokenレスポンスタイプ値をサポートしなければならない。
        response_modes_supported:
          type: array
          items:
            type: string
            enum:
              - query
              - fragment
          default:
            - query
            - fragment
          description: オプション。OAuth 2.0 Multiple Response Type Encoding Practices [OAuth.Responses]で指定されているように、このOPがサポートするOAuth 2.0 response_mode値のリストを含むJSON配列。省略された場合、動的OpenIDプロバイダーのデフォルトは["query", "fragment"]である。
        grant_types_supported:
          type: array
          items:
            type: string
            enum:
              - authorization_code
              - implicit
              - refresh_token
              - password
              - client_credentials
              - urn:openid:params:grant-type:ciba
          default:
            - authorization_code
            - implicit
          description: オプション。このOPがサポートするOAuth 2.0グラントタイプ値のリストを含むJSON配列。動的OpenIDプロバイダーはauthorization_codeおよびimplicitグラントタイプ値をサポートしなければならず、他のグラントタイプをサポートしてもよい。省略された場合、デフォルト値は["authorization_code", "implicit"]である。
        acr_values_supported:
          type: array
          items:
            type: string
          description: オプション。このOPがサポートする認証コンテキストクラス参照のリストを含むJSON配列。
        subject_types_supported:
          type: array
          items:
            type: string
            enum:
              - pairwise
              - public
          description: 必須。このOPがサポートするサブジェクト識別子タイプのリストを含むJSON配列。有効なタイプにはpairwiseおよびpublicが含まれる。
        id_token_signing_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - none
              - RS256
              - ES256
              - HS256
          description: 必須。OPがIDTokenでクレームをJWT [JWT]でエンコードするためにサポートするJWS署名アルゴリズム（alg値）のリストを含むJSON配列。アルゴリズムRS256を含めなければならない。値noneはサポートされてもよいが、使用されるレスポンスタイプが認証エンドポイントからIDTokenを返さない場合（認証コードフロー使用時など）を除き使用してはならない。
        id_token_encryption_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - RSA1_5
              - A128KW
          description: オプション。OPがIDTokenでクレームをJWT [JWT]でエンコードするためにサポートするJWE暗号化アルゴリズム（alg値）のリストを含むJSON配列。
        id_token_encryption_enc_values_supported:
          type: array
          items:
            type: string
            enum:
              - A128CBC-HS256
              - A128GCM
              - A256GCM
          description: オプション。OPがIDTokenでクレームをJWT [JWT]でエンコードするためにサポートするJWE暗号化アルゴリズム（enc値）のリストを含むJSON配列。
        userinfo_signing_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - none
              - RS256
              - ES256
              - HS256
          description: オプション。UserInfoエンドポイントがクレームをJWT [JWT]でエンコードするためにサポートするJWS [JWS]署名アルゴリズム（alg値）[JWA]のリストを含むJSON配列。値noneが含まれてもよい。
        userinfo_encryption_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - RSA1_5
              - A128KW
          description: オプション。UserInfoエンドポイントがクレームをJWT [JWT]でエンコードするためにサポートするJWE [JWE]暗号化アルゴリズム（alg値）[JWA]のリストを含むJSON配列。
        userinfo_encryption_enc_values_supported:
          type: array
          items:
            type: string
            enum:
              - A128CBC-HS256
              - A128GCM
              - A256GCM
          description: オプション。UserInfoエンドポイントがクレームをJWT [JWT]でエンコードするためにサポートするJWE暗号化アルゴリズム（enc値）[JWA]のリストを含むJSON配列。
        request_object_signing_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - none
              - RS256
              - ES256
              - HS256
          description: オプション。OpenID Connect Core 1.0 [OpenID.Core]のセクション6.1で説明されているリクエストオブジェクトに対してOPがサポートするJWS署名アルゴリズム（alg値）のリストを含むJSON配列。これらのアルゴリズムは、リクエストオブジェクトが値で渡される場合（requestパラメータ使用）と参照で渡される場合（request_uriパラメータ使用）の両方で使用される。サーバーはnoneとRS256をサポートすべきである。
        request_object_encryption_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - RSA1_5
              - A128KW
          description: オプション。リクエストオブジェクトに対してOPがサポートするJWE暗号化アルゴリズム（alg値）のリストを含むJSON配列。これらのアルゴリズムは、リクエストオブジェクトが値で渡される場合と参照で渡される場合の両方で使用される。
        request_object_encryption_enc_values_supported:
          type: array
          items:
            type: string
            enum:
              - A128CBC-HS256
              - A128GCM
              - A256GCM
          description: オプション。リクエストオブジェクトに対してOPがサポートするJWE暗号化アルゴリズム（enc値）のリストを含むJSON配列。これらのアルゴリズムは、リクエストオブジェクトが値で渡される場合と参照で渡される場合の両方で使用される。
        token_endpoint_auth_methods_supported:
          type: array
          items:
            type: string
            enum:
              - client_secret_post
              - client_secret_basic
              - client_secret_jwt
              - private_key_jwt
              - tls_client_auth
              - self_signed_tls_client_auth
              - none
          description: オプション。このトークンエンドポイントがサポートするクライアント認証方法のリストを含むJSON配列。オプションはclient_secret_post、client_secret_basic、client_secret_jwt、およびprivate_key_jwtで、OpenID Connect Core 1.0のセクション9で説明されている。他の認証方法は拡張によって定義される場合がある。省略された場合、デフォルトはclient_secret_basic（OAuth 2.0 [RFC6749]のセクション2.3.1で指定されているHTTP基本認証スキーム）である。
        token_endpoint_auth_signing_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - none
              - RS256
              - ES256
              - HS256
          description: オプション。private_key_jwtおよびclient_secret_jwt認証方法において、トークンエンドポイントでクライアントを認証するために使用されるJWT [JWT]の署名に対してトークンエンドポイントがサポートするJWS署名アルゴリズム（alg値）のリストを含むJSON配列。サーバーはRS256をサポートすべきである。値noneは使用してはならない。
        display_values_supported:
          type: array
          items:
            type: string
            enum:
              - page
              - popup
          description: オプション。OpenIDプロバイダーがサポートするdisplayパラメータ値のリストを含むJSON配列。これらの値はOpenID Connect Core 1.0 [OpenID.Core]のセクション3.1.2.1で説明されている。
        claim_types_supported:
          type: array
          items:
            type: string
            enum:
              - normal
          description: オプション。OpenIDプロバイダーがサポートするクレームタイプのリストを含むJSON配列。これらのクレームタイプはOpenID Connect Core 1.0 [OpenID.Core]のセクション5.6で説明されている。この仕様で定義されている値はnormal、aggregated、distributedである。省略された場合、実装はnormalクレームのみをサポートする。
        claims_supported:
          type: array
          items:
            type: string
          default:
            - sub
            - iss
            - auth_time
            - acr
            - name
            - given_name
            - family_name
            - nickname
            - profile
            - picture
            - website
            - email
            - email_verified
            - locale
            - zoneinfo
            - birthdate
            - gender
            - preferred_username
            - middle_name
            - updated_at
            - address
            - phone_number
            - phone_number_verified
          description: 推奨。OpenIDプロバイダーが値を提供できる可能性のあるクレームのクレーム名のリストを含むJSON配列。プライバシーやその他の理由により、これは完全なリストではない可能性があることに注意。
        service_documentation:
          type: string
          format: uri
          description: オプション。OpenIDプロバイダーを使用する際に開発者が知りたいまたは知る必要がある可能性のある人間が読める情報を含むページのURL。特に、OpenIDプロバイダーが動的クライアント登録をサポートしない場合、クライアントの登録方法に関する情報をこのドキュメントに提供する必要がある。
        claims_locales_supported:
          type: array
          items:
            type: string
          description: オプション。返されるクレームの値にサポートされている言語とスクリプト。BCP47 [RFC5646]言語タグ値のJSON配列で表現される。すべてのクレーム値に対してすべての言語とスクリプトが必ずしもサポートされるわけではない。
        ui_locales_supported:
          type: array
          items:
            type: string
          description: オプション。ユーザーインターフェースにサポートされている言語とスクリプト。BCP47 [RFC5646]言語タグ値のJSON配列で表現される。
        claims_parameter_supported:
          type: boolean
          default: true
          description: オプション。OPがclaimsパラメータの使用をサポートするかどうかを指定するブール値。trueはサポートを示す。省略された場合、デフォルト値はfalseである。
        request_parameter_supported:
          type: boolean
          default: false
          description: オプション。OPがrequestパラメータの使用をサポートするかどうかを指定するブール値。trueはサポートを示す。省略された場合、デフォルト値はfalseである。
        request_uri_parameter_supported:
          type: boolean
          default: false
          description: オプション。OPがrequest_uriパラメータの使用をサポートするかどうかを指定するブール値。trueはサポートを示す。省略された場合、デフォルト値はtrueである。
        require_request_uri_registration:
          type: boolean
          default: false
          description: オプション。OPが使用されるrequest_uri値をrequest_uris登録パラメータを使用して事前登録することを要求するかどうかを指定するブール値。値がtrueの場合、事前登録が必須である。省略された場合、デフォルト値はfalseである。
        op_policy_uri:
          type: string
          format: uri
          description: オプション。OpenIDプロバイダーがクライアントを登録する人に対して、Relying PartyがOPから提供されたデータをどのように使用できるかにOPの要件を読むために提供するURL。提供された場合、登録プロセスはクライアントを登録する人にこのURLを表示すべきである。
        op_tos_uri:
          type: string
          format: uri
          description: オプション。OpenIDプロバイダーがクライアントを登録する人に対して、OpenIDプロバイダーのサービス規約を読むために提供するURL。提供された場合、登録プロセスはクライアントを登録する人にこのURLを表示すべきである。
        revocation_endpoint:
          type: string
          format: uri
          description: オプション。リボケーションエンドポイントのURL。
        revocation_endpoint_auth_methods_supported:
          type: array
          items:
            type: string
            enum:
              - client_secret_post
              - client_secret_basic
              - client_secret_jwt
              - private_key_jwt
              - tls_client_auth
              - self_signed_tls_client_auth
          description: オプション。リボケーションエンドポイントでサポートされる認証方法。
        revocation_endpoint_auth_signing_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - none
              - RS256
              - ES256
              - HS256
          description: オプション。リボケーションエンドポイントでサポートされる署名アルゴリズム。
        introspection_endpoint:
          type: string
          format: uri
          description: オプション。イントロスペクションエンドポイントのURL。
        introspection_endpoint_auth_methods_supported:
          type: array
          items:
            type: string
            enum:
              - none
              - RS256
              - ES256
              - HS256
          description: オプション。イントロスペクションエンドポイントでサポートされる認証方法。
        introspection_endpoint_auth_signing_alg_values_supported:
          type: array
          items:
            type: string
            enum:
              - none
              - RS256
              - ES256
              - HS256
          description: オプション。イントロスペクションエンドポイントでサポートされる署名アルゴリズム。
        code_challenge_methods_supported:
          type: array
          items:
            type: string
            enum:
              - plain
              - S256
          description: オプション。サポートされるPKCEコードチャレンジ方法。
        extension:
          type: object
          description: 認証サーバー動作のための拡張設定パラメータ。
          properties:
            access_token_type:
              type: string
              enum:
                - opaque
                - jwt
              default: opaque
              description: Specifies the format of issued access tokens. Either 'opaque' or 'jwt'.
            authorization_code_valid_duration:
              type: integer
              default: 600
              description: 認証コードの有効期間（秒）。
            token_signed_key_id:
              type: string
              description: アクセストークンの署名に使用するキーID。
            id_token_signed_key_id:
              type: string
              description: IDトークンの署名に使用するキーID。
            access_token_duration:
              type: integer
              default: 1800
              description: アクセストークンの有効期間（秒）。
            refresh_token_duration:
              type: integer
              default: 3600
              description: リフレッシュトークンの有効期間（秒）。
            refresh_token_strategy:
              type: string
              default: FIXED
              description: リフレッシュトークン発行戦略。
            rotate_refresh_token:
              type: boolean
              default: true
              description: リフレッシュトークンをローテートするかどうか。
            id_token_duration:
              type: integer
              default: 3600
              description: IDトークンの有効期間（秒）。
            id_token_strict_mode:
              type: boolean
              default: false
              description: IDトークンクレームの厳格な検証を強制する。
            default_max_age:
              type: integer
              default: 86400
              description: デフォルトの最大認証年齢（秒）。
            authorization_response_duration:
              type: integer
              default: 60
              description: 認証レスポンスのライフタイム（秒）。
            backchannel_authentication_request_expires_in:
              type: integer
              default: 300
              description: CIBAバックチャネル認証リクエストの有効期限。
            backchannel_authentication_polling_interval:
              type: integer
              default: 5
              description: CIBAバックチャネル認証のポーリング間隔。
            required_backchannel_auth_user_code:
              type: boolean
              default: false
              description: バックチャネル認証ユーザーコードが必要かどうか。
            backchannel_auth_user_code_type:
              type: string
              default: password
              description: バックチャネル認証ユーザーコードのタイプ。
            default_ciba_authentication_interaction_type:
              type: string
              default: authentication-device-notification
              description: デフォルトのCIBA認証インタラクションタイプ。
            oauth_authorization_request_expires_in:
              type: integer
              default: 1800
              description: OAuth認証リクエストの有効期限。
            fapi_baseline_scopes:
              type: array
              items:
                type: string
              description: FAPI Baseline適合を示すスコープのリスト。
            fapi_advance_scopes:
              type: array
              items:
                type: string
              description: FAPI Advanced適合を示すスコープのリスト。
            required_identity_verification_scopes:
              type: array
              items:
                type: string
              description: 身元確認が必要なスコープのリスト。
            custom_claims_scope_mapping:
              type: boolean
              description: スコープに基づくカスタムクレームのマッピングを有効にする。
            access_token_selective_user_custom_properties:
              type: boolean
              description: アクセストークンでのユーザーカスタムプロパティの選択的包含を有効にする。
            access_token_verified_claims:
              type: boolean
              description: アクセストークンでの検証済みクレームの包含を有効にする。
            access_token_selective_verified_claims:
              type: boolean
              description: アクセストークンでの検証済みクレームの選択的包含を有効にする。

    Client:
      type: object
      required:
        - redirect_uris
      properties:
        client_id:
          type: string
          format: uuid
          description: 一意クライアント識別子。他の登録済みクライアントで現在有効であってはいけない。
        client_id_alias:
          type: string
          maxLength: 255
          description: 一意クライアントIDエイリアス
        client_secret:
          type: string
          description: OPTIONAL. Client Secret. The same Client Secret value MUST NOT be assigned to multiple Clients. This value is used by Confidential Clients to authenticate to the Token Endpoint, as described in Section 2.3.1 of OAuth 2.0, and for the derivation of symmetric encryption key values, as described in Section 10.2 of OpenID Connect Core 1.0 [OpenID.Core]. It is not needed for Clients selecting a token_endpoint_auth_method of private_key_jwt unless symmetric encryption will be used.
        redirect_uris:
          type: array
          items:
            type: string
          description: REQUIRED. Array of Redirection URI values used by the Client. One of these registered Redirection URI values MUST exactly match the redirect_uri parameter value used in each Authorization Request, with the matching performed as described in Section 6.2.1 of [RFC3986] (Simple String Comparison).
        response_types:
          type: array
          items:
            type: string
            enum:
              - code
              - token
              - id_token
              - code token
              - code token id_token
              - token id_token
              - code id_token
              - none
          default:
            - code
          description: OPTIONAL. JSON [RFC8259] array containing a list of the OAuth 2.0 response_type values that the Client is declaring that it will restrict itself to using. If omitted, the default is that the Client will use only the code Response Type.
        grant_types:
          type: array
          items:
            type: string
            enum:
              - authorization_code
              - implicit
              - refresh_token
              - password
              - client_credentials
              - urn:openid:params:grant-type:ciba
          default:
            - authorization_code
          description: 'OPTIONAL. JSON array containing a list of the OAuth 2.0 Grant Types that the Client is declaring that it will restrict itself to using. The Grant Type values used by OpenID Connect are: authorization_code: The Authorization Code Grant Type described in OAuth 2.0 Section 4.1. implicit: The Implicit Grant Type described in OAuth 2.0 Section 4.2. refresh_token: The Refresh Token Grant Type described in OAuth 2.0 Section 6. The following table lists the correspondence between response_type values that the Client will use and grant_type values that MUST be included in the registered grant_types list: code: authorization_code id_token: implicit id_token token: implicit code id_token: authorization_code, implicit code token: authorization_code, implicit code id_token token: authorization_code, implicit If omitted, the default is that the Client will use only the authorization_code Grant Type.'
        application_type:
          type: string
          enum:
            - native
            - web
          default: web
          description: OPTIONAL. Kind of the application. The default, if omitted, is web. The defined values are native or web. Web Clients using the OAuth Implicit Grant Type MUST only register URLs using the https scheme as redirect_uris; they MUST NOT use localhost as the hostname. Native Clients MUST only register redirect_uris using custom URI schemes or loopback URLs using the http scheme; loopback URLs use localhost or the IP loopback literals 127.0.0.1 or [::1] as the hostname. Authorization Servers MAY place additional constraints on Native Clients. Authorization Servers MAY reject Redirection URI values using the http scheme, other than the loopback case for Native Clients. The Authorization Server MUST verify that all the registered redirect_uris conform to these constraints. This prevents sharing a Client ID across different types of Clients.
        contacts:
          type: array
          items:
            type: string
          description: オプション。このクライアントの負責者のメールアドレスの配列。一部のプロバイダーでは、Webユーザーインターフェースでクライアント情報を変更できるようにするために使用される可能性がある。
        client_name:
          type: string
          description: オプション。エンドユーザーに提示されるクライアントの名前。必要に応じて、このクレームの異なる言語とスクリプトでの表現はセクション2.1で説明されたとおり表現される。
        logo_uri:
          type: string
          format: uri
          description: オプション。クライアントアプリケーションのロゴを参照するURL。存在する場合、サーバーは承認時にこの画像をエンドユーザーに表示すべきである。このフィールドの値は有効な画像ファイルを指さなければならない。
        client_uri:
          type: string
          format: uri
          description: オプション。クライアントのホームページのURL。このフィールドの値は有効なWebページを指さなければならない。存在する場合、サーバーはこのURLをエンドユーザーにフォロー可能な方式で表示すべきである。
        policy_uri:
          type: string
          format: uri
          description: オプション。リライイングパーティクライアントがエンドユーザーに提供する、プロファイルデータの使用方法について読むためのURL。このフィールドの値は有効なWebページを指さなければならない。提供された場合、OpenIDプロバイダーはこのURLをエンドユーザーに表示すべきである。
        tos_uri:
          type: string
          format: uri
          description: オプション。リライイングパーティクライアントがエンドユーザーに提供する、リライイングパーティの利用規約を読むためのURL。このフィールドの値は有効なWebページを指さなければならない。提供された場合、OpenIDプロバイダーはこのURLをエンドユーザーに表示すべきである。
        jwks_uri:
          type: string
          format: uri
          description: OPTIONAL. URL for the Client's JWK Set [JWK] document, which MUST use the https scheme. If the Client signs requests to the Server, it contains the signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the Client's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing and encryption keys are made available, a use (public key use) parameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both signatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST match those in the certificate. Th
        jwks:
          type: string
          format: jwks
          description: OPTIONAL. Client's JWK Set [JWK] document, passed by value. The semantics of the jwks parameter are the same as the jwks_uri parameter, other than that the JWK Set is passed by value, rather than by reference. This parameter is intended only to be used by Clients that, for some reason, are unable to use the jwks_uri parameter, for instance, by native applications that might not have a location to host the contents of the JWK Set. If a Client can use jwks_uri, it MUST NOT use jwks. One significant downside of jwks is that it does not enable key rotation (which jwks_uri does, as described in Section 10 of OpenID Connect Core 1.0 [OpenID.Core]). The jwks_uri and jwks parameters MUST NOT be used together. The JWK Set MUST NOT contain private or symmetric key values.
        sector_identifier_uri:
          type: string
          format: uri
          description: OPTIONAL. URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a file with a single JSON array of redirect_uri values. Please see Section 5. Providers that use pairwise sub (subject) values SHOULD utilize the sector_identifier_uri value provided in the Subject Identifier calculation for pairwise identifiers.
        subject_type:
          type: string
          enum:
            - pairwise
            - public
          description: オプション。このクライアントへのレスポンスに要求されるsubject_type。subject_types_supportedディスカバリーパラメータには、OPのサポートされるsubject_type値のリストが含まれる。有効なタイプにはpairwiseとpublicが含まれる。
        id_token_signed_response_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm [JWA] REQUIRED for signing the ID Token issued to this Client. The value none MUST NOT be used as the ID Token alg value unless the Client uses only Response Types that return no ID Token from the Authorization Endpoint (such as when only using the Authorization Code Flow). The default, if omitted, is RS256. The public key for validating the signature is provided by retrieving the JWK Set referenced by the jwks_uri element from OpenID Connect Discovery 1.0 [OpenID.Discovery].
        id_token_encrypted_response_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE alg algorithm [JWA] REQUIRED for encrypting the ID Token issued to this Client. If this is requested, the response will be signed then encrypted, with the result being a Nested JWT, as defined in [JWT]. The default, if omitted, is that no encryption is performed.
        id_token_encrypted_response_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm [JWA] REQUIRED for encrypting the ID Token issued to this Client. If id_token_encrypted_response_alg is specified, the default id_token_encrypted_response_enc value is A128CBC-HS256. When id_token_encrypted_response_enc is included, id_token_encrypted_response_alg MUST also be provided.
        userinfo_signed_response_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm [JWA] REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims as a UTF-8 [RFC3629] encoded JSON object using the application/json content-type.
        userinfo_encrypted_response_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE [JWE] alg algorithm [JWA] REQUIRED for encrypting UserInfo Responses. If both signing and encryption are requested, the response will be signed then encrypted, with the result being a Nested JWT, as defined in [JWT]. The default, if omitted, is that no encryption is performed.
        userinfo_encrypted_response_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm [JWA] REQUIRED for encrypting UserInfo Responses. If userinfo_encrypted_response_alg is specified, the default userinfo_encrypted_response_enc value is A128CBC-HS256. When userinfo_encrypted_response_enc is included, userinfo_encrypted_response_alg MUST also be provided.
        request_object_signing_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS [JWS] alg algorithm [JWA] that MUST be used for signing Request Objects sent to the OP. All Request Objects from this Client MUST be rejected, if not signed with this algorithm. Request Objects are described in Section 6.1 of OpenID Connect Core 1.0 [OpenID.Core]. This algorithm MUST be used both when the Request Object is passed by value (using the request parameter) and when it is passed by reference (using the request_uri parameter). Servers SHOULD support RS256. The value none MAY be used. The default, if omitted, is that any algorithm supported by the OP and the RP MAY be used.
        request_object_encryption_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE [JWE] alg algorithm [JWA] the RP is declaring that it may use for encrypting Request Objects sent to the OP. This parameter SHOULD be included when symmetric encryption will be used, since this signals to the OP that a client_secret value needs to be returned from which the symmetric key will be derived, that might not otherwise be returned. The RP MAY still use other supported encryption algorithms or send unencrypted Request Objects, even when this parameter is present. If both signing and encryption are requested, the Request Object will be signed then encrypted, with the result being a Nested JWT, as defined in [JWT]. The default, if omitted, is that the RP is not declaring whether it might encrypt any Request Objects.
        request_object_encryption_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm [JWA] the RP is declaring that it may use for encrypting Request Objects sent to the OP. If request_object_encryption_alg is specified, the default request_object_encryption_enc value is A128CBC-HS256. When request_object_encryption_enc is included, request_object_encryption_alg MUST also be provided.
        token_endpoint_auth_method:
          type: string
          enum:
            - client_secret_post
            - client_secret_basic
            - client_secret_jwt
            - private_key_jwt
            - tls_client_auth
            - self_signed_tls_client_auth
            - none
          description: OPTIONAL. Requested Client Authentication method for the Token Endpoint. The options are client_secret_post, client_secret_basic, client_secret_jwt, private_key_jwt, and none, as described in Section 9 of OpenID Connect Core 1.0 [OpenID.Core]. Other authentication methods MAY be defined by extensions. If omitted, the default is client_secret_basic -- the HTTP Basic Authentication Scheme specified in Section 2.3.1 of OAuth 2.0 [RFC6749].
        token_endpoint_auth_signing_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS [JWS] alg algorithm [JWA] that MUST be used for signing the JWT [JWT] used to authenticate the Client at the Token Endpoint for the private_key_jwt and client_secret_jwt authentication methods. All Token Requests using these authentication methods from this Client MUST be rejected, if the JWT is not signed with this algorithm. Servers SHOULD support RS256. The value none MUST NOT be used. The default, if omitted, is that any algorithm supported by the OP and the RP MAY be used.
        default_max_age:
          type: integer
          description: OPTIONAL. Default Maximum Authentication Age. Specifies that the End-User MUST be actively authenticated if the End-User was authenticated longer ago than the specified number of seconds. The max_age request parameter overrides this default value. If omitted, no default Maximum Authentication Age is specified.
        require_auth_time:
          type: boolean
          default: false
          description: OPTIONAL. Boolean value specifying whether the auth_time Claim in the ID Token is REQUIRED. It is REQUIRED when the value is true. (If this is false, the auth_time Claim can still be dynamically requested as an individual Claim for the ID Token using the claims request parameter described in Section 5.5.1 of OpenID Connect Core 1.0 [OpenID.Core].) If omitted, the default value is false.
        default_acr_values:
          type: array
          items:
            type: string
          description: OPTIONAL. Default requested Authentication Context Class Reference values. Array of strings that specifies the default acr values that the OP is being requested to use for processing requests from this Client, with the values appearing in order of preference. The Authentication Context Class satisfied by the authentication performed is returned as the acr Claim Value in the issued ID Token. The acr Claim is requested as a Voluntary Claim by this parameter. The acr_values_supported discovery element contains a list of the supported acr values supported by the OP. Values specified in the acr_values request parameter or an individual acr Claim request override these default values.
        initiate_login_uri:
          type: string
          format: uri
          description: OPTIONAL. URI using the https scheme that a third party can use to initiate a login by the RP, as specified in Section 4 of OpenID Connect Core 1.0 [OpenID.Core]. The URI MUST accept requests via both GET and POST. The Client MUST understand the login_hint and iss parameters and SHOULD support the target_link_uri parameter.
        request_uris:
          type: array
          items:
            type: string
            format: uri
          description: |-
            OPTIONAL. Array of request_uri values that are pre-registered by the RP for use at the OP. These URLs MUST use the https scheme unless the target Request Object is signed in a way that is verifiable by the OP. Servers MAY cache the contents of the files referenced by these URIs and not retrieve them at the time they are used in a request. OPs can require that request_uri values used be pre-registered with the require_request_uri_registration discovery parameter.
            If the contents of the request file could ever change, these URI values SHOULD include the base64url-encoded SHA-256 hash value of the file contents referenced by the URI as the value of the URI fragment. If the fragment value used for a URI changes, that signals the server that its cached value for that URI with the old fragment value is no longer valid.
        software_id:
          type: string
          format: uuid
          description: ""
        software_version:
          type: string
          description: ""
        extension:
          type: object
          description: OPTIONAL. Extension properties for client configuration
          properties:
            access_token_duration:
              type: integer
              minimum: 1
              description: OPTIONAL. Duration of access tokens in seconds
            refresh_token_duration:
              type: integer
              minimum: 1
              description: OPTIONAL. Duration of refresh tokens in seconds
            supported_jar:
              type: boolean
              default: false
              description: OPTIONAL. JWT Authorization Request (JAR) support flag
            available_federations:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: フェデレーション識別子
                  type:
                    type: string
                    enum: [oauth2, saml2, oidc]
                    description: フェデレーションタイプ
                  sso_provider:
                    type: string
                    description: SSOプロバイダー名
                  auto_selected:
                    type: boolean
                    default: false
                    description: Auto-selection flag for federation
                required: [id, type]
              description: OPTIONAL. List of available federation configurations
            default_ciba_authentication_interaction_type:
              type: string
              enum:
                - authentication-device-notification-no-action
                - authentication-device-notification
              default: authentication-device-notification
              description: OPTIONAL. Default CIBA authentication interaction type


    AuthenticationConfig:
      type: object
      description: Authentication configuration response based on AuthenticationConfigurationRequest Java class
      required:
        - id
        - type
      properties:
        id:
          type: string
          format: uuid
          description: 設定識別子
        type:
          type: string
          description: 認証設定タイプ
        tenant_id:
          type: string
          format: uuid
          description: Tenant identifier
        attributes:
          type: object
          description: 設定属性
          additionalProperties: true
        metadata:
          type: object
          description: 設定メタデータ
          additionalProperties: true
        interactions:
          type: object
          description: 認証インタラクション設定
          additionalProperties:
            $ref: '#/components/schemas/AuthenticationInteractionConfig'
        created_at:
          type: string
          format: date-time
          description: 設定作成タイムスタンプ
        updated_at:
          type: string
          format: date-time
          description: 設定最終更新タイムスタンプ
      additionalProperties: false

    AuthenticationConfigurationRequest:
      type: object
      description: Authentication configuration request based on AuthenticationConfigurationRequest Java class
      properties:
        id:
          type: string
          format: uuid
          description: 設定識別子
        type:
          type: string
          description: 認証設定タイプ
        attributes:
          type: object
          description: Configuration-specific attributes
          additionalProperties: true
        metadata:
          type: object
          description: 設定メタデータ
          additionalProperties: true
        interactions:
          type: object
          description: 認証インタラクション設定 mapping
          additionalProperties:
            $ref: '#/components/schemas/AuthenticationInteractionConfig'
      additionalProperties: true

    AuthenticationInteractionConfig:
      type: object
      description: Authentication interaction configuration based on AuthenticationInteractionConfig Java class
      properties:
        request:
          type: object
          description: Request configuration settings (AuthenticationRequestConfig)
          properties:
            schema:
              type: object
              description: リクエスト検証用JSONスキーマ定義
              additionalProperties: true
          additionalProperties: true
        preHook:
          type: object
          description: Pre-processing hook configuration (AuthenticationPreHookConfig)
          properties:
            additional_parameters:
              type: array
              description: 追加パラメータ設定
              items:
                type: object
                additionalProperties: true
          additionalProperties: true
        execution:
          type: object
          description: Execution configuration settings (AuthenticationExecutionConfig)
          properties:
            function:
              type: string
              description: 実行関数名
            previous_interaction:
              type: object
              description: 前のインタラクション解決設定
              additionalProperties: true
            http_request:
              type: object
              description: HTTPリクエスト実行設定
              additionalProperties: true
            http_requests:
              type: array
              description: Multiple HTTP request configurations
              items:
                type: object
                additionalProperties: true
            mock:
              type: object
              description: Mock configuration for testing
              additionalProperties: true
            details:
              type: object
              description: Additional execution details
              additionalProperties: true
            http_request_store:
              type: object
              description: HTTP request store configuration
              additionalProperties: true
            http_requests_store:
              type: object
              description: Multiple HTTP requests store configuration
              additionalProperties: true
          additionalProperties: true
        userResolve:
          type: object
          description: User resolution configuration (AuthenticationResultConfig)
          properties:
            user_mapping_rules:
              type: array
              description: ユーザーマッピングルール
              items:
                $ref: '#/components/schemas/MappingRule'
          additionalProperties: true
        postHook:
          type: object
          description: Post-processing hook configuration (AuthenticationPostHookConfig)
          properties:
            additional_parameters:
              type: array
              description: 追加パラメータ設定
              items:
                $ref: '#/components/schemas/AuthenticationAdditionalParameterConfig'
          additionalProperties: true
        response:
          type: object
          description: Response configuration settings (AuthenticationResponseConfig)
          properties:
            body_mapping_rules:
              type: array
              description: ボディマッピングルール
              items:
                $ref: '#/components/schemas/MappingRule'
          additionalProperties: true
      additionalProperties: true

    InitialRegistrationConfig:
      type: object
      description: Initial registration authentication configuration
      properties:
        id:
          type: string
          format: uuid
          description: 設定識別子
        type:
          type: string
          enum:
            - initial-registration
          description: Configuration type
        email:
          type: string
          format: email
          description: User email for registration
        provider_id:
          type: string
          description: Identity provider identifier
          default: idp-server
        attributes:
          type: object
          description: Additional configuration attributes
        metadata:
          type: object
          description: 設定メタデータ
        interactions:
          type: object
          description: 認証インタラクション設定
      additionalProperties: true

    # Organization-level API Schemas
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        error_description:
          type: string
          description: Human-readable error description
        error_messages:
          type: array
          items:
            type: string
            description: Human-readable validation error message.
        error_details:
          type: object
          additionalProperties: true
          description: Additional error details

    Permission:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the permission
        name:
          type: string
          maxLength: 255
          description: Permission name (must be unique within tenant)
        description:
          type: string
          description: Human-readable description of the permission
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    PermissionCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 255
          description: Permission name (must be unique within tenant)
        description:
          type: string
          description: Human-readable description of the permission

    PermissionUpdateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 255
          description: Permission name (must be unique within tenant)
        description:
          type: string
          description: Human-readable description of the permission

    Tenant:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the tenant
        name:
          type: string
          maxLength: 255
          description: Tenant name
        type:
          type: string
          enum:
            - BUSINESS
            - PERSONAL
          description: Tenant type
        domain:
          type: string
          format: uri
          description: Tenant domain URL
        description:
          type: string
          description: Human-readable description of the tenant
        authorization_provider:
          type: string
          description: Authorization provider identifier
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    TenantCreateRequest:
      type: object
      required:
        - tenant
        - authorization_server
      properties:
        tenant:
          type: object
          required:
            - id
            - name
            - tenant_type
            - domain
            - authorization_provider
          properties:
            id:
              type: string
              format: uuid
              description: Unique identifier for the tenant
            name:
              type: string
              maxLength: 255
              description: Tenant name
            tenant_type:
              type: string
              enum:
                - BUSINESS
                - PERSONAL
              description: Tenant type
            domain:
              type: string
              format: uri
              description: Tenant domain URL
            description:
              type: string
              description: Human-readable description of the tenant
            authorization_provider:
              type: string
              description: Authorization provider identifier
        authorization_server:
          $ref: '#/components/schemas/OpenIDConfiguration'

    TenantUpdateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          description: Tenant name
        tenant_type:
          type: string
          enum:
            - BUSINESS
            - PERSONAL
          description: Tenant type
        description:
          type: string
          description: Human-readable description of the tenant

    ClientCreateRequest:
      type: object
      required:
        - redirect_uris
      properties:
        client_id:
          type: string
          format: uuid
          description: 一意クライアント識別子。他の登録済みクライアントで現在有効であってはいけない。
        client_id_alias:
          type: string
          maxLength: 255
          description: 一意クライアントIDエイリアス
        client_secret:
          type: string
          description: OPTIONAL. Client Secret. The same Client Secret value MUST NOT be assigned to multiple Clients.
        client_name:
          type: string
          description: OPTIONAL. Name of the Client to be presented to the End-User.
        client_uri:
          type: string
          format: uri
          description: OPTIONAL. URL of the home page of the Client.
        logo_uri:
          type: string
          format: uri
          description: OPTIONAL. URL that references a logo for the Client application.
        contacts:
          type: array
          items:
            type: string
          description: OPTIONAL. Array of e-mail addresses of people responsible for this Client.
        policy_uri:
          type: string
          format: uri
          description: OPTIONAL. URL that the Relying Party Client provides to the End-User to read about how the profile data will be used.
        tos_uri:
          type: string
          format: uri
          description: OPTIONAL. URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service.
        jwks_uri:
          type: string
          format: uri
          description: OPTIONAL. URL for the Client's JWK Set document, which MUST use the https scheme.
        jwks:
          type: string
          description: OPTIONAL. Client's JWK Set document, passed by value.
        application_type:
          type: string
          enum:
            - native
            - web
          default: web
          description: OPTIONAL. Kind of the application. The default, if omitted, is web.
        grant_types:
          type: array
          items:
            type: string
            enum:
              - authorization_code
              - implicit
              - refresh_token
              - password
              - client_credentials
              - urn:openid:params:grant-type:ciba
          description: List of OAuth 2.0 grant types the client can use
        redirect_uris:
          type: array
          items:
            type: string
            format: uri
          description: List of valid redirect URIs for the client
        response_types:
          type: array
          items:
            type: string
            enum:
              - code
              - token
              - id_token
              - "code token"
              - "code id_token"
              - "token id_token"
              - "code token id_token"
              - none
          description: List of OAuth 2.0 response types the client can use
        scope:
          type: string
          description: Space-separated list of OAuth 2.0 scopes
        token_endpoint_auth_method:
          type: string
          enum:
            - client_secret_post
            - client_secret_basic
            - client_secret_jwt
            - private_key_jwt
            - none
          description: Authentication method for the token endpoint
        subject_type:
          type: string
          enum:
            - pairwise
            - public
          description: OPTIONAL. subject_type requested for responses to this Client.
        sector_identifier_uri:
          type: string
          format: uri
          description: OPTIONAL. URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP.
        id_token_signed_response_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm REQUIRED for signing the ID Token issued to this Client.
        id_token_encrypted_response_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE alg algorithm REQUIRED for encrypting the ID Token issued to this Client.
        id_token_encrypted_response_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm REQUIRED for encrypting the ID Token issued to this Client.
        userinfo_signed_response_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm REQUIRED for signing UserInfo Responses.
        userinfo_encrypted_response_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE alg algorithm REQUIRED for encrypting UserInfo Responses.
        userinfo_encrypted_response_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm REQUIRED for encrypting UserInfo Responses.
        request_object_signing_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm that MUST be used for signing Request Objects sent to the OP.
        request_object_encryption_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE alg algorithm the RP is declaring that it may use for encrypting Request Objects sent to the OP.
        request_object_encryption_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm the RP is declaring that it may use for encrypting Request Objects sent to the OP.
        token_endpoint_auth_signing_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm that MUST be used for signing the JWT used to authenticate the Client at the Token Endpoint.
        default_max_age:
          type: integer
          description: OPTIONAL. Default Maximum Authentication Age.
        require_auth_time:
          type: boolean
          default: false
          description: OPTIONAL. Boolean value specifying whether the auth_time Claim in the ID Token is REQUIRED.
        default_acr_values:
          type: array
          items:
            type: string
          description: OPTIONAL. Default requested Authentication Context Class Reference values.
        initiate_login_uri:
          type: string
          format: uri
          description: OPTIONAL. URI using the https scheme that a third party can use to initiate a login by the RP.
        request_uris:
          type: array
          items:
            type: string
            format: uri
          description: OPTIONAL. Array of request_uri values that are pre-registered by the RP for use at the OP.
        software_id:
          type: string
          format: uuid
          description: OPTIONAL. Software identifier
        software_version:
          type: string
          description: OPTIONAL. Software version
        extension:
          type: object
          description: OPTIONAL. Extension properties for client configuration
          properties:
            access_token_duration:
              type: integer
              minimum: 1
              description: OPTIONAL. Duration of access tokens in seconds
            refresh_token_duration:
              type: integer
              minimum: 1
              description: OPTIONAL. Duration of refresh tokens in seconds
            supported_jar:
              type: boolean
              default: false
              description: OPTIONAL. JWT Authorization Request (JAR) support flag
            available_federations:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: フェデレーション識別子
                  type:
                    type: string
                    enum: [oauth2, saml2, oidc]
                    description: フェデレーションタイプ
                  sso_provider:
                    type: string
                    description: SSOプロバイダー名
                  auto_selected:
                    type: boolean
                    default: false
                    description: Auto-selection flag for federation
                required: [id, type]
              description: OPTIONAL. List of available federation configurations
            default_ciba_authentication_interaction_type:
              type: string
              enum:
                - authentication-device-notification-no-action
                - authentication-device-notification
              default: authentication-device-notification-no-action
              description: OPTIONAL. Default CIBA authentication interaction type

    ClientUpdateRequest:
      type: object
      properties:
        client_name:
          type: string
          description: OPTIONAL. Name of the Client to be presented to the End-User.
        client_id_alias:
          type: string
          maxLength: 255
          description: 一意クライアントIDエイリアス
        client_secret:
          type: string
          description: OPTIONAL. Client Secret. The same Client Secret value MUST NOT be assigned to multiple Clients.
        client_uri:
          type: string
          format: uri
          description: OPTIONAL. URL of the home page of the Client.
        logo_uri:
          type: string
          format: uri
          description: OPTIONAL. URL that references a logo for the Client application.
        contacts:
          type: array
          items:
            type: string
          description: OPTIONAL. Array of e-mail addresses of people responsible for this Client.
        policy_uri:
          type: string
          format: uri
          description: OPTIONAL. URL that the Relying Party Client provides to the End-User to read about how the profile data will be used.
        tos_uri:
          type: string
          format: uri
          description: OPTIONAL. URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service.
        jwks_uri:
          type: string
          format: uri
          description: OPTIONAL. URL for the Client's JWK Set document, which MUST use the https scheme.
        jwks:
          type: string
          description: OPTIONAL. Client's JWK Set document, passed by value.
        application_type:
          type: string
          enum:
            - native
            - web
          default: web
          description: OPTIONAL. Kind of the application. The default, if omitted, is web.
        grant_types:
          type: array
          items:
            type: string
            enum:
              - authorization_code
              - implicit
              - refresh_token
              - password
              - client_credentials
              - urn:openid:params:grant-type:ciba
          description: List of OAuth 2.0 grant types the client can use
        redirect_uris:
          type: array
          items:
            type: string
            format: uri
          description: List of valid redirect URIs for the client
        response_types:
          type: array
          items:
            type: string
            enum:
              - code
              - token
              - id_token
              - "code token"
              - "code id_token"
              - "token id_token"
              - "code token id_token"
              - none
          description: List of OAuth 2.0 response types the client can use
        scope:
          type: string
          description: Space-separated list of OAuth 2.0 scopes
        token_endpoint_auth_method:
          type: string
          enum:
            - client_secret_post
            - client_secret_basic
            - client_secret_jwt
            - private_key_jwt
            - none
          description: Authentication method for the token endpoint
        subject_type:
          type: string
          enum:
            - pairwise
            - public
          description: OPTIONAL. subject_type requested for responses to this Client.
        sector_identifier_uri:
          type: string
          format: uri
          description: OPTIONAL. URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP.
        id_token_signed_response_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm REQUIRED for signing the ID Token issued to this Client.
        id_token_encrypted_response_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE alg algorithm REQUIRED for encrypting the ID Token issued to this Client.
        id_token_encrypted_response_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm REQUIRED for encrypting the ID Token issued to this Client.
        userinfo_signed_response_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm REQUIRED for signing UserInfo Responses.
        userinfo_encrypted_response_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE alg algorithm REQUIRED for encrypting UserInfo Responses.
        userinfo_encrypted_response_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm REQUIRED for encrypting UserInfo Responses.
        request_object_signing_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm that MUST be used for signing Request Objects sent to the OP.
        request_object_encryption_alg:
          type: string
          enum:
            - RSA1_5
            - A128KW
          description: OPTIONAL. JWE alg algorithm the RP is declaring that it may use for encrypting Request Objects sent to the OP.
        request_object_encryption_enc:
          type: string
          enum:
            - A128CBC-HS256
            - A128GCM
            - A256GCM
          description: OPTIONAL. JWE enc algorithm the RP is declaring that it may use for encrypting Request Objects sent to the OP.
        token_endpoint_auth_signing_alg:
          type: string
          enum:
            - none
            - RS256
            - ES256
            - HS256
          description: OPTIONAL. JWS alg algorithm that MUST be used for signing the JWT used to authenticate the Client at the Token Endpoint.
        default_max_age:
          type: integer
          description: OPTIONAL. Default Maximum Authentication Age.
        require_auth_time:
          type: boolean
          default: false
          description: OPTIONAL. Boolean value specifying whether the auth_time Claim in the ID Token is REQUIRED.
        default_acr_values:
          type: array
          items:
            type: string
          description: OPTIONAL. Default requested Authentication Context Class Reference values.
        initiate_login_uri:
          type: string
          format: uri
          description: OPTIONAL. URI using the https scheme that a third party can use to initiate a login by the RP.
        request_uris:
          type: array
          items:
            type: string
            format: uri
          description: OPTIONAL. Array of request_uri values that are pre-registered by the RP for use at the OP.
        software_id:
          type: string
          format: uuid
          description: OPTIONAL. Software identifier
        software_version:
          type: string
          description: OPTIONAL. Software version
        extension:
          type: object
          description: OPTIONAL. Extension properties for client configuration
          properties:
            access_token_duration:
              type: integer
              minimum: 1
              description: OPTIONAL. Duration of access tokens in seconds
            refresh_token_duration:
              type: integer
              minimum: 1
              description: OPTIONAL. Duration of refresh tokens in seconds
            supported_jar:
              type: boolean
              default: false
              description: OPTIONAL. JWT Authorization Request (JAR) support flag
            available_federations:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: フェデレーション識別子
                  type:
                    type: string
                    enum: [oauth2, saml2, oidc]
                    description: フェデレーションタイプ
                  sso_provider:
                    type: string
                    description: SSOプロバイダー名
                  auto_selected:
                    type: boolean
                    default: false
                    description: Auto-selection flag for federation
                required: [id, type]
              description: OPTIONAL. List of available federation configurations
            default_ciba_authentication_interaction_type:
              type: string
              enum:
                - authentication-device-notification-no-action
                - authentication-device-notification
              default: authentication-device-notification-no-action
              description: OPTIONAL. Default CIBA authentication interaction type

    Role:
      type: object
      required:
        - id
        - name
        - permissions
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the role
        name:
          type: string
          maxLength: 255
          description: Role name (must be unique within tenant)
        description:
          type: string
          maxLength: 255
          description: Human-readable description of the role
        permissions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
          description: List of permissions assigned to this role
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    RoleCreateRequest:
      type: object
      required:
        - name
        - permissions
      properties:
        name:
          type: string
          maxLength: 255
          description: Role name (must be unique within tenant)
        description:
          type: string
          maxLength: 255
          description: Human-readable description of the role
        permissions:
          type: array
          items:
            type: string
            format: uuid
          description: List of permission IDs to assign to this role

    RoleUpdateRequest:
      type: object
      required:
        - name
        - permissions
      properties:
        name:
          type: string
          maxLength: 255
          description: Role name (must be unique within tenant)
        description:
          type: string
          maxLength: 255
          description: Human-readable description of the role
        permissions:
          type: array
          items:
            type: string
            format: uuid
          description: List of permission IDs to assign to this role

    # Organization User Management Schemas
    OrganizationUser:
      type: object
      required:
        - sub
        - provider_id
        - name
        - email
        - status
      properties:
        sub:
          type: string
          format: uuid
          description: Unique subject identifier for the user
        provider_id:
          type: string
          maxLength: 255
          description: Identity provider identifier
        external_user_id:
          type: string
          maxLength: 255
          description: External user identifier from identity provider
        username:
          type: string
          maxLength: 255
          description: Username for authentication
        name:
          type: string
          maxLength: 255
          description: Full display name of the user
        given_name:
          type: string
          maxLength: 255
          description: Given name (first name) of the user
        family_name:
          type: string
          maxLength: 255
          description: Family name (last name) of the user
        middle_name:
          type: string
          maxLength: 255
          description: Middle name of the user
        nickname:
          type: string
          maxLength: 255
          description: Casual name of the user
        preferred_username:
          type: string
          maxLength: 255
          description: Preferred username for display
        profile:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's profile page
        picture:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's profile picture
        website:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's website
        email:
          type: string
          format: email
          maxLength: 255
          description: Email address of the user
        email_verified:
          type: boolean
          description: Whether the email address has been verified
        gender:
          type: string
          description: Gender identity of the user
        birthdate:
          type: string
          format: date
          description: Date of birth (YYYY-MM-DD format)
        zoneinfo:
          type: string
          maxLength: 255
          description: Time zone information
        locale:
          type: string
          description: Locale preference
        phone_number:
          type: string
          pattern: "^\\+?[0-9\\- ]{7,20}$"
          description: Phone number in E.164 format
        phone_number_verified:
          type: boolean
          description: Whether the phone number has been verified
        address:
          type: object
          properties:
            street_address:
              type: string
              maxLength: 255
              description: Street address
            locality:
              type: string
              maxLength: 255
              description: City or locality
            region:
              type: string
              maxLength: 255
              description: State or region
            postal_code:
              type: string
              maxLength: 255
              description: Postal or ZIP code
            country:
              type: string
              maxLength: 255
              description: Country
          description: Physical address of the user
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
        status:
          type: string
          enum:
            - REGISTERED
            - IDENTITY_VERIFIED
            - SUSPENDED
            - DELETED
          description: User account status
        hashed_password:
          type: string
          description: Masked password field (always shows ****)
        verified_claims:
          type: object
          additionalProperties: true
          description: Verified identity claims
        custom_properties:
          type: object
          additionalProperties: true
          description: Custom user properties
        authentication_devices:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              type:
                type: string
              enabled:
                type: boolean
          description: Registered authentication devices
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
          description: Assigned roles
        permissions:
          type: array
          items:
            type: string
          description: User permissions
        assigned_tenants:
          type: array
          items:
            type: string
            format: uuid
          description: List of assigned tenant IDs
        assigned_organizations:
          type: array
          items:
            type: string
            format: uuid
          description: List of assigned organization IDs

    OrganizationUserCreateRequest:
      type: object
      required:
        - provider_id
        - name
        - email
        - raw_password
      properties:
        sub:
          type: string
          format: uuid
          description: Unique subject identifier (optional, auto-generated if not provided)
        provider_id:
          type: string
          maxLength: 255
          description: Identity provider identifier
          example: "idp-server"
        external_user_id:
          type: string
          maxLength: 255
          description: External user identifier from identity provider
        username:
          type: string
          maxLength: 255
          description: Username for authentication
        name:
          type: string
          maxLength: 255
          description: Full display name of the user
        given_name:
          type: string
          maxLength: 255
          description: Given name (first name) of the user
        family_name:
          type: string
          maxLength: 255
          description: Family name (last name) of the user
        middle_name:
          type: string
          maxLength: 255
          description: Middle name of the user
        nickname:
          type: string
          maxLength: 255
          description: Casual name of the user
        preferred_username:
          type: string
          maxLength: 255
          description: Preferred username for display
        profile:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's profile page
        picture:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's profile picture
        website:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's website
        email:
          type: string
          format: email
          maxLength: 255
          description: Email address of the user
        email_verified:
          type: boolean
          description: Whether the email address has been verified
        gender:
          type: string
          description: Gender identity of the user
        birthdate:
          type: string
          format: date
          description: Date of birth (YYYY-MM-DD format)
        zoneinfo:
          type: string
          maxLength: 255
          description: Time zone information
        locale:
          type: string
          description: Locale preference
        phone_number:
          type: string
          pattern: "^\\+?[0-9\\- ]{7,20}$"
          description: Phone number in E.164 format
        phone_number_verified:
          type: boolean
          description: Whether the phone number has been verified
        address:
          type: object
          properties:
            street_address:
              type: string
              maxLength: 255
              description: Street address
            locality:
              type: string
              maxLength: 255
              description: City or locality
            region:
              type: string
              maxLength: 255
              description: State or region
            postal_code:
              type: string
              maxLength: 255
              description: Postal or ZIP code
            country:
              type: string
              maxLength: 255
              description: Country
          description: Physical address of the user
        raw_password:
          type: string
          minLength: 8
          maxLength: 255
          description: Plain text password (will be hashed on server)
        custom_properties:
          type: object
          additionalProperties: true
          description: Custom user properties
        roles:
          type: array
          items:
            type: object
            required: ["role_id", "role_name"]
            properties:
              role_id:
                type: string
                format: uuid
                description: Unique role identifier
              role_name:
                type: string
                maxLength: 255
                description: Role name
          description: User roles
        assigned_tenants:
          type: array
          items:
            type: string
            format: uuid
          description: List of tenant IDs the user is assigned to
        current_tenant:
          type: string
          format: uuid
          description: Current primary tenant ID
        assigned_organizations:
          type: array
          items:
            type: string
            format: uuid
          description: List of organization IDs the user is assigned to
        current_organization:
          type: string
          format: uuid
          description: Current primary organization ID

    OrganizationUserUpdateRequest:
      type: object
      required:
        - provider_id
        - name
        - email
      properties:
        provider_id:
          type: string
          maxLength: 255
          description: Identity provider identifier
        external_user_id:
          type: string
          maxLength: 255
          description: External user identifier from identity provider
        username:
          type: string
          maxLength: 255
          description: Username for authentication
        name:
          type: string
          maxLength: 255
          description: Full display name of the user
        given_name:
          type: string
          maxLength: 255
          description: Given name (first name) of the user
        family_name:
          type: string
          maxLength: 255
          description: Family name (last name) of the user
        middle_name:
          type: string
          maxLength: 255
          description: Middle name of the user
        nickname:
          type: string
          maxLength: 255
          description: Casual name of the user
        preferred_username:
          type: string
          maxLength: 255
          description: Preferred username for display
        profile:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's profile page
        picture:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's profile picture
        website:
          type: string
          format: uri
          maxLength: 255
          description: URL of the user's website
        email:
          type: string
          format: email
          maxLength: 255
          description: Email address of the user
        email_verified:
          type: boolean
          description: Whether the email address has been verified
        gender:
          type: string
          description: Gender identity of the user
        birthdate:
          type: string
          format: date
          description: Date of birth (YYYY-MM-DD format)
        zoneinfo:
          type: string
          maxLength: 255
          description: Time zone information
        locale:
          type: string
          description: Locale preference
        phone_number:
          type: string
          pattern: "^\\+?[0-9\\- ]{7,20}$"
          description: Phone number in E.164 format
        phone_number_verified:
          type: boolean
          description: Whether the phone number has been verified
        address:
          type: object
          properties:
            street_address:
              type: string
              maxLength: 255
              description: Street address
            locality:
              type: string
              maxLength: 255
              description: City or locality
            region:
              type: string
              maxLength: 255
              description: State or region
            postal_code:
              type: string
              maxLength: 255
              description: Postal or ZIP code
            country:
              type: string
              maxLength: 255
              description: Country
          description: Physical address of the user
        custom_properties:
          type: object
          additionalProperties: true
          description: Custom user properties
        roles:
          type: array
          items:
            type: object
            required: ["role_id", "role_name"]
            properties:
              role_id:
                type: string
                format: uuid
                description: Unique role identifier
              role_name:
                type: string
                maxLength: 255
                description: Role name
          description: User roles
        assigned_tenants:
          type: array
          items:
            type: string
            format: uuid
          description: List of tenant IDs the user is assigned to
        current_tenant:
          type: string
          format: uuid
          description: Current primary tenant ID
        assigned_organizations:
          type: array
          items:
            type: string
            format: uuid
          description: List of organization IDs the user is assigned to
        current_organization:
          type: string
          format: uuid
          description: Current primary organization ID

    UserValidationErrorResponse:
      type: object
      required:
        - error
        - error_description
      properties:
        error:
          type: string
          description: Error code
          example: "invalid_request"
        error_description:
          type: string
          description: Human-readable error description
          example: "user registration validation is failed"
        dry_run:
          type: boolean
          description: Indicates if this was a dry run operation
        details:
          type: object
          properties:
            user:
              type: array
              items:
                type: string
              description: List of user validation error messages
          description: Detailed validation error information
          example:
            user:
              - "provider_id is missing"
              - "email format is invalid"

    OrganizationUserPasswordUpdateRequest:
      type: object
      required:
        - raw_password
      properties:
        raw_password:
          type: string
          minLength: 8
          pattern: '^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d!@#$%^&*()_+=-]{8,}$'
          description: Plain text password (will be hashed on server)

    OrganizationUserRolesUpdateRequest:
      type: object
      properties:
        roles:
          type: array
          maxItems: 50
          items:
            type: object
            required:
              - role_id
              - role_name
            properties:
              role_id:
                type: string
                format: uuid
                description: Unique role identifier
              role_name:
                type: string
                maxLength: 255
                description: Role name
            additionalProperties: false
          description: User roles
        permissions:
          type: array
          maxItems: 100
          items:
            type: string
            maxLength: 255
          description: Direct permissions assigned to user
      additionalProperties: false

    OrganizationUserTenantAssignmentsUpdateRequest:
      type: object
      required:
        - assigned_tenants
      properties:
        current_tenant_id:
          type: string
          format: uuid
          description: Current primary tenant ID
        assigned_tenants:
          type: array
          maxItems: 20
          items:
            type: string
            format: uuid
          description: List of tenant IDs the user is assigned to

    OrganizationUserOrganizationAssignmentsUpdateRequest:
      type: object
      required:
        - assigned_organizations
      properties:
        current_organization_id:
          type: string
          format: uuid
          description: Current primary organization ID
        assigned_organizations:
          type: array
          maxItems: 20
          items:
            type: string
            format: uuid
          description: List of organization IDs the user is assigned to

    MappingRule:
      type: object
      description: Mapping rule configuration based on MappingRule Java class
      properties:
        from:
          type: string
          description: Source field path for mapping
        static_value:
          description: Static value to use instead of mapping from source
        to:
          type: string
          description: Target field path for mapping
        convert_type:
          type: string
          description: Data conversion type
        functions:
          type: array
          description: List of transformation functions
          items:
            type: object
            additionalProperties: true
      additionalProperties: false

    AuthenticationAdditionalParameterConfig:
      type: object
      description: Additional parameter configuration based on AuthenticationAdditionalParameterConfig Java class
      properties:
        function:
          type: string
          description: Function name for parameter processing
        http_request:
          type: object
          description: HTTP request configuration for parameter retrieval
          additionalProperties: true
        http_requests:
          type: array
          description: Multiple HTTP requests configuration
          items:
            type: object
            additionalProperties: true
        mock:
          type: object
          description: Mock configuration for testing
          additionalProperties: true
        details:
          type: object
          description: Additional configuration details
          additionalProperties: true
      additionalProperties: false

    AuthenticationPolicyConfig:
      type: object
      description: Authentication policy configuration based on AuthenticationPolicyConfiguration Java class
      required:
        - id
        - flow
      properties:
        id:
          type: string
          format: uuid
          description: Authentication policy configuration identifier
        flow:
          type: string
          description: Authentication flow type
        policies:
          type: array
          description: List of authentication policies
          items:
            $ref: '#/components/schemas/AuthenticationPolicy'
        enabled:
          type: boolean
          description: Whether the policy configuration is enabled
          default: true
        tenant_id:
          type: string
          format: uuid
          description: Tenant identifier
        created_at:
          type: string
          format: date-time
          description: 設定作成タイムスタンプ
        updated_at:
          type: string
          format: date-time
          description: 設定最終更新タイムスタンプ
      additionalProperties: false

    AuthenticationPolicyConfigurationRequest:
      type: object
      description: Authentication policy configuration request based on AuthenticationPolicyConfigRequest Java class
      properties:
        id:
          type: string
          format: uuid
          description: Authentication policy configuration identifier
        flow:
          type: string
          description: Authentication flow type
        policies:
          type: array
          description: List of authentication policies
          items:
            $ref: '#/components/schemas/AuthenticationPolicy'
        enabled:
          type: boolean
          description: Whether the policy configuration is enabled
          default: true
      additionalProperties: true

    AuthenticationPolicy:
      type: object
      description: Authentication policy based on AuthenticationPolicy Java class
      properties:
        priority:
          type: integer
          description: Policy priority (higher values take precedence)
        conditions:
          $ref: '#/components/schemas/AuthenticationPolicyCondition'
        available_methods:
          type: array
          description: List of available authentication methods
          items:
            type: string
        acr_mapping_rules:
          type: object
          description: ACR (Authentication Context Class Reference) mapping rules
          additionalProperties:
            type: array
            items:
              type: string
        level_of_authentication_scopes:
          type: object
          description: Level of authentication scope mappings
          additionalProperties:
            type: array
            items:
              type: string
        success_conditions:
          $ref: '#/components/schemas/AuthenticationResultConditionConfig'
        failure_conditions:
          $ref: '#/components/schemas/AuthenticationResultConditionConfig'
        lock_conditions:
          $ref: '#/components/schemas/AuthenticationResultConditionConfig'
        authentication_device_rule:
          $ref: '#/components/schemas/AuthenticationDeviceRule'
        step_definitions:
          type: array
          description: List of authentication step definitions
          items:
            $ref: '#/components/schemas/AuthenticationStepDefinition'
      additionalProperties: false

    AuthenticationPolicyCondition:
      type: object
      description: Authentication policy conditions
      properties:
        client_ids:
          type: array
          description: List of client IDs this policy applies to
          items:
            type: string
        acr_values:
          type: array
          description: List of ACR values this policy applies to
          items:
            type: string
        scopes:
          type: array
          description: List of scopes this policy applies to
          items:
            type: string
      additionalProperties: true

    AuthenticationResultConditionConfig:
      type: object
      description: Authentication result condition configuration
      properties:
        conditions:
          type: array
          description: List of result conditions
          items:
            type: object
            additionalProperties: true
      additionalProperties: true

    AuthenticationDeviceRule:
      type: object
      description: Authentication device rule configuration
      properties:
        require_device_registration:
          type: boolean
          description: Whether device registration is required
        trusted_devices_only:
          type: boolean
          description: Whether only trusted devices are allowed
        device_verification_required:
          type: boolean
          description: Whether device verification is required
      additionalProperties: true

    AuthenticationStepDefinition:
      type: object
      description: Authentication step definition
      properties:
        step:
          type: integer
          description: Step number in the authentication flow
        method:
          type: string
          description: Authentication method for this step
        required:
          type: boolean
          description: Whether this step is required
        configuration:
          type: object
          description: Step-specific configuration
          additionalProperties: true
      additionalProperties: false

    # Organization Identity Verification Config Schemas
    OrganizationIdentityVerificationConfig:
      type: object
      required: ["id", "type", "enabled"]
      properties:
        id:
          type: string
          format: uuid
          description: Identity verification configuration ID
          example: "473b4179-6bed-4465-b64e-ab8969a3e8ae"
        type:
          type: string
          description: Identity verification configuration type
          example: "document_verification"
        enabled:
          type: boolean
          description: Whether the identity verification configuration is enabled
          default: true
        attributes:
          type: object
          description: 設定属性
          additionalProperties: true
          example: {}
        common:
          $ref: '#/components/schemas/IdentityVerificationCommonConfiguration'
        processes:
          type: object
          description: Process configurations by name
          additionalProperties:
            $ref: '#/components/schemas/IdentityVerificationProcessConfiguration'
        registration:
          $ref: '#/components/schemas/IdentityVerificationRegistrationConfig'
        result:
          $ref: '#/components/schemas/IdentityVerificationResultConfig'
      additionalProperties: false

    OrganizationIdentityVerificationConfigCreateRequest:
      type: object
      required: ["id", "type"]
      properties:
        id:
          type: string
          format: uuid
          description: Identity verification configuration ID (must be UUID)
          example: "473b4179-6bed-4465-b64e-ab8969a3e8ae"
        type:
          type: string
          description: Identity verification configuration type
          example: "document_verification"
        enabled:
          type: boolean
          description: Whether the identity verification configuration is enabled
          default: true
        attributes:
          type: object
          description: 設定属性
          additionalProperties: true
          example: {}
        common:
          $ref: '#/components/schemas/IdentityVerificationCommonConfiguration'
        processes:
          type: object
          description: Process configurations by name
          additionalProperties:
            $ref: '#/components/schemas/IdentityVerificationProcessConfiguration'
        registration:
          $ref: '#/components/schemas/IdentityVerificationRegistrationConfig'
        result:
          $ref: '#/components/schemas/IdentityVerificationResultConfig'
      additionalProperties: false

    OrganizationIdentityVerificationConfigUpdateRequest:
      type: object
      properties:
        type:
          type: string
          description: Identity verification configuration type
          example: "enhanced_document_verification"
        enabled:
          type: boolean
          description: Whether the identity verification configuration is enabled
        attributes:
          type: object
          description: 設定属性
          additionalProperties: true
          example: {}
        common:
          $ref: '#/components/schemas/IdentityVerificationCommonConfiguration'
        processes:
          type: object
          description: Process configurations by name
          additionalProperties:
            $ref: '#/components/schemas/IdentityVerificationProcessConfiguration'
        registration:
          $ref: '#/components/schemas/IdentityVerificationRegistrationConfig'
        result:
          $ref: '#/components/schemas/IdentityVerificationResultConfig'
      additionalProperties: false

    OrganizationIdentityVerificationConfigResponse:
      type: object
      required: ["dry_run", "result"]
      properties:
        dry_run:
          type: boolean
          description: Whether this was a dry run request
          example: false
        result:
          $ref: '#/components/schemas/OrganizationIdentityVerificationConfig'
      additionalProperties: false

    # Identity Verification Configuration Component Schemas
    IdentityVerificationCommonConfiguration:
      type: object
      properties:
        callback_application_id_param:
          type: string
          description: Callback application ID parameter
        auth_type:
          type: string
          description: Authentication type
        oauth_authorization:
          $ref: '#/components/schemas/OAuthAuthorizationConfiguration'
        hmac_authentication:
          $ref: '#/components/schemas/HmacAuthenticationConfig'
      additionalProperties: false

    IdentityVerificationProcessConfiguration:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/IdentityVerificationRequestConfig'
        pre_hook:
          $ref: '#/components/schemas/IdentityVerificationPreHookConfig'
        execution:
          $ref: '#/components/schemas/IdentityVerificationExecutionConfig'
        post_hook:
          $ref: '#/components/schemas/IdentityVerificationPostHookConfig'
        transition:
          $ref: '#/components/schemas/IdentityVerificationTransitionConfig'
        store:
          $ref: '#/components/schemas/IdentityVerificationStoreConfig'
        response:
          $ref: '#/components/schemas/IdentityVerificationResponseConfig'
      additionalProperties: false

    IdentityVerificationRequestConfig:
      type: object
      properties:
        basic_auth:
          $ref: '#/components/schemas/IdentityVerificationBasicAuthConfig'
        schema:
          type: object
          additionalProperties: true
      additionalProperties: false

    IdentityVerificationBasicAuthConfig:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      additionalProperties: false

    IdentityVerificationPreHookConfig:
      type: object
      additionalProperties: true

    IdentityVerificationExecutionConfig:
      type: object
      properties:
        http_request:
          $ref: '#/components/schemas/IdentityVerificationHttpRequestConfig'
        mock:
          $ref: '#/components/schemas/IdentityVerificationMockConfig'
      additionalProperties: false

    IdentityVerificationHttpRequestConfig:
      type: object
      properties:
        url:
          type: string
          format: uri
        method:
          type: string
          enum: [GET, POST, PUT, DELETE, PATCH]
        headers:
          type: object
          additionalProperties:
            type: string
        oauth_authorization:
          $ref: '#/components/schemas/OAuthAuthorizationConfiguration'
        hmac_authentication:
          $ref: '#/components/schemas/HmacAuthenticationConfig'
      additionalProperties: false

    IdentityVerificationMockConfig:
      type: object
      properties:
        enabled:
          type: boolean
        response:
          type: object
          additionalProperties: true
      additionalProperties: false

    IdentityVerificationPostHookConfig:
      type: object
      additionalProperties: true

    IdentityVerificationTransitionConfig:
      type: object
      properties:
        approved:
          $ref: '#/components/schemas/IdentityVerificationConditionConfig'
        rejected:
          $ref: '#/components/schemas/IdentityVerificationConditionConfig'
        canceled:
          $ref: '#/components/schemas/IdentityVerificationConditionConfig'
      additionalProperties: false

    IdentityVerificationConditionConfig:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/IdentityVerificationCondition'
      additionalProperties: false

    IdentityVerificationCondition:
      type: object
      properties:
        path:
          type: string
          description: JSONPath expression
        operator:
          type: string
          enum: [eq, ne, gt, lt, gte, lte, contains, exists]
        value:
          description: Expected value for comparison
        type:
          type: string
          enum: [string, number, boolean, array, object]
      additionalProperties: false

    IdentityVerificationStoreConfig:
      type: object
      properties:
        enabled:
          type: boolean
        mapping_rules:
          type: array
          items:
            $ref: '#/components/schemas/MappingRule'
      additionalProperties: false

    IdentityVerificationResponseConfig:
      type: object
      properties:
        template:
          type: string
        content_type:
          type: string
      additionalProperties: false

    IdentityVerificationRegistrationConfig:
      type: object
      properties:
        enabled:
          type: boolean
        auto_registration:
          type: boolean
        required_attributes:
          type: array
          items:
            type: string
      additionalProperties: false

    IdentityVerificationResultConfig:
      type: object
      properties:
        verified_claims_mapping_rules:
          type: array
          items:
            $ref: '#/components/schemas/MappingRule'
        source_details_mapping_rules:
          type: array
          items:
            $ref: '#/components/schemas/MappingRule'
      additionalProperties: false

    # Organization Federation Config Schemas
    OrganizationFederationConfig:
      type: object
      required: ["id", "type", "sso_provider", "enabled"]
      properties:
        id:
          type: string
          format: uuid
          description: Federation configuration ID
          example: "473b4179-6bed-4465-b64e-ab8969a3e8ae"
        type:
          type: string
          enum: ["oauth2", "saml2", "oidc"]
          description: Federation type
          example: "oidc"
        sso_provider:
          type: string
          description: SSO provider identifier
          example: "google-oidc"
        payload:
          type: object
          description: Federation-specific configuration payload
          properties:
            client_id:
              type: string
              description: OAuth2/OIDC client ID
            client_secret:
              type: string
              description: OAuth2/OIDC client secret
            issuer:
              type: string
              format: uri
              description: OIDC issuer URL
            authorization_endpoint:
              type: string
              format: uri
              description: OAuth2/OIDC authorization endpoint
            token_endpoint:
              type: string
              format: uri
              description: OAuth2/OIDC token endpoint
            userinfo_endpoint:
              type: string
              format: uri
              description: OIDC userinfo endpoint
            jwks_uri:
              type: string
              format: uri
              description: OIDC JSON Web Key Set URI
            scope:
              type: string
              description: OAuth2/OIDC scopes
              default: "openid profile email"
          additionalProperties: true
          example:
            client_id: "test-client-id"
            client_secret: "test-client-secret"
            issuer: "https://accounts.google.com"
            authorization_endpoint: "https://accounts.google.com/o/oauth2/auth"
            token_endpoint: "https://oauth2.googleapis.com/token"
            userinfo_endpoint: "https://openidconnect.googleapis.com/v1/userinfo"
        enabled:
          type: boolean
          description: Whether the federation configuration is enabled
          default: true
      additionalProperties: false

    OrganizationFederationConfigCreateRequest:
      type: object
      required: ["id", "type", "sso_provider", "enabled"]
      properties:
        id:
          type: string
          format: uuid
          description: Federation configuration ID (must be UUID)
          example: "473b4179-6bed-4465-b64e-ab8969a3e8ae"
        type:
          type: string
          enum: ["oauth2", "saml2", "oidc"]
          description: Federation type
          example: "oidc"
        sso_provider:
          type: string
          description: SSO provider identifier (should be unique within tenant)
          example: "google-oidc"
        payload:
          type: object
          description: Federation-specific configuration payload
          additionalProperties: true
          example:
            client_id: "test-client-id"
            client_secret: "test-client-secret"
            issuer: "https://accounts.google.com"
            authorization_endpoint: "https://accounts.google.com/o/oauth2/auth"
            token_endpoint: "https://oauth2.googleapis.com/token"
            userinfo_endpoint: "https://openidconnect.googleapis.com/v1/userinfo"
        enabled:
          type: boolean
          description: Whether the federation configuration is enabled
          default: true
      additionalProperties: false

    OrganizationFederationConfigUpdateRequest:
      type: object
      properties:
        type:
          type: string
          enum: ["oauth2", "saml2", "oidc"]
          description: Federation type
        sso_provider:
          type: string
          description: SSO provider identifier
        payload:
          type: object
          description: Federation-specific configuration payload
          additionalProperties: true
        enabled:
          type: boolean
          description: Whether the federation configuration is enabled
      additionalProperties: false


    OAuthAuthorizationConfiguration:
      type: object
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        token_endpoint:
          type: string
          format: uri
        scope:
          type: string
      additionalProperties: false

    HmacAuthenticationConfig:
      type: object
      properties:
        secret_key:
          type: string
        algorithm:
          type: string
          enum: [HmacSHA256, HmacSHA512]
        header_name:
          type: string
      additionalProperties: false

    # Organization Authentication Interaction Management Schemas
    OrganizationAuthenticationInteraction:
      type: object
      required:
        - transaction_id
        - type
        - payload
      properties:
        transaction_id:
          type: string
          description: 認証トランザクションID
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        type:
          type: string
          description: インタラクションタイプ（password, mfa, biometric等）
          example: "password"
        payload:
          type: object
          description: インタラクション固有のペイロードデータ
          additionalProperties: true
          example:
            status: "completed"
            created_at: "2025-09-18T10:30:00Z"
            metadata: { }
      additionalProperties: false

    OrganizationAuthenticationInteractionDetail:
      allOf:
        - $ref: '#/components/schemas/OrganizationAuthenticationInteraction'
        - type: object
          description: 詳細取得APIのレスポンスは基本スキーマと同じ構造

    # Organization Authentication Transaction Management Schemas
    OrganizationAuthenticationTransaction:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: 認証トランザクションID
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        client_id:
          type: string
          description: クライアントID
          example: "example-client-001"
        redirect_uri:
          type: string
          format: uri
          description: リダイレクトURI
          example: "https://example.com/callback"
        scope:
          type: string
          description: 要求されたスコープ
          example: "openid profile email"
        state:
          type: string
          description: ステート値
          example: "random-state-value"
        nonce:
          type: string
          description: ナンス値
          example: "random-nonce-value"
        response_type:
          type: string
          description: レスポンスタイプ
          example: "code"
        code_challenge:
          type: string
          description: PKCEコードチャレンジ
          example: "dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
        code_challenge_method:
          type: string
          description: PKCEコードチャレンジメソッド
          example: "S256"
      additionalProperties: true

    OrganizationAuthenticationTransactionDetail:
      allOf:
        - $ref: '#/components/schemas/OrganizationAuthenticationTransaction'
        - type: object
          description: 詳細取得APIのレスポンスは基本スキーマと同じ構造

  responses:
    BadRequest:
      description: Bad Request - Invalid input parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error type
                example: "invalid_request"
              error_description:
                type: string
                description: Human-readable description of the error
                example: "The request is missing required parameters"
              details:
                type: object
                description: Additional error details
                additionalProperties: true
            required: ["error", "error_description"]
            additionalProperties: false

    Unauthorized:
      description: Unauthorized - Authentication required or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error type
                example: "unauthorized"
              error_description:
                type: string
                description: Human-readable description of the error
                example: "Authentication required"
            required: ["error", "error_description"]
            additionalProperties: false

    Forbidden:
      description: Forbidden - Insufficient permissions
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error type
                example: "access_denied"
              error_description:
                type: string
                description: Human-readable description of the error
                example: "Insufficient permissions to access this resource"
            required: ["error", "error_description"]
            additionalProperties: false

    NotFound:
      description: Not Found - Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error type
                example: "not_found"
              error_description:
                type: string
                description: Human-readable description of the error
                example: "The requested resource was not found"
            required: ["error", "error_description"]
            additionalProperties: false

    Conflict:
      description: Conflict - Resource already exists or conflicts with current state
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error type
                example: "conflict"
              error_description:
                type: string
                description: Human-readable description of the error
                example: "Resource already exists"
            required: ["error", "error_description"]
            additionalProperties: false

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error type
                example: "internal_server_error"
              error_description:
                type: string
                description: Human-readable description of the error
                example: "An internal server error occurred"
            required: ["error", "error_description"]
            additionalProperties: false

