openapi: 3.0.3
info:
  title: リソースオーナー用API
  version: 1.0.0

tags:
  - name: ユーザー
    description: |
      リソースオーナー（ユーザー）本人による操作に関するAPI群。

      主に以下のような操作を提供します：
       - 自身のアカウント削除
       - 多要素認証（MFA）の登録要求（FIDO-UAF など）
      
      アクセストークンを用いて、ユーザー本人による安全な自己操作を実現します。
  - name: 身元確認申込み
    description: |
      `idp-server` は身元確認済みID（verified ID）を提供するために、外部のサービスと連携した申込み・審査・完了登録の一連のフローを管理できます。
      
      このAPIを利用することで、ユーザーから収集した情報を外部の身元確認サービスに送信し、確認済みクレーム（`verified_claims`）として `idp-server` に反映できます。
      
      - Control Plane APIでテンプレートを登録
      - ユーザーが申込みを行うと、テンプレートに従い外部APIと連携
      - コールバック等で審査結果・verified_claims登録用データを受信
      - 認証時、verified_claimsを含んだIDトークンやUserInfoを返却
      
      テンプレートでは各種マッピングルール、JSON Schemaによるバリデーション、外部APIとの連携方式（OAuth2, HMAC, なし）を柔軟に定義可能です。
      
      アクセストークンを用いて、ユーザー本人による安全な自己操作を実現します。
  - name: 身元確認結果
    description: |
      身元確認結果を確認するためのAPI
      アクセストークンを用いて、ユーザー本人による安全な自己操作を実現します。
      

paths:
  /{tenant-id}/v1/me:
    delete:
      tags:
        - ユーザー
      summary: ユーザー削除
      description: |
        ユーザー（リソースオーナー）自身の削除を行う。
      parameters:
        - $ref: '#/components/parameters/TenantId'
      responses:
        '204':
          description: User deleted
          content:
            application/json:
              schema:
                type: object

  /{tenant-id}/v1/me/mfa/{mfa-operation-type}:
    post:
      tags:
        - ユーザー
      summary: MFAの登録要求
      description: |
        FIDO-UAFなどの登録要求の依頼を行う。
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - $ref: '#/components/parameters/MfaOperationType'
      requestBody:
        required: false
        description: MFAの仕様に応じたパラメータをBodyに設定する。
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FidoUafRegistrationRequest'
                - $ref: '#/components/schemas/FidoUafDeRegistrationRequest'
      responses:
        '200':
          description: Operation requested
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    description: 認証トランザクションID

  /{tenant-id}/v1/me/authentication-devices/{device-id}:
    patch:
      tags:
        - ユーザー
      summary: 認証デバイス部分更新API
      description: |
        認証デバイスの属性情報の部分更新の依頼を行う。
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - $ref: '#/components/parameters/DeviceId'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationDeviceRequest'
      responses:
        '200':
          description: 200 OK

  /{tenant-id}/v1/me/identity-verification/applications/{verification-type}/{verification-process}:
    post:
      tags:
        - 身元確認申込み
      security:
        - OAuth2:
            - identity_verification_application
      summary: 身元確認申込み
      description: |
        指定された verification-type（テンプレート種別）および verification-process（申込み処理タイプ）に従い、
        身元確認申込みの初期リクエストを実行します。
        
        レスポンスに後続で利用するidが返却されます。
        
        このAPIは、あらかじめ Control Plane API により定義されたテンプレートに基づいて外部サービスに対して申請データを送信し、
        審査プロセスの開始またはeKYCプロセスの起動を行います。
        
        - `verification-type` はテンプレートの `type` に対応
        - `verification-process` はテンプレート内の `processes` のキーに対応（例: apply, request-ekyc など）
        
        リクエストボディはテンプレートで定義された `request.schema` に基づいてバリデーションされ、
        必須項目の漏れや形式の不正がある場合はエラーになります。
        
        正常に処理された場合は、`response.body_mapping_rules` に従いレスポンスを返却します。
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - $ref: '#/components/parameters/VerificationType'
        - $ref: '#/components/parameters/VerificationProcess'
      requestBody:
        required: false
        description: |
          テンプレートで定義されたスキーマに従うリクエストボディ。
          内容は `verification-type` および `verification-process` ごとに異なる。
        content:
          application/json:
            schema:
              type: object
              additionalProperties:

            example:
              last_name: "伊藤"
              first_name: "一朗"
              birthdate: "1990-01-01"
              email_address: "ichiro@example.com"

      responses:
        '200':
          description: 申込み成功時のレスポンス
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    description: |
                      後続で利用する身元確認申込の識別子。
                additionalProperties:
                  description:
                    設定ファイルの `response` に設定した項目が返却される
              example:
               id: "565b030e-04b5-45eb-989e-136e3623dc7d"
               application_number: "abcdefg012345"
        '400':
          description: 申込みの入力エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    description: |
                      エラーの種類を示す識別子（"invalid_request"）。
                  error_description:
                    type: string
                    description: |
                      エラーの概要。
                  error_details:
                    type: object
                    description: |
                      エラーの詳細内容。バリデーションの具体的な内容や。外部サービスからのエラーレスポンス。
                example:
                  error: "invalid_request"
                  error_description: "The identity verification request is invalid. Please review your input for missing or incorrect fields."

        '401':
          description: |
           認証エラー。アクセストークンが無効な場合。
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    description: |
                      エラーの種類を示す識別子（"invalid_token"）。
                  error_description:
                    type: string
                    description: |
                      エラーの概要。

        '403':
          description: |
            権限エラー。スコープ不足。
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    description: |
                      エラーの種類を示す識別子（"invalid_token"）。
                  error_description:
                    type: string
                    description: |
                      エラーの概要。

  /{tenant-id}/v1/me/identity-verification/applications:
    get:
      tags:
        - 身元確認申込み
      security:
        - OAuth2:
          - identity_verification_application
      summary: 身元確認申込み一覧取得
      description: |
        身元確認の申込みの一覧を取得する。

      parameters:
        - $ref: '#/components/parameters/TenantId'
        - name: id
          in: query
          required: false
          schema:
            type: string
            format: uuid
          description: 身元確認申請のID（UUID形式）での絞り込み
        - name: type
          in: query
          required: false
          schema:
            type: string
          description: 申込み種別（verification-type）での絞り込み
        - name: client_id
          in: query
          required: false
          schema:
            type: string
          description: 申請時に使用されたクライアントID
        - name: status
          in: query
          required: false
          schema:
            type: string
          description: |
            申請のステータス
        - in: query
          name: application_details.<key>
          schema:
            type: string
          description: 申込み詳細情報のオブジェクトのkeyに対する検索（keyは具体的な値の設定が必要）
        - in: query
          name: external_application_details.<key>
          schema:
            type: string
          description: 外部申込み結果の詳細情報のオブジェクトのkeyに対する検索（keyは具体的な値の設定が必要）
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: 絞り込み開始日時（ISO 8601形式）
        - name: to
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: 絞り込み終了日時（ISO 8601形式）
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: 取得件数の上限（デフォルトは20件）
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: ページネーション用のオフセット（デフォルトは0）

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: 申込みID
                        tenant_id:
                          type: string
                          format: uuid
                          description: テナントID
                        user_id:
                          type: string
                          format: uuid
                          description: ユーザーID
                        type:
                          type: string
                          description: 申込み種別（verification-type）
                        client_id:
                          type: string
                          description: クライアントID
                        application_details:
                          type: object
                          description: |
                            申込みの詳細情報。storeの設定に応じて保存したデータ。
                        processes:
                          type: object
                          additionalProperties:
                            type: object
                            properties:
                              call_count:
                                type: integer
                              success_count:
                                type: integer
                              failure_count:
                                type: integer
                        attributes:
                          type: object
                          description: |
                            申込みの属性情報。attributesに設定したデータ。
                        status:
                          type: string
                          description: |
                            現在のステータス

                            | ステータス名                   | 説明                                                             |
                            |--------------------------|----------------------------------------------------------------|
                            | `requested`              | 申請リクエストが正常に受理された直後の状態です。                                       |
                            | `applying`               | ユーザーまたは外部システムが必要な情報を入力・収集中の状態です。フォーム入力中や追加書類のアップロード待ちなどが該当します。 |
                            | `applied`                | 申請情報の送信が完了し、審査待ちの状態です。全ての申込み処理が終了した後に遷移します。                  |
                            | `examination_processing` | 申請内容に対する審査が実施されている状態です。外部eKYCサービスとの連携や人手による審査が行われている場合も含まれます。  |
                            | `approved`               | 審査の結果、申請が承認された状態です。ユーザーの身元確認が完了し、検証済みクレームの登録などが行われます。          |
                            | `rejected`               | 審査の結果、申請が却下された状態です。必要に応じて理由の提示や再申請の導線提示が推奨されます。                |
                            | `expired`                | 有効期限切れなどにより、申請が無効となった状態です。一定期間操作が行われなかった場合などに自動的に遷移することがあります。  |
                            | `cancelled`              | ユーザーまたは管理者によって申請が任意に中断された状態です。取り下げやキャンセル操作などが該当します。            |
                            | `unknown`                | 状態が特定できない不明な状態です。移行中やデータ不整合、バージョン差異等により例外的に発生する可能性があります。       |

                          enum:
                            - requested
                            - applying
                            - applied
                            - examination_processing
                            - approved
                            - rejected
                            - expired
                            - cancelled
                            - unknown
                        requested_at:
                          type: string
                          format: date-time
                          description: 申請が行われた日時
                  total_count:
                    type: integer
                    description: 申込の総数
                  limit:
                    type: integer
                    description: 取得件数の上限
                  offset:
                    type: integer
                    description:  ページネーション用のオフセット




  /{tenant-id}/v1/me/identity-verification/applications/{verification-type}/{id}/{verification-process}:
    post:
      tags:
        - 身元確認申込み
      security:
        - OAuth2:
          - identity_verification_application
      summary: 身元確認申込み後続処理
      description: |
        既存の身元確認申込み（application）に対して、定義済みテンプレートおよびプロセスに従った後続の処理を実行します。
        
        このAPIは、初回申込み（apply等）によって発行された申込みID（`id`）を指定し、
        対象となる申込みに対して、eKYC完了通知・審査要求・外部サービスとの再連携などのアクションを柔軟に実行可能です。
        
        - `verification-type` はテンプレートの `type` に対応
        - `id` は既存の申込みIDを指定
        - `verification-process` はテンプレートの `processes` 内で定義された処理（例: `complete-ekyc`, `callback-result`）
        
        リクエストボディは、該当プロセスで必要とされる `request.schema` に基づいてバリデーションされ、
        外部サービスとの連携や verified_claims 登録等が自動的に実行されます。
        
        正常に処理された場合は、`response.body_mapping_rules` に従いレスポンスを返却します。
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - $ref: '#/components/parameters/VerificationType'
        - $ref: '#/components/parameters/ApplicationId'
        - $ref: '#/components/parameters/VerificationProcess'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Processed
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  description: |
                    設定ファイルの `response` に設定した項目が返却される


  /{tenant-id}/v1/me/identity-verification/applications/{verification-type}/{id}:
    delete:
      tags:
        - 身元確認申込み
      security:
        - OAuth2:
          - identity_verification_application_delete
      summary: 身元確認申込み削除
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - $ref: '#/components/parameters/VerificationType'
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '204':
          description: No Content

  /{tenant-id}/v1/me/identity-verification/results:
    get:
      tags:
        - 身元確認結果
      security:
        - OAuth2:
          - identity-verification-result
      summary: 身元確認結果の一覧取得
      description: |
        身元確認結果の一覧を取得します。
      parameters:
        - $ref: '#/components/parameters/TenantId'
        - name: id
          in: query
          required: false
          schema:
            type: string
            format: uuid
          description: 身元確認結果のID（UUID形式）での絞り込み
        - name: application_id
          in: query
          required: false
          schema:
            type: string
            format: uuid
          description: 身元確認申込みのID（UUID形式）での絞り込み
        - name: type
          in: query
          required: false
          schema:
            type: string
          description: 申込み種別（verification-type）での絞り込み
        - name: external_application_id
          in: query
          required: false
          schema:
            type: string
          description: 外部連携先の申請ID
        - name: external_service
          in: query
          required: false
          schema:
            type: string
          description: 連携先の外部サービス名
        - in: query
          name: verified_claims.<key>
          schema:
            type: string
          description: verified_claimsのオブジェクトのkeyに対する検索（keyは具体的な値の設定が必要）
        - name: verified_at_from
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: verified_atに対する絞り込み 開始日時（ISO 8601形式）
        - name: verified_at_to
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: verified_atに対する絞り込み 終了日時（ISO 8601形式）
        - name: verified_until_from
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: verified_untilに対する絞り込み 開始日時（ISO 8601形式）
        - name: verified_until_to
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: verified_untilに対する絞り込み 終了日時（ISO 8601形式）
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: 取得件数の上限（デフォルトは20件）
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: ページネーション用のオフセット（デフォルトは0）
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: 身元確認結果のID
                        tenant_id:
                          type: string
                          format: uuid
                          description: テナントID
                        user_id:
                          type: string
                          format: uuid
                          description: ユーザーID
                        application_id:
                          type: string
                          format: uuid
                          description: 元となる申請のID
                        type:
                          type: string
                          description: 申込み種別（verification-type）
                        verified_at:
                          type: string
                          format: date-time
                          description: 身元確認が完了した日時
                        verified_until:
                          type: string
                          format: date-time
                          nullable: true
                          description: 身元確認が有効な期限（省略可能）
                        source:
                          type: string
                          description: |
                            結果の生成元（例: application）
                        source_details:
                          type: object
                          description: |
                            設定の `result.source_details` に定義したデータ。
                        attributes:
                          type: object
                          description: |
                            身元確認の属性情報。設定のattributesが登録される。
                        verified_claims:
                          type: object
                          description: |
                            設定の `result.verified_claims` に定義したデータ。IDA準拠を想定。
                          properties:
                            claims:
                              type: object
                            verification:
                              type: object
                  total_count:
                    type: integer
                    description: 身元確認結果の総数
                  limit:
                    type: integer
                    description: 取得件数の上限
                  offset:
                    type: integer
                    description: ページネーション用のオフセット


components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://xxx/{tenant-id}/v1/authorizations
          tokenUrl: https://xxx/{tenant-id}/v1//tokens
          scopes:
            identity_verification_application: 身元確認の申込みのAPIに必要なスコープ
            identity_verification_application_delete: 身元確認の申込みの削除スコープ
            identity_verification_result: 身元確認結果のAPIに必要なスコープ

  parameters:
    TenantId:
      name: tenant-id
      in: path
      required: true
      schema:
        type: string
    MfaOperationType:
      name: mfa-operation-type
      in: path
      required: true
      schema:
        type: string
        example: fido-uaf-registration
    DeviceId:
      name: device-id
      in: path
      required: true
      schema:
        type: string
        example: 0048607e-9b89-4ad9-a203-976b7f72f5f2
    VerificationType:
      name: verification-type
      in: path
      required: true
      schema:
        type: string
        example: my_number
    VerificationProcess:
      name: verification-process
      in: path
      required: true
      schema:
        type: string
        example: capture
    ApplicationId:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid

  schemas:
    FidoUafRegistrationRequest:
      description: FIDO-UAF登録用のリクエスト
      allOf:
        - $ref: '#/components/schemas/AuthenticationDeviceRequest'

    FidoUafDeRegistrationRequest:
      description: FIDO-UAF解除用のリクエスト
      type: object
      properties:
        device_id:
          type: string
          example: cab44004-c288-4ae4-be88-9b1cbbe79b71

    AuthenticationDeviceRequest:
      type: object
      properties:
        app_name:
          type: string
          description: アプリ名（例：◯◯アプリ）。
        platform:
          type: string
          description: デバイスのプラットフォーム名（例："Android", "iOS" など）。
        os:
          type: string
          description: オペレーティングシステムのバージョン情報（例："Android15"）。
        model:
          type: string
          description: デバイスモデル名（例："galaxy z fold 6"）。
        locale:
          type: string
          description: 言語設定。（例：ja, en）
        notification_channel:
          type: string
          enum: [ fcm, apns ]
          description: 通知チャネル（"fcm", "apns"）。Firebase Cloud Messaging（Android）またはApple Push Notification Service（iOS）を指定。
        notification_token:
          type: string
          description: 通知を送信するためのトークン（例：FCMトークン）。
        priority:
          type: integer
          minimum: 1
          description: >
            このデバイスの通知の優先順位（例: 1, 2, 100）。
            数値が小さいほど優先度が高く、1が最も高い。
            省略された場合は、認証デバイスの登録数の連番となる。
