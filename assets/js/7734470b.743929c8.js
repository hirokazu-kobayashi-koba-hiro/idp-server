"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7325],{8619:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"content_06_developer-guide/control-plane/system-level-api","title":"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebAPI\u5b9f\u88c5\u30ac\u30a4\u30c9","description":"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684","source":"@site/docs/content_06_developer-guide/02-control-plane/03-system-level-api.md","sourceDirName":"content_06_developer-guide/02-control-plane","slug":"/content_06_developer-guide/control-plane/system-level-api","permalink":"/idp-server/docs/content_06_developer-guide/control-plane/system-level-api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/content_06_developer-guide/02-control-plane/03-system-level-api.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"docs","previous":{"title":"Control Plane\u306eAPI\u5b9f\u88c5","permalink":"/idp-server/docs/content_06_developer-guide/control-plane/first-api"},"next":{"title":"\u7d44\u7e54\u30ec\u30d9\u30ebAPI\u5b9f\u88c5\u30ac\u30a4\u30c9","permalink":"/idp-server/docs/content_06_developer-guide/control-plane/organization-level-api"}}');var s=t(74848),i=t(28453);const o={},a="\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebAPI\u5b9f\u88c5\u30ac\u30a4\u30c9",l={},d=[{value:"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684",id:"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684",level:2},{value:"\u6240\u8981\u6642\u9593",id:"\u6240\u8981\u6642\u9593",level:3},{value:"\u524d\u63d0\u77e5\u8b58",id:"\u524d\u63d0\u77e5\u8b58",level:3},{value:"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebAPI\u3068\u306f",id:"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebapi\u3068\u306f",level:2},{value:"\u5b9f\u88c5\u306e\u5168\u4f53\u30d5\u30ed\u30fc",id:"\u5b9f\u88c5\u306e\u5168\u4f53\u30d5\u30ed\u30fc",level:2},{value:"\u5b9f\u88c5\u4f8b: Role\u7ba1\u7406API",id:"\u5b9f\u88c5\u4f8b-role\u7ba1\u7406api",level:2},{value:"\u8981\u4ef6",id:"\u8981\u4ef6",level:3},{value:"Step 1: API\u5951\u7d04\u5b9a\u7fa9\uff08Control Plane\u5c64\uff09",id:"step-1-api\u5951\u7d04\u5b9a\u7fa9control-plane\u5c64",level:2},{value:"1-1. \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9",id:"1-1-\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9",level:3},{value:"1-2. Request DTO\u4f5c\u6210",id:"1-2-request-dto\u4f5c\u6210",level:3},{value:"1-3. Response DTO\u4f5c\u6210",id:"1-3-response-dto\u4f5c\u6210",level:3},{value:"1-4. Context Creator\u4f5c\u6210",id:"1-4-context-creator\u4f5c\u6210",level:3},{value:"1-5. Context\u4f5c\u6210",id:"1-5-context\u4f5c\u6210",level:3},{value:"Step 2: EntryService\u5b9f\u88c5\uff08UseCase\u5c64\uff09",id:"step-2-entryservice\u5b9f\u88c5usecase\u5c64",level:2},{value:"Step 3: Controller\u5b9f\u88c5\uff08Controller\u5c64\uff09",id:"step-3-controller\u5b9f\u88c5controller\u5c64",level:2},{value:"Step 4: E2E\u30c6\u30b9\u30c8\u4f5c\u6210",id:"step-4-e2e\u30c6\u30b9\u30c8\u4f5c\u6210",level:2},{value:"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8",id:"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8",level:2},{value:"API\u5951\u7d04\u5b9a\u7fa9\uff08Control Plane\u5c64\uff09",id:"api\u5951\u7d04\u5b9a\u7fa9control-plane\u5c64",level:3},{value:"EntryService\u5b9f\u88c5\uff08UseCase\u5c64\uff09",id:"entryservice\u5b9f\u88c5usecase\u5c64",level:3},{value:"Controller\u5b9f\u88c5\uff08Controller\u5c64\uff09",id:"controller\u5b9f\u88c5controller\u5c64",level:3},{value:"E2E\u30c6\u30b9\u30c8",id:"e2e\u30c6\u30b9\u30c8",level:3},{value:"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc",id:"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc",level:2},{value:"\u30a8\u30e9\u30fc1: <code>default\u30e1\u30bd\u30c3\u30c9</code>\u3092\u5b9f\u88c5\u3057\u3066\u3057\u307e\u3046",id:"\u30a8\u30e9\u30fc1-default\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3057\u307e\u3046",level:3},{value:"\u30a8\u30e9\u30fc2: Context Creator\u672a\u4f7f\u7528",id:"\u30a8\u30e9\u30fc2-context-creator\u672a\u4f7f\u7528",level:3},{value:"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7",id:"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7",level:2},{value:"\ud83d\udcd6 \u6b21\u306b\u8aad\u3080\u3079\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8",id:"-\u6b21\u306b\u8aad\u3080\u3079\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8",level:3},{value:"\ud83d\udd17 \u8a73\u7d30\u60c5\u5831",id:"-\u8a73\u7d30\u60c5\u5831",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebapi\u5b9f\u88c5\u30ac\u30a4\u30c9",children:"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebAPI\u5b9f\u88c5\u30ac\u30a4\u30c9"})}),"\n",(0,s.jsx)(n.h2,{id:"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684",children:"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30eb\u7ba1\u7406API"}),"\u3092\u3001\u30bc\u30ed\u304b\u3089\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u304c\u76ee\u6a19\u3067\u3059\u3002"]}),"\n",(0,s.jsx)(n.h3,{id:"\u6240\u8981\u6642\u9593",children:"\u6240\u8981\u6642\u9593"}),"\n",(0,s.jsxs)(n.p,{children:["\u23f1\ufe0f ",(0,s.jsx)(n.strong,{children:"\u7d0445\u5206"}),"\uff08\u5b9f\u88c5 + \u30c6\u30b9\u30c8\uff09"]}),"\n",(0,s.jsx)(n.h3,{id:"\u524d\u63d0\u77e5\u8b58",children:"\u524d\u63d0\u77e5\u8b58"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../01-architecture-overview.md",children:"01. \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6982\u8981"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../02-first-api-implementation.md",children:"02. \u6700\u521d\u306eAPI\u5b9f\u88c5"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"../03-common-patterns.md",children:"03. \u5171\u901a\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebapi\u3068\u306f",children:"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebAPI\u3068\u306f"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30c6\u30ca\u30f3\u30c8\u5358\u4f4d"}),"\u3067\u7ba1\u7406\u3059\u308bAPI\u3002\u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u8005\u304c\u4f7f\u7528\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"GET /v1/management/tenants/{tenantId}/clients\nPOST /v1/management/tenants/{tenantId}/clients\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u7279\u5fb4"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 \u30c6\u30ca\u30f3\u30c8\u5358\u4f4d\u306e\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406"}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 \u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u8005\u6a29\u9650\u304c\u5fc5\u8981\uff08",(0,s.jsx)(n.code,{children:"client:read"}),", ",(0,s.jsx)(n.code,{children:"client:write"}),"\u7b49\uff09"]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Audit Log\u8a18\u9332"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Dry Run\u5bfe\u5fdc"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u5bfe\u6bd4"}),": \u7d44\u7e54\u30ec\u30d9\u30ebAPI = \u7d44\u7e54\u5358\u4f4d\u3067\u7ba1\u7406\uff08",(0,s.jsx)(n.code,{children:"/organizations/{orgId}/tenants/{tenantId}/..."}),"\uff09"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\u5b9f\u88c5\u306e\u5168\u4f53\u30d5\u30ed\u30fc",children:"\u5b9f\u88c5\u306e\u5168\u4f53\u30d5\u30ed\u30fc"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"1. API\u5951\u7d04\u5b9a\u7fa9\uff08Control Plane\u5c64\uff09\n   \u251c\u2500 \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9\n   \u251c\u2500 Request/Response DTO\n   \u251c\u2500 Context Creator\n   \u2514\u2500 \u6a29\u9650\u5b9a\u7fa9\uff08default\u30e1\u30bd\u30c3\u30c9\uff09\n\n2. EntryService\u5b9f\u88c5\uff08UseCase\u5c64\uff09\n   \u251c\u2500 \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\n   \u251c\u2500 \u6a29\u9650\u30c1\u30a7\u30c3\u30af\n   \u251c\u2500 Audit Log\u8a18\u9332\n   \u2514\u2500 Dry Run\u5bfe\u5fdc\n\n3. Controller\u5b9f\u88c5\uff08Controller\u5c64\uff09\n   \u2514\u2500 HTTP\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n\n4. E2E\u30c6\u30b9\u30c8\u4f5c\u6210\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\u5b9f\u88c5\u4f8b-role\u7ba1\u7406api",children:"\u5b9f\u88c5\u4f8b: Role\u7ba1\u7406API"}),"\n",(0,s.jsx)(n.p,{children:"\u65b0\u3057\u3044\u300cRole\u7ba1\u7406API\u300d\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002"}),"\n",(0,s.jsx)(n.h3,{id:"\u8981\u4ef6",children:"\u8981\u4ef6"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u30ed\u30fc\u30eb\u4f5c\u6210\uff08CREATE\uff09"}),"\n",(0,s.jsx)(n.li,{children:"\u30ed\u30fc\u30eb\u4e00\u89a7\u53d6\u5f97\uff08READ\uff09"}),"\n",(0,s.jsx)(n.li,{children:"\u30ed\u30fc\u30eb\u53d6\u5f97\uff08READ\uff09"}),"\n",(0,s.jsx)(n.li,{children:"\u30ed\u30fc\u30eb\u66f4\u65b0\uff08UPDATE\uff09"}),"\n",(0,s.jsx)(n.li,{children:"\u30ed\u30fc\u30eb\u524a\u9664\uff08DELETE\uff09"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-1-api\u5951\u7d04\u5b9a\u7fa9control-plane\u5c64",children:"Step 1: API\u5951\u7d04\u5b9a\u7fa9\uff08Control Plane\u5c64\uff09"}),"\n",(0,s.jsx)(n.h3,{id:"1-1-\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9",children:"1-1. \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,s.jsx)(n.code,{children:"libs/idp-server-control-plane/src/main/java/org/idp/server/control_plane/management/role/RoleManagementApi.java"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'package org.idp.server.control_plane.management.role;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Set;\nimport org.idp.server.control_plane.base.definition.AdminPermissions;\nimport org.idp.server.control_plane.base.definition.DefaultAdminPermission;\nimport org.idp.server.core.openid.identity.User;\nimport org.idp.server.core.openid.token.OAuthToken;\nimport org.idp.server.platform.exception.UnSupportedException;\nimport org.idp.server.platform.multi_tenancy.tenant.TenantIdentifier;\nimport org.idp.server.platform.type.RequestAttributes;\n\npublic interface RoleManagementApi {\n\n  /**\n   * \u5fc5\u8981\u6a29\u9650\u3092\u8fd4\u3059\uff08default\u30e1\u30bd\u30c3\u30c9 - \u5b9f\u88c5\u4e0d\u8981\uff09\n   *\n   * @param method \u30e1\u30bd\u30c3\u30c9\u540d\n   * @return \u5fc5\u8981\u306a\u6a29\u9650\n   */\n  default AdminPermissions getRequiredPermissions(String method) {\n    Map<String, AdminPermissions> map = new HashMap<>();\n    map.put("create", new AdminPermissions(Set.of(DefaultAdminPermission.ROLE_CREATE)));\n    map.put("findList", new AdminPermissions(Set.of(DefaultAdminPermission.ROLE_READ)));\n    map.put("get", new AdminPermissions(Set.of(DefaultAdminPermission.ROLE_READ)));\n    map.put("update", new AdminPermissions(Set.of(DefaultAdminPermission.ROLE_UPDATE)));\n    map.put("delete", new AdminPermissions(Set.of(DefaultAdminPermission.ROLE_DELETE)));\n\n    AdminPermissions adminPermissions = map.get(method);\n    if (adminPermissions == null) {\n      throw new UnSupportedException("Method " + method + " not supported");\n    }\n    return adminPermissions;\n  }\n\n  /**\n   * \u30ed\u30fc\u30eb\u4f5c\u6210\n   */\n  RoleManagementResponse create(\n      TenantIdentifier tenantIdentifier,\n      User operator,\n      OAuthToken oAuthToken,\n      RoleRegistrationRequest request,\n      RequestAttributes requestAttributes,\n      boolean dryRun);\n\n  /**\n   * \u30ed\u30fc\u30eb\u4e00\u89a7\u53d6\u5f97\n   */\n  RoleManagementResponse findList(\n      TenantIdentifier tenantIdentifier,\n      User operator,\n      OAuthToken oAuthToken,\n      RoleQueries queries,\n      RequestAttributes requestAttributes);\n\n  /**\n   * \u30ed\u30fc\u30eb\u53d6\u5f97\n   */\n  RoleManagementResponse get(\n      TenantIdentifier tenantIdentifier,\n      User operator,\n      OAuthToken oAuthToken,\n      RoleIdentifier roleIdentifier,\n      RequestAttributes requestAttributes);\n\n  /**\n   * \u30ed\u30fc\u30eb\u66f4\u65b0\n   */\n  RoleManagementResponse update(\n      TenantIdentifier tenantIdentifier,\n      User operator,\n      OAuthToken oAuthToken,\n      RoleIdentifier roleIdentifier,\n      RoleUpdateRequest request,\n      RequestAttributes requestAttributes,\n      boolean dryRun);\n\n  /**\n   * \u30ed\u30fc\u30eb\u524a\u9664\n   */\n  RoleManagementResponse delete(\n      TenantIdentifier tenantIdentifier,\n      User operator,\n      OAuthToken oAuthToken,\n      RoleIdentifier roleIdentifier,\n      RequestAttributes requestAttributes,\n      boolean dryRun);\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30dd\u30a4\u30f3\u30c8"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"default\u30e1\u30bd\u30c3\u30c9"}),": \u6a29\u9650\u81ea\u52d5\u8a08\u7b97\uff08",(0,s.jsx)(n.strong,{children:"\u5b9f\u88c5\u4e0d\u8981"}),"\uff09"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 \u5168\u30e1\u30bd\u30c3\u30c9\u7b2c\u4e00\u5f15\u6570: ",(0,s.jsx)(n.code,{children:"TenantIdentifier"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 \u5171\u901a\u5f15\u6570: ",(0,s.jsx)(n.code,{children:"User operator"}),", ",(0,s.jsx)(n.code,{children:"OAuthToken oAuthToken"}),", ",(0,s.jsx)(n.code,{children:"RequestAttributes requestAttributes"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 \u66f8\u304d\u8fbc\u307f\u64cd\u4f5c: ",(0,s.jsx)(n.code,{children:"boolean dryRun"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"1-2-request-dto\u4f5c\u6210",children:"1-2. Request DTO\u4f5c\u6210"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,s.jsx)(n.code,{children:"libs/idp-server-control-plane/src/main/java/org/idp/server/control_plane/management/role/RoleRegistrationRequest.java"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'package org.idp.server.control_plane.management.role;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport java.util.Set;\n\npublic class RoleRegistrationRequest {\n\n  @JsonProperty("role_id")\n  private String roleId;\n\n  @JsonProperty("role_name")\n  private String roleName;\n\n  @JsonProperty("description")\n  private String description;\n\n  @JsonProperty("permissions")\n  private Set<String> permissions;\n\n  // Getters/Setters\n  public String getRoleId() {\n    return roleId;\n  }\n\n  public void setRoleId(String roleId) {\n    this.roleId = roleId;\n  }\n\n  public String getRoleName() {\n    return roleName;\n  }\n\n  public void setRoleName(String roleName) {\n    this.roleName = roleName;\n  }\n\n  public String getDescription() {\n    return description;\n  }\n\n  public void setDescription(String description) {\n    this.description = description;\n  }\n\n  public Set<String> getPermissions() {\n    return permissions;\n  }\n\n  public void setPermissions(Set<String> permissions) {\n    this.permissions = permissions;\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30dd\u30a4\u30f3\u30c8"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"@JsonProperty"}),": \u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u5bfe\u5fdc"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u56de\u907f: ",(0,s.jsx)(n.code,{children:"String"}),", ",(0,s.jsx)(n.code,{children:"Set<String>"}),"\u4f7f\u7528"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"1-3-response-dto\u4f5c\u6210",children:"1-3. Response DTO\u4f5c\u6210"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,s.jsx)(n.code,{children:"libs/idp-server-control-plane/src/main/java/org/idp/server/control_plane/management/role/RoleManagementResponse.java"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'package org.idp.server.control_plane.management.role;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport java.util.Map;\n\npublic class RoleManagementResponse {\n\n  @JsonProperty("status")\n  private String status;\n\n  @JsonProperty("dry_run")\n  private boolean dryRun;\n\n  @JsonProperty("result")\n  private Map<String, Object> result;\n\n  public RoleManagementResponse(String status, Map<String, Object> result) {\n    this.status = status;\n    this.dryRun = false;\n    this.result = result;\n  }\n\n  public RoleManagementResponse(String status, boolean dryRun, Map<String, Object> result) {\n    this.status = status;\n    this.dryRun = dryRun;\n    this.result = result;\n  }\n\n  // Getters\n  public String getStatus() {\n    return status;\n  }\n\n  public boolean isDryRun() {\n    return dryRun;\n  }\n\n  public Map<String, Object> getResult() {\n    return result;\n  }\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"1-4-context-creator\u4f5c\u6210",children:"1-4. Context Creator\u4f5c\u6210"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,s.jsx)(n.code,{children:"libs/idp-server-control-plane/src/main/java/org/idp/server/control_plane/management/role/RoleRegistrationContextCreator.java"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"package org.idp.server.control_plane.management.role;\n\nimport org.idp.server.core.openid.identity.Role;\nimport org.idp.server.core.openid.identity.RoleIdentifier;\nimport org.idp.server.core.openid.identity.RoleName;\nimport org.idp.server.core.openid.identity.Permissions;\nimport org.idp.server.platform.multi_tenancy.tenant.Tenant;\n\npublic class RoleRegistrationContextCreator {\n\n  private final Tenant tenant;\n  private final RoleRegistrationRequest request;\n  private final boolean dryRun;\n\n  public RoleRegistrationContextCreator(\n      Tenant tenant,\n      RoleRegistrationRequest request,\n      boolean dryRun) {\n    this.tenant = tenant;\n    this.request = request;\n    this.dryRun = dryRun;\n  }\n\n  public RoleRegistrationContext create() {\n    // 1. \u30ea\u30af\u30a8\u30b9\u30c8 \u2192 \u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u5909\u63db\n    RoleIdentifier roleIdentifier = new RoleIdentifier(request.getRoleId());\n    RoleName roleName = new RoleName(request.getRoleName());\n    Permissions permissions = new Permissions(request.getPermissions());\n\n    // 2. Role\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u751f\u6210\n    Role role = new Role(\n        roleIdentifier,\n        roleName,\n        request.getDescription(),\n        permissions\n    );\n\n    // 3. Context\u751f\u6210\n    return new RoleRegistrationContext(tenant, role, dryRun);\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30dd\u30a4\u30f3\u30c8"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 \u30ea\u30af\u30a8\u30b9\u30c8DTO \u2192 \u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u5909\u63db"}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 \u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f7f\u7528\uff08",(0,s.jsx)(n.code,{children:"RoleIdentifier"}),", ",(0,s.jsx)(n.code,{children:"RoleName"}),", ",(0,s.jsx)(n.code,{children:"Permissions"}),"\uff09"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"1-5-context\u4f5c\u6210",children:"1-5. Context\u4f5c\u6210"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,s.jsx)(n.code,{children:"libs/idp-server-control-plane/src/main/java/org/idp/server/control_plane/management/role/RoleRegistrationContext.java"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'package org.idp.server.control_plane.management.role;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.idp.server.core.openid.identity.Role;\nimport org.idp.server.platform.multi_tenancy.tenant.Tenant;\n\npublic class RoleRegistrationContext {\n\n  private final Tenant tenant;\n  private final Role role;\n  private final boolean dryRun;\n\n  public RoleRegistrationContext(Tenant tenant, Role role, boolean dryRun) {\n    this.tenant = tenant;\n    this.role = role;\n    this.dryRun = dryRun;\n  }\n\n  public Tenant tenant() {\n    return tenant;\n  }\n\n  public Role role() {\n    return role;\n  }\n\n  public boolean isDryRun() {\n    return dryRun;\n  }\n\n  /**\n   * \u30ec\u30b9\u30dd\u30f3\u30b9\u5909\u63db\n   */\n  public RoleManagementResponse toResponse() {\n    Map<String, Object> result = new HashMap<>();\n    result.put("role_id", role.identifier().value());\n    result.put("role_name", role.name().value());\n    result.put("description", role.description());\n    result.put("permissions", role.permissions().values());\n\n    return new RoleManagementResponse("SUCCESS", dryRun, result);\n  }\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-2-entryservice\u5b9f\u88c5usecase\u5c64",children:"Step 2: EntryService\u5b9f\u88c5\uff08UseCase\u5c64\uff09"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,s.jsx)(n.code,{children:"libs/idp-server-use-cases/src/main/java/org/idp/server/usecases/control_plane/system_manager/RoleManagementEntryService.java"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'package org.idp.server.usecases.control_plane.system_manager;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.idp.server.control_plane.base.AuditLogCreator;\nimport org.idp.server.control_plane.base.definition.AdminPermissions;\nimport org.idp.server.control_plane.management.role.*;\nimport org.idp.server.core.openid.identity.Role;\nimport org.idp.server.core.openid.identity.RoleCommandRepository;\nimport org.idp.server.core.openid.identity.RoleQueryRepository;\nimport org.idp.server.core.openid.identity.User;\nimport org.idp.server.core.openid.token.OAuthToken;\nimport org.idp.server.platform.audit.AuditLog;\nimport org.idp.server.platform.audit.AuditLogPublisher;\nimport org.idp.server.platform.datasource.Transaction;\nimport org.idp.server.platform.log.LoggerWrapper;\nimport org.idp.server.platform.multi_tenancy.tenant.Tenant;\nimport org.idp.server.platform.multi_tenancy.tenant.TenantIdentifier;\nimport org.idp.server.platform.multi_tenancy.tenant.TenantQueryRepository;\nimport org.idp.server.platform.type.RequestAttributes;\n\n@Transaction\npublic class RoleManagementEntryService implements RoleManagementApi {\n\n  TenantQueryRepository tenantQueryRepository;\n  RoleCommandRepository roleCommandRepository;\n  RoleQueryRepository roleQueryRepository;\n  AuditLogPublisher auditLogPublisher;\n  LoggerWrapper log = LoggerWrapper.getLogger(RoleManagementEntryService.class);\n\n  public RoleManagementEntryService(\n      TenantQueryRepository tenantQueryRepository,\n      RoleCommandRepository roleCommandRepository,\n      RoleQueryRepository roleQueryRepository,\n      AuditLogPublisher auditLogPublisher) {\n    this.tenantQueryRepository = tenantQueryRepository;\n    this.roleCommandRepository = roleCommandRepository;\n    this.roleQueryRepository = roleQueryRepository;\n    this.auditLogPublisher = auditLogPublisher;\n  }\n\n  @Override\n  public RoleManagementResponse create(\n      TenantIdentifier tenantIdentifier,\n      User operator,\n      OAuthToken oAuthToken,\n      RoleRegistrationRequest request,\n      RequestAttributes requestAttributes,\n      boolean dryRun) {\n\n    // 1. \u5fc5\u8981\u6a29\u9650\u3092\u53d6\u5f97\n    AdminPermissions permissions = getRequiredPermissions("create");\n\n    // 2. Tenant\u3092\u53d6\u5f97\n    Tenant tenant = tenantQueryRepository.get(tenantIdentifier);\n\n    // 3. Context Creator\u4f7f\u7528\n    RoleRegistrationContextCreator contextCreator =\n        new RoleRegistrationContextCreator(tenant, request, dryRun);\n    RoleRegistrationContext context = contextCreator.create();\n\n    // 4. Audit Log\u8a18\u9332\n    AuditLog auditLog =\n        AuditLogCreator.create(\n            "RoleManagementApi.create",\n            tenant,\n            operator,\n            oAuthToken,\n            context,\n            requestAttributes);\n    auditLogPublisher.publish(auditLog);\n\n    // 5. \u6a29\u9650\u30c1\u30a7\u30c3\u30af\n    if (!permissions.includesAll(operator.permissionsAsSet())) {\n      Map<String, Object> response = new HashMap<>();\n      response.put("error", "access_denied");\n      response.put(\n          "error_description",\n          String.format(\n              "permission denied required permission %s, but %s",\n              permissions.valuesAsString(), operator.permissionsAsString()));\n      log.warn(response.toString());\n      return new RoleManagementResponse("FORBIDDEN", response);\n    }\n\n    // 6. Dry Run\u30c1\u30a7\u30c3\u30af\n    if (dryRun) {\n      return context.toResponse();\n    }\n\n    // 7. Repository\u4fdd\u5b58\n    roleCommandRepository.register(tenant, context.role());\n\n    // 8. \u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u5374\n    return context.toResponse();\n  }\n\n  @Override\n  @Transaction(readOnly = true)  // \u26a0\ufe0f \u8aad\u307f\u53d6\u308a\u5c02\u7528\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n  public RoleManagementResponse findList(\n      TenantIdentifier tenantIdentifier,\n      User operator,\n      OAuthToken oAuthToken,\n      RoleQueries queries,\n      RequestAttributes requestAttributes) {\n\n    AdminPermissions permissions = getRequiredPermissions("findList");\n\n    Tenant tenant = tenantQueryRepository.get(tenantIdentifier);\n\n    // \u8aad\u307f\u53d6\u308a\u64cd\u4f5c\u306eAudit Log\n    AuditLog auditLog =\n        AuditLogCreator.createOnRead(\n            "RoleManagementApi.findList",\n            "findList",\n            tenant,\n            operator,\n            oAuthToken,\n            requestAttributes);\n    auditLogPublisher.publish(auditLog);\n\n    if (!permissions.includesAll(operator.permissionsAsSet())) {\n      Map<String, Object> response = new HashMap<>();\n      response.put("error", "access_denied");\n      log.warn(response.toString());\n      return new RoleManagementResponse("FORBIDDEN", response);\n    }\n\n    // Repository\u547c\u3073\u51fa\u3057\n    List<Role> roles = roleQueryRepository.findAll(tenant);\n\n    // \u30ec\u30b9\u30dd\u30f3\u30b9\u751f\u6210\n    Map<String, Object> result = new HashMap<>();\n    result.put("roles", roles.stream().map(Role::toMap).collect(Collectors.toList()));\n\n    return new RoleManagementResponse("SUCCESS", result);\n  }\n\n  // get(), update(), delete() \u30e1\u30bd\u30c3\u30c9\u3082\u540c\u69d8\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u5b9f\u88c5...\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30dd\u30a4\u30f3\u30c8"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"@Transaction"}),": \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 \u8aad\u307f\u53d6\u308a\u5c02\u7528: ",(0,s.jsx)(n.code,{children:"@Transaction(readOnly = true)"})]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Context Creator\u4f7f\u7528"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 \u6a29\u9650\u30c1\u30a7\u30c3\u30af"}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Audit Log\u8a18\u9332\uff08",(0,s.jsx)(n.code,{children:"create"})," vs ",(0,s.jsx)(n.code,{children:"createOnRead"}),"\uff09"]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Dry Run\u5bfe\u5fdc"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-3-controller\u5b9f\u88c5controller\u5c64",children:"Step 3: Controller\u5b9f\u88c5\uff08Controller\u5c64\uff09"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,s.jsx)(n.code,{children:"libs/idp-server-springboot-adapter/src/main/java/org/idp/server/adapter/springboot/controller/management/RoleManagementController.java"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'package org.idp.server.adapter.springboot.controller.management;\n\nimport org.idp.server.control_plane.management.role.*;\nimport org.idp.server.core.openid.identity.RoleIdentifier;\nimport org.idp.server.core.openid.identity.User;\nimport org.idp.server.core.openid.token.OAuthToken;\nimport org.idp.server.platform.multi_tenancy.tenant.TenantIdentifier;\nimport org.idp.server.platform.type.RequestAttributes;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.security.core.annotation.AuthenticationPrincipal;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping("/v1/management/tenants/{tenantId}/roles")\npublic class RoleManagementController {\n\n  private final RoleManagementApi roleManagementApi;\n\n  public RoleManagementController(RoleManagementApi roleManagementApi) {\n    this.roleManagementApi = roleManagementApi;\n  }\n\n  /**\n   * \u30ed\u30fc\u30eb\u4f5c\u6210\n   */\n  @PostMapping\n  public ResponseEntity<RoleManagementResponse> create(\n      @PathVariable("tenantId") String tenantId,\n      @RequestBody RoleRegistrationRequest request,\n      @RequestParam(value = "dry_run", defaultValue = "false") boolean dryRun,\n      @AuthenticationPrincipal User operator,\n      @RequestAttribute OAuthToken oAuthToken,\n      @RequestAttribute RequestAttributes requestAttributes) {\n\n    TenantIdentifier tenantIdentifier = new TenantIdentifier(tenantId);\n\n    RoleManagementResponse response =\n        roleManagementApi.create(\n            tenantIdentifier, operator, oAuthToken, request, requestAttributes, dryRun);\n\n    return ResponseEntity.ok(response);\n  }\n\n  /**\n   * \u30ed\u30fc\u30eb\u4e00\u89a7\u53d6\u5f97\n   */\n  @GetMapping\n  public ResponseEntity<RoleManagementResponse> findList(\n      @PathVariable("tenantId") String tenantId,\n      @AuthenticationPrincipal User operator,\n      @RequestAttribute OAuthToken oAuthToken,\n      @RequestAttribute RequestAttributes requestAttributes) {\n\n    TenantIdentifier tenantIdentifier = new TenantIdentifier(tenantId);\n    RoleQueries queries = new RoleQueries();  // \u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306f\u8a2d\u5b9a\n\n    RoleManagementResponse response =\n        roleManagementApi.findList(\n            tenantIdentifier, operator, oAuthToken, queries, requestAttributes);\n\n    return ResponseEntity.ok(response);\n  }\n\n  /**\n   * \u30ed\u30fc\u30eb\u53d6\u5f97\n   */\n  @GetMapping("/{roleId}")\n  public ResponseEntity<RoleManagementResponse> get(\n      @PathVariable("tenantId") String tenantId,\n      @PathVariable("roleId") String roleId,\n      @AuthenticationPrincipal User operator,\n      @RequestAttribute OAuthToken oAuthToken,\n      @RequestAttribute RequestAttributes requestAttributes) {\n\n    TenantIdentifier tenantIdentifier = new TenantIdentifier(tenantId);\n    RoleIdentifier roleIdentifier = new RoleIdentifier(roleId);\n\n    RoleManagementResponse response =\n        roleManagementApi.get(tenantIdentifier, operator, oAuthToken, roleIdentifier, requestAttributes);\n\n    return ResponseEntity.ok(response);\n  }\n\n  // update(), delete() \u30e1\u30bd\u30c3\u30c9\u3082\u540c\u69d8...\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30dd\u30a4\u30f3\u30c8"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Controller = \u578b\u5909\u63db\u306e\u307f"}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"@PathVariable"}),": URL\u30d1\u30e9\u30e1\u30fc\u30bf"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"@RequestParam"}),": \u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\uff08",(0,s.jsx)(n.code,{children:"dry_run"}),"\uff09"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"@AuthenticationPrincipal"}),": \u8a8d\u8a3c\u6e08\u307f\u30e6\u30fc\u30b6\u30fc"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.code,{children:"@RequestAttribute"}),": \u30ea\u30af\u30a8\u30b9\u30c8\u5c5e\u6027"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-4-e2e\u30c6\u30b9\u30c8\u4f5c\u6210",children:"Step 4: E2E\u30c6\u30b9\u30c8\u4f5c\u6210"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,s.jsx)(n.code,{children:"e2e/spec/management/role-management.spec.js"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { v4: uuidv4 } = require('uuid');\nconst axios = require('axios');\n\ndescribe('Role Management API', () => {\n  let adminToken;\n  let tenantId;\n  let roleId;\n\n  beforeAll(async () => {\n    // 1. \u7ba1\u7406\u8005\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\n    const tokenResponse = await axios.post('http://localhost:8080/oauth/token', {\n      grant_type: 'client_credentials',\n      client_id: 'admin-client',\n      client_secret: 'admin-secret',\n      scope: 'role:read role:write'\n    });\n    adminToken = tokenResponse.data.access_token;\n\n    // 2. \u30c6\u30b9\u30c8\u30c6\u30ca\u30f3\u30c8\u4f5c\u6210\n    const tenantResponse = await axios.post(\n      'http://localhost:8080/v1/management/tenants',\n      {\n        name: 'test-tenant',\n        display_name: 'Test Tenant for Role Management'\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${adminToken}`\n        }\n      }\n    );\n    tenantId = tenantResponse.data.tenant_id;\n\n    roleId = uuidv4();\n  });\n\n  test('should create role successfully', async () => {\n    const response = await axios.post(\n      `http://localhost:8080/v1/management/tenants/${tenantId}/roles`,\n      {\n        role_id: roleId,\n        role_name: 'Admin Role',\n        description: 'Administrator role',\n        permissions: ['tenant:read', 'tenant:write', 'client:read', 'client:write']\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${adminToken}`\n        }\n      }\n    );\n\n    expect(response.status).toBe(200);\n    expect(response.data.status).toBe('SUCCESS');\n    expect(response.data.dry_run).toBe(false);\n    expect(response.data.result).toHaveProperty('role_id', roleId);\n    expect(response.data.result).toHaveProperty('role_name', 'Admin Role');\n  });\n\n  test('should support dry run mode', async () => {\n    const response = await axios.post(\n      `http://localhost:8080/v1/management/tenants/${tenantId}/roles?dry_run=true`,\n      {\n        role_id: uuidv4(),\n        role_name: 'Dry Run Role',\n        description: 'Test dry run',\n        permissions: ['tenant:read']\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${adminToken}`\n        }\n      }\n    );\n\n    expect(response.status).toBe(200);\n    expect(response.data.dry_run).toBe(true);\n  });\n\n  test('should get role list', async () => {\n    const response = await axios.get(\n      `http://localhost:8080/v1/management/tenants/${tenantId}/roles`,\n      {\n        headers: {\n          Authorization: `Bearer ${adminToken}`\n        }\n      }\n    );\n\n    expect(response.status).toBe(200);\n    expect(response.data.result.roles).toBeInstanceOf(Array);\n    expect(response.data.result.roles.length).toBeGreaterThan(0);\n  });\n\n  test('should return 403 when permission denied', async () => {\n    // \u6a29\u9650\u306e\u306a\u3044\u30c8\u30fc\u30af\u30f3\u3067\u5b9f\u884c\n    const noPermTokenResponse = await axios.post('http://localhost:8080/oauth/token', {\n      grant_type: 'client_credentials',\n      client_id: 'public-client',\n      client_secret: 'public-secret',\n      scope: 'openid'  // role:write\u6a29\u9650\u306a\u3057\n    });\n\n    try {\n      await axios.post(\n        `http://localhost:8080/v1/management/tenants/${tenantId}/roles`,\n        {\n          role_id: uuidv4(),\n          role_name: 'Forbidden Role',\n          permissions: []\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${noPermTokenResponse.data.access_token}`\n          }\n        }\n      );\n      fail('Expected 403 error');\n    } catch (error) {\n      expect(error.response.status).toBe(403);\n      expect(error.response.data.error).toBe('access_denied');\n    }\n  });\n});\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8",children:"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8"}),"\n",(0,s.jsx)(n.p,{children:"\u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebAPI\u5b9f\u88c5\u524d\u306b\u4ee5\u4e0b\u3092\u78ba\u8a8d\uff1a"}),"\n",(0,s.jsx)(n.h3,{id:"api\u5951\u7d04\u5b9a\u7fa9control-plane\u5c64",children:"API\u5951\u7d04\u5b9a\u7fa9\uff08Control Plane\u5c64\uff09"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9\uff08",(0,s.jsx)(n.code,{children:"{Domain}ManagementApi"}),"\uff09"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,s.jsx)(n.code,{children:"default\u30e1\u30bd\u30c3\u30c9"}),"\u3067\u6a29\u9650\u5b9a\u7fa9\uff08\u5b9f\u88c5\u4e0d\u8981\uff09"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Request DTO\u4f5c\u6210\uff08",(0,s.jsx)(n.code,{children:"@JsonProperty"}),"\u3067\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u5bfe\u5fdc\uff09"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Response DTO\u4f5c\u6210"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Context Creator\u4f5c\u6210\uff08\u30ea\u30af\u30a8\u30b9\u30c8 \u2192 \u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u5909\u63db\uff09"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Context\u4f5c\u6210\uff08",(0,s.jsx)(n.code,{children:"toResponse()"}),"\u30e1\u30bd\u30c3\u30c9\u5b9f\u88c5\uff09"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"entryservice\u5b9f\u88c5usecase\u5c64",children:"EntryService\u5b9f\u88c5\uff08UseCase\u5c64\uff09"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,s.jsx)(n.code,{children:"@Transaction"}),"\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u4ed8\u4e0e"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306a\u3089",(0,s.jsx)(n.code,{children:"@Transaction(readOnly = true)"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Context Creator\u4f7f\u7528"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u6a29\u9650\u30c1\u30a7\u30c3\u30af\u5b9f\u88c5"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Audit Log\u8a18\u9332\uff08",(0,s.jsx)(n.code,{children:"create"})," vs ",(0,s.jsx)(n.code,{children:"createOnRead"}),"\uff09"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Dry Run\u5bfe\u5fdc\uff08\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u306e\u307f\uff09"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"controller\u5b9f\u88c5controller\u5c64",children:"Controller\u5b9f\u88c5\uff08Controller\u5c64\uff09"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","HTTP\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u5b9a\u7fa9"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u578b\u5909\u63db\u306e\u307f\uff08\u30ed\u30b8\u30c3\u30af\u7981\u6b62\uff09"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,s.jsx)(n.code,{children:"@PathVariable"}),", ",(0,s.jsx)(n.code,{children:"@RequestParam"}),"\u9069\u5207\u4f7f\u7528"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"e2e\u30c6\u30b9\u30c8",children:"E2E\u30c6\u30b9\u30c8"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u6b63\u5e38\u7cfb\u30c6\u30b9\u30c8\uff08CREATE/READ/UPDATE/DELETE\uff09"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Dry Run\u30c6\u30b9\u30c8"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u6a29\u9650\u30a8\u30e9\u30fc\u30c6\u30b9\u30c8\uff08403\uff09"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc",children:"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc"}),"\n",(0,s.jsxs)(n.h3,{id:"\u30a8\u30e9\u30fc1-default\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3057\u307e\u3046",children:["\u30a8\u30e9\u30fc1: ",(0,s.jsx)(n.code,{children:"default\u30e1\u30bd\u30c3\u30c9"}),"\u3092\u5b9f\u88c5\u3057\u3066\u3057\u307e\u3046"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// \u274c \u9593\u9055\u3044: default\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n@Override\npublic AdminPermissions getRequiredPermissions(String method) {\n    // \u4e0d\u8981\u306a\u5b9f\u88c5\n}\n\n// \u2705 \u6b63\u3057\u3044: default\u30e1\u30bd\u30c3\u30c9\u306f\u305d\u306e\u307e\u307e\u4f7f\u7528\uff08\u5b9f\u88c5\u4e0d\u8981\uff09\npublic class RoleManagementEntryService implements RoleManagementApi {\n    // getRequiredPermissions()\u306f\u5b9f\u88c5\u4e0d\u8981\uff01\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u30a8\u30e9\u30fc2-context-creator\u672a\u4f7f\u7528",children:"\u30a8\u30e9\u30fc2: Context Creator\u672a\u4f7f\u7528"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// \u274c \u9593\u9055\u3044: EntryService\u3067DTO\u76f4\u63a5\u5909\u63db\nRole role = new Role(\n    new RoleIdentifier(request.getRoleId()),\n    // ... \u76f4\u63a5\u5909\u63db\n);\n\n// \u2705 \u6b63\u3057\u3044: Context Creator\u4f7f\u7528\nRoleRegistrationContextCreator creator =\n    new RoleRegistrationContextCreator(tenant, request, dryRun);\nRoleRegistrationContext context = creator.create();\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7",children:"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7"}),"\n",(0,s.jsx)(n.p,{children:"\u2705 \u30b7\u30b9\u30c6\u30e0\u30ec\u30d9\u30ebAPI\u5b9f\u88c5\u3092\u30de\u30b9\u30bf\u30fc\u3057\u305f\uff01"}),"\n",(0,s.jsx)(n.h3,{id:"-\u6b21\u306b\u8aad\u3080\u3079\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8",children:"\ud83d\udcd6 \u6b21\u306b\u8aad\u3080\u3079\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"./organization-level-api.md",children:"\u7d44\u7e54\u30ec\u30d9\u30ebAPI\u5b9f\u88c5\u30ac\u30a4\u30c9"})," - \u3088\u308a\u8907\u96d1\u306a\u30a2\u30af\u30bb\u30b9\u5236\u5fa1"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"./repository-implementation.md",children:"Repository\u5b9f\u88c5\u30ac\u30a4\u30c9"})," - \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u5c64\u306e\u5b9f\u88c5"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-\u8a73\u7d30\u60c5\u5831",children:"\ud83d\udd17 \u8a73\u7d30\u60c5\u5831"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/idp-server/docs/content_10_ai_developer/ai-13-control-plane",children:"AI\u958b\u767a\u8005\u5411\u3051: Control Plane\u8a73\u7d30"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/idp-server/docs/content_10_ai_developer/ai-10-use-cases",children:"AI\u958b\u767a\u8005\u5411\u3051: Use-Cases\u8a73\u7d30"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u60c5\u5831\u6e90"}),": ",(0,s.jsx)(n.a,{href:"../../../libs/idp-server-use-cases/src/main/java/org/idp/server/usecases/control_plane/system_manager/ClientManagementEntryService.java",children:"ClientManagementEntryService.java"}),"\n",(0,s.jsx)(n.strong,{children:"\u6700\u7d42\u66f4\u65b0"}),": 2025-10-12"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);