"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7955],{59467:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"content_06_developer-guide/implementation-guides/impl-10-repository-implementation","title":"Repository\u5b9f\u88c5\u30ac\u30a4\u30c9","description":"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684","source":"@site/docs/content_06_developer-guide/04-implementation-guides/impl-10-repository-implementation.md","sourceDirName":"content_06_developer-guide/04-implementation-guides","slug":"/content_06_developer-guide/implementation-guides/impl-10-repository-implementation","permalink":"/idp-server/docs/content_06_developer-guide/implementation-guides/impl-10-repository-implementation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/content_06_developer-guide/04-implementation-guides/impl-10-repository-implementation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Federation Provider\u5b9f\u88c5\u30ac\u30a4\u30c9","permalink":"/idp-server/docs/content_06_developer-guide/implementation-guides/impl-08-federation-provider"},"next":{"title":"\u8a2d\u5b9a\u7ba1\u7406API","permalink":"/idp-server/docs/content_06_developer-guide/implementation-guides/impl-11-configuration-management-api"}}');var i=r(74848),a=r(28453);const o={},l="Repository\u5b9f\u88c5\u30ac\u30a4\u30c9",s={},d=[{value:"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684",id:"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684",level:2},{value:"\u6240\u8981\u6642\u9593",id:"\u6240\u8981\u6642\u9593",level:3},{value:"\u524d\u63d0\u77e5\u8b58",id:"\u524d\u63d0\u77e5\u8b58",level:3},{value:"Repository\u3068\u306f",id:"repository\u3068\u306f",level:2},{value:"Query/Command\u5206\u96e2",id:"querycommand\u5206\u96e2",level:2},{value:"Step 1: Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9\uff08Core\u5c64\uff09",id:"step-1-repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9core\u5c64",level:2},{value:"Step 2: DataSource\u5b9f\u88c5\uff08Adapter\u5c64\uff09",id:"step-2-datasource\u5b9f\u88c5adapter\u5c64",level:2},{value:"Step 3: Mapper\u4f5c\u6210",id:"step-3-mapper\u4f5c\u6210",level:2},{value:"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8",id:"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8",level:2},{value:"Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08Core\u5c64\uff09",id:"repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9core\u5c64",level:3},{value:"DataSource\u5b9f\u88c5\uff08Adapter\u5c64\uff09",id:"datasource\u5b9f\u88c5adapter\u5c64",level:3},{value:"Mapper\u5b9f\u88c5",id:"mapper\u5b9f\u88c5",level:3},{value:"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc",id:"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc",level:2},{value:"\u30a8\u30e9\u30fc1: Adapter\u5c64\u3067\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af",id:"\u30a8\u30e9\u30fc1-adapter\u5c64\u3067\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af",level:3},{value:"\u30a8\u30e9\u30fc2: TransactionManager\u672a\u4f7f\u7528",id:"\u30a8\u30e9\u30fc2-transactionmanager\u672a\u4f7f\u7528",level:3},{value:"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7",id:"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7",level:2},{value:"\ud83d\udcd6 \u6b21\u306b\u8aad\u3080\u3079\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8",id:"-\u6b21\u306b\u8aad\u3080\u3079\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8",level:3},{value:"\ud83d\udd17 \u8a73\u7d30\u60c5\u5831",id:"-\u8a73\u7d30\u60c5\u5831",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"repository\u5b9f\u88c5\u30ac\u30a4\u30c9",children:"Repository\u5b9f\u88c5\u30ac\u30a4\u30c9"})}),"\n",(0,i.jsx)(n.h2,{id:"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684",children:"\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u76ee\u7684"}),"\n",(0,i.jsx)(n.p,{children:"**Repository\uff08Query/Command\uff09**\u3092\u3001DataSource-SqlExecutor\u30d1\u30bf\u30fc\u30f3\u3067\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u304c\u76ee\u6a19\u3067\u3059\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"\u6240\u8981\u6642\u9593",children:"\u6240\u8981\u6642\u9593"}),"\n",(0,i.jsxs)(n.p,{children:["\u23f1\ufe0f ",(0,i.jsx)(n.strong,{children:"\u7d0430\u5206"}),"\uff08\u5b9f\u88c5 + \u30c6\u30b9\u30c8\uff09"]}),"\n",(0,i.jsx)(n.h3,{id:"\u524d\u63d0\u77e5\u8b58",children:"\u524d\u63d0\u77e5\u8b58"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../03-common-patterns.md#1-repository-%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3",children:"03. \u5171\u901a\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"repository\u3068\u306f",children:"Repository\u3068\u306f"}),"\n",(0,i.jsx)(n.p,{children:"\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u3092\u62bd\u8c61\u5316\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Core\u5c64: Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9\n  \u2193 (\u5b9f\u88c5)\nAdapter\u5c64: DataSource\u5b9f\u88c5\uff08SQL\u5b9f\u884c\uff09\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u539f\u5247"}),": ",(0,i.jsx)(n.strong,{children:"Adapter\u5c64\u306fSQL\u306e\u307f\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u7981\u6b62"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"querycommand\u5206\u96e2",children:"Query/Command\u5206\u96e2"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// Query Repository - \u8aad\u307f\u53d6\u308a\u5c02\u7528\npublic interface RoleQueryRepository {\n    Role get(Tenant tenant, RoleIdentifier roleIdentifier);\n    Optional<Role> find(Tenant tenant, RoleIdentifier roleIdentifier);\n    boolean exists(Tenant tenant, RoleIdentifier roleIdentifier);\n    List<Role> findAll(Tenant tenant);\n}\n\n// Command Repository - \u66f8\u304d\u8fbc\u307f\u5c02\u7528\npublic interface RoleCommandRepository {\n    void register(Tenant tenant, Role role);\n    void update(Tenant tenant, Role role);\n    void delete(Tenant tenant, RoleIdentifier roleIdentifier);\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-1-repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9core\u5c64",children:"Step 1: Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u5b9a\u7fa9\uff08Core\u5c64\uff09"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,i.jsx)(n.code,{children:"libs/idp-server-core/src/main/java/org/idp/server/core/openid/identity/role/RoleQueryRepository.java"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.idp.server.core.openid.identity.role;\n\nimport java.util.List;\nimport java.util.Optional;\nimport org.idp.server.platform.multi_tenancy.tenant.Tenant;\n\npublic interface RoleQueryRepository {\n\n  /**\n   * \u30ed\u30fc\u30eb\u53d6\u5f97\uff08\u5fc5\u9808\u5b58\u5728\uff09\n   *\n   * @param tenant \u30c6\u30ca\u30f3\u30c8\uff08\u5fc5\u305a\u7b2c\u4e00\u5f15\u6570\uff09\n   * @param roleIdentifier \u30ed\u30fc\u30ebID\n   * @return \u30ed\u30fc\u30eb\n   * @throws RoleNotFoundException \u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\n   */\n  Role get(Tenant tenant, RoleIdentifier roleIdentifier);\n\n  /**\n   * \u30ed\u30fc\u30eb\u691c\u7d22\uff08\u4efb\u610f\u5b58\u5728\uff09\n   *\n   * @param tenant \u30c6\u30ca\u30f3\u30c8\n   * @param roleIdentifier \u30ed\u30fc\u30ebID\n   * @return \u30ed\u30fc\u30eb\uff08Optional\uff09\n   */\n  Optional<Role> find(Tenant tenant, RoleIdentifier roleIdentifier);\n\n  /**\n   * \u30ed\u30fc\u30eb\u5b58\u5728\u30c1\u30a7\u30c3\u30af\n   *\n   * @param tenant \u30c6\u30ca\u30f3\u30c8\n   * @param roleIdentifier \u30ed\u30fc\u30ebID\n   * @return \u5b58\u5728\u3059\u308b\u5834\u5408true\n   */\n  boolean exists(Tenant tenant, RoleIdentifier roleIdentifier);\n\n  /**\n   * \u30ed\u30fc\u30eb\u4e00\u89a7\u53d6\u5f97\n   *\n   * @param tenant \u30c6\u30ca\u30f3\u30c8\n   * @return \u30ed\u30fc\u30eb\u30ea\u30b9\u30c8\n   */\n  List<Role> findAll(Tenant tenant);\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,i.jsx)(n.code,{children:"libs/idp-server-core/src/main/java/org/idp/server/core/openid/identity/role/RoleCommandRepository.java"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.idp.server.core.openid.identity.role;\n\nimport org.idp.server.platform.multi_tenancy.tenant.Tenant;\n\npublic interface RoleCommandRepository {\n\n  /**\n   * \u30ed\u30fc\u30eb\u767b\u9332\n   *\n   * @param tenant \u30c6\u30ca\u30f3\u30c8\uff08\u5fc5\u305a\u7b2c\u4e00\u5f15\u6570\uff09\n   * @param role \u30ed\u30fc\u30eb\n   */\n  void register(Tenant tenant, Role role);\n\n  /**\n   * \u30ed\u30fc\u30eb\u66f4\u65b0\n   *\n   * @param tenant \u30c6\u30ca\u30f3\u30c8\n   * @param role \u30ed\u30fc\u30eb\n   */\n  void update(Tenant tenant, Role role);\n\n  /**\n   * \u30ed\u30fc\u30eb\u524a\u9664\n   *\n   * @param tenant \u30c6\u30ca\u30f3\u30c8\n   * @param roleIdentifier \u30ed\u30fc\u30ebID\n   */\n  void delete(Tenant tenant, RoleIdentifier roleIdentifier);\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-2-datasource\u5b9f\u88c5adapter\u5c64",children:"Step 2: DataSource\u5b9f\u88c5\uff08Adapter\u5c64\uff09"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,i.jsx)(n.code,{children:"libs/idp-server-core-adapter/src/main/java/org/idp/server/adapter/datasource/role/RoleDataSource.java"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.idp.server.adapter.datasource.role;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\nimport java.util.stream.Collectors;\nimport org.idp.server.core.openid.identity.role.*;\nimport org.idp.server.platform.datasource.SqlExecutor;\nimport org.idp.server.platform.datasource.TransactionManager;\nimport org.idp.server.platform.multi_tenancy.tenant.Tenant;\n\n/**\n * Role DataSource implementation\n *\n * \u26a0\ufe0f \u539f\u5247: SQL\u5b9f\u884c\u306e\u307f\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u7981\u6b62\n */\npublic class RoleDataSource implements RoleQueryRepository, RoleCommandRepository {\n\n  private final SqlExecutor sqlExecutor;\n\n  public RoleDataSource(SqlExecutor sqlExecutor) {\n    this.sqlExecutor = sqlExecutor;\n  }\n\n  // ========== Query Repository\u5b9f\u88c5 ==========\n\n  @Override\n  public Role get(Tenant tenant, RoleIdentifier roleIdentifier) {\n    // \u26a0\ufe0f Tenant\u7b2c\u4e00\u5f15\u6570\u5fc5\u9808\n    TransactionManager.setTenantId(tenant.identifier().value());\n\n    String sql = """\n        SELECT role_id, role_name, description, permissions\n        FROM role\n        WHERE tenant_id = ? AND role_id = ?\n        """;\n\n    Map<String, Object> row = sqlExecutor.selectOne(\n        sql,\n        tenant.identifier().value(),\n        roleIdentifier.value()\n    );\n\n    if (row == null) {\n      throw new RoleNotFoundException(roleIdentifier);\n    }\n\n    return RoleMapper.map(row);\n  }\n\n  @Override\n  public Optional<Role> find(Tenant tenant, RoleIdentifier roleIdentifier) {\n    TransactionManager.setTenantId(tenant.identifier().value());\n\n    String sql = """\n        SELECT role_id, role_name, description, permissions\n        FROM role\n        WHERE tenant_id = ? AND role_id = ?\n        """;\n\n    Map<String, Object> row = sqlExecutor.selectOne(\n        sql,\n        tenant.identifier().value(),\n        roleIdentifier.value()\n    );\n\n    return row == null ? Optional.empty() : Optional.of(RoleMapper.map(row));\n  }\n\n  @Override\n  public boolean exists(Tenant tenant, RoleIdentifier roleIdentifier) {\n    TransactionManager.setTenantId(tenant.identifier().value());\n\n    String sql = """\n        SELECT COUNT(*) as count\n        FROM role\n        WHERE tenant_id = ? AND role_id = ?\n        """;\n\n    Map<String, Object> row = sqlExecutor.selectOne(\n        sql,\n        tenant.identifier().value(),\n        roleIdentifier.value()\n    );\n\n    return ((Number) row.get("count")).intValue() > 0;\n  }\n\n  @Override\n  public List<Role> findAll(Tenant tenant) {\n    TransactionManager.setTenantId(tenant.identifier().value());\n\n    String sql = """\n        SELECT role_id, role_name, description, permissions\n        FROM role\n        WHERE tenant_id = ?\n        ORDER BY created_at DESC\n        """;\n\n    List<Map<String, Object>> rows = sqlExecutor.selectList(\n        sql,\n        tenant.identifier().value()\n    );\n\n    return rows.stream()\n        .map(RoleMapper::map)\n        .collect(Collectors.toList());\n  }\n\n  // ========== Command Repository\u5b9f\u88c5 ==========\n\n  @Override\n  public void register(Tenant tenant, Role role) {\n    TransactionManager.setTenantId(tenant.identifier().value());\n\n    String sql = """\n        INSERT INTO role (tenant_id, role_id, role_name, description, permissions, created_at, updated_at)\n        VALUES (?, ?, ?, ?, ?::jsonb, NOW(), NOW())\n        """;\n\n    sqlExecutor.execute(\n        sql,\n        tenant.identifier().value(),\n        role.identifier().value(),\n        role.name().value(),\n        role.description(),\n        role.permissions().toJson()  // JSONB\u5217\n    );\n  }\n\n  @Override\n  public void update(Tenant tenant, Role role) {\n    TransactionManager.setTenantId(tenant.identifier().value());\n\n    String sql = """\n        UPDATE role\n        SET role_name = ?, description = ?, permissions = ?::jsonb, updated_at = NOW()\n        WHERE tenant_id = ? AND role_id = ?\n        """;\n\n    sqlExecutor.execute(\n        sql,\n        role.name().value(),\n        role.description(),\n        role.permissions().toJson(),\n        tenant.identifier().value(),\n        role.identifier().value()\n    );\n  }\n\n  @Override\n  public void delete(Tenant tenant, RoleIdentifier roleIdentifier) {\n    TransactionManager.setTenantId(tenant.identifier().value());\n\n    String sql = """\n        DELETE FROM role\n        WHERE tenant_id = ? AND role_id = ?\n        """;\n\n    sqlExecutor.execute(\n        sql,\n        tenant.identifier().value(),\n        roleIdentifier.value()\n    );\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"step-3-mapper\u4f5c\u6210",children:"Step 3: Mapper\u4f5c\u6210"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u30d5\u30a1\u30a4\u30eb"}),": ",(0,i.jsx)(n.code,{children:"libs/idp-server-core-adapter/src/main/java/org/idp/server/adapter/datasource/role/RoleMapper.java"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.idp.server.adapter.datasource.role;\n\nimport java.util.Map;\nimport java.util.Set;\nimport org.idp.server.core.openid.identity.role.*;\nimport org.idp.server.platform.converter.JsonConverter;\n\npublic class RoleMapper {\n\n  private static final JsonConverter converter = JsonConverter.snakeCaseInstance();\n\n  /**\n   * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u884c \u2192 Role\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u5909\u63db\n   */\n  public static Role map(Map<String, Object> row) {\n    RoleIdentifier roleIdentifier = new RoleIdentifier((String) row.get("role_id"));\n    RoleName roleName = new RoleName((String) row.get("role_name"));\n    String description = (String) row.get("description");\n\n    // JSONB \u2192 Set<String>\u5909\u63db\n    String permissionsJson = (String) row.get("permissions");\n    Set<String> permissionsSet = converter.read(permissionsJson, Set.class);\n    Permissions permissions = new Permissions(permissionsSet);\n\n    return new Role(roleIdentifier, roleName, description, permissions);\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8",children:"\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8"}),"\n",(0,i.jsx)(n.p,{children:"Repository\u5b9f\u88c5\u524d\u306b\u4ee5\u4e0b\u3092\u78ba\u8a8d\uff1a"}),"\n",(0,i.jsx)(n.h3,{id:"repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9core\u5c64",children:"Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08Core\u5c64\uff09"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"Tenant\u7b2c\u4e00\u5f15\u6570"}),"\uff08\u5168\u30e1\u30bd\u30c3\u30c9\uff09"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Query/Command\u5206\u96e2"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u547d\u540d\u898f\u5247: ",(0,i.jsx)(n.code,{children:"get()"}),"\u5fc5\u9808\u5b58\u5728, ",(0,i.jsx)(n.code,{children:"find()"}),"\u4efb\u610f\u5b58\u5728, ",(0,i.jsx)(n.code,{children:"exists()"}),"\u5224\u5b9a"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"datasource\u5b9f\u88c5adapter\u5c64",children:"DataSource\u5b9f\u88c5\uff08Adapter\u5c64\uff09"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"TransactionManager.setTenantId()"}),"\u5b9f\u884c\uff08RLS\u5bfe\u5fdc\uff09"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.strong,{children:"SQL\u306e\u307f\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u7981\u6b62"})]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","PreparedStatement\u4f7f\u7528\uff08SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5bfe\u7b56\uff09"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Mapper\u4f7f\u7528\uff08\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u884c \u2192 \u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u5909\u63db\uff09"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"mapper\u5b9f\u88c5",children:"Mapper\u5b9f\u88c5"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,i.jsx)(n.code,{children:"JsonConverter.snakeCaseInstance()"}),"\u4f7f\u7528\uff08JSONB\u5217\uff09"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\uff08",(0,i.jsx)(n.code,{children:"RoleIdentifier"}),", ",(0,i.jsx)(n.code,{children:"RoleName"}),"\u7b49\uff09"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc",children:"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc"}),"\n",(0,i.jsx)(n.h3,{id:"\u30a8\u30e9\u30fc1-adapter\u5c64\u3067\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af",children:"\u30a8\u30e9\u30fc1: Adapter\u5c64\u3067\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// \u274c \u9593\u9055\u3044: Adapter\u5c64\u3067\u30d3\u30b8\u30cd\u30b9\u5224\u5b9a\npublic Role get(Tenant tenant, RoleIdentifier roleIdentifier) {\n    String sql = "SELECT * FROM role WHERE tenant_id = ? AND role_id = ?";\n    Map<String, Object> row = sqlExecutor.selectOne(sql, tenant.value(), roleIdentifier.value());\n\n    // \u274c \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u7981\u6b62\n    if ("ORGANIZER".equals(tenant.type())) {\n        // ...\n    }\n\n    return RoleMapper.map(row);\n}\n\n// \u2705 \u6b63\u3057\u3044: SQL\u306e\u307f\npublic Role get(Tenant tenant, RoleIdentifier roleIdentifier) {\n    TransactionManager.setTenantId(tenant.identifier().value());\n    String sql = "SELECT * FROM role WHERE tenant_id = ? AND role_id = ?";\n    Map<String, Object> row = sqlExecutor.selectOne(sql, tenant.value(), roleIdentifier.value());\n    return RoleMapper.map(row);\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u30a8\u30e9\u30fc2-transactionmanager\u672a\u4f7f\u7528",children:"\u30a8\u30e9\u30fc2: TransactionManager\u672a\u4f7f\u7528"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// \u274c \u9593\u9055\u3044: RLS\u8a2d\u5b9a\u306a\u3057\npublic void register(Tenant tenant, Role role) {\n    String sql = "INSERT INTO role (...) VALUES (...)";\n    sqlExecutor.execute(sql, ...);  // RLS\u30a8\u30e9\u30fc\n}\n\n// \u2705 \u6b63\u3057\u3044: TransactionManager\u4f7f\u7528\npublic void register(Tenant tenant, Role role) {\n    TransactionManager.setTenantId(tenant.identifier().value());  // \u2705 RLS\u8a2d\u5b9a\n    String sql = "INSERT INTO role (...) VALUES (...)";\n    sqlExecutor.execute(sql, ...);\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7",children:"\u6b21\u306e\u30b9\u30c6\u30c3\u30d7"}),"\n",(0,i.jsx)(n.p,{children:"\u2705 Repository\u5b9f\u88c5\u3092\u30de\u30b9\u30bf\u30fc\u3057\u305f\uff01"}),"\n",(0,i.jsx)(n.h3,{id:"-\u6b21\u306b\u8aad\u3080\u3079\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8",children:"\ud83d\udcd6 \u6b21\u306b\u8aad\u3080\u3079\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/idp-server/docs/content_06_developer-guide/implementation-guides/impl-12-plugin-implementation",children:"Plugin\u5b9f\u88c5\u30ac\u30a4\u30c9"})," - \u62e1\u5f35\u6a5f\u80fd\u306e\u5b9f\u88c5"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/idp-server/docs/content_06_developer-guide/implementation-guides/impl-17-external-integration",children:"\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u9023\u643a\u30ac\u30a4\u30c9"})," - HttpRequestExecutor\u4f7f\u7528"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-\u8a73\u7d30\u60c5\u5831",children:"\ud83d\udd17 \u8a73\u7d30\u60c5\u5831"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../content_10_ai_developer/ai-20-adapters.md#datasource---sqlexecutor-%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3",children:"AI\u958b\u767a\u8005\u5411\u3051: Adapters\u8a73\u7d30"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u60c5\u5831\u6e90"}),": ",(0,i.jsx)(n.a,{href:"../../../libs/idp-server-core-adapter/src/main/java/org/idp/server/adapter/datasource/oidc/client/ClientConfigurationDataSource.java",children:"ClientConfigurationDataSource.java"}),"\n",(0,i.jsx)(n.strong,{children:"\u6700\u7d42\u66f4\u65b0"}),": 2025-10-12"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(96540);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);